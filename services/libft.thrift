// Typedefs
typedef e_bool t_bool
typedef e_mod t_mod
typedef s_equa t_equa
typedef s_file t_file
typedef s_list t_list
typedef s_print t_print
typedef s_vec t_vec

// Enums
enum e_bool {
	FALSE = 0,
	TRUE = 1
}
enum e_mod {
	HH = 0,
	H = 1,
	J = 2,
	LL = 3,
	L = 4,
	X = 5,
	Z = 6
}

// Services
service libft {
	void fill_buffer (0: string str, 1: byte c, 2: i32 mode, 3: binary s),
	void wchar_tobuffer (0: binary s, 1: binary c),
	i32 ft_atoi (0: string str),
	string ft_itoa (0: i32 n),
	i32 ft_dprintf (0: binary format, 1: i32 fd),
	i32 ft_printf (0: binary format),
	i32 ft_sprintf (0: binary str, 1: binary format),
	void ft_vprintf (0: binary s),
	void ft_putchar (0: byte c),
	void ft_putchar_fd (0: byte c, 1: i32 fd),
	void ft_putendl (0: string s),
	void ft_putendl_fd (0: string s, 1: i32 fd),
	void ft_putnbr (0: i32 nb),
	void ft_putnbr_fd (0: i32 fd, 1: i32 n),
	void ft_putstr (0: string str),
	void ft_putstr_fd (0: string s, 1: i32 fd),
	void ft_putwchar (0: binary c),
	void ft_putwstr (0: binary wstr),
	string ft_retsplit (0: string str, 1: byte c, 2: i32 n),
	i32 get_next_line (0: binary line, 1: binary fd),
	void handle_post_digit (0: i32 i, 1: i32 mode, 2: binary s),
	void handle_signs (0: binary s),
	void process_flag (0: binary s),
	void handle_nb (0: binary s),
	void pad (0: binary s),
	void handle_bonus (0: binary s),
	void handle_special (0: binary s),
	void handle_zero (0: binary s),
	void handle_str (0: binary s),
	void ft_lstadd (0: binary alst, 1: binary new),
	void ft_lstdel (0: binary alst, 1: binary del),
	void ft_lstdelone (0: binary alst, 1: binary del),
	void ft_lstiter (0: binary lst, 1: binary f),
	binary ft_lstmap (0: binary f, 1: binary lst),
	binary ft_lstnew (0: i64 content_size, 1: binary content),
	binary ft_abs (0: binary n),
	binary ft_equanew (0: double a, 1: double b, 2: double x, 3: double y),
	binary ft_get_perpendicular_vec (0: t_bool way, 1: binary a),
	binary ft_getmidcoor (0: binary a, 1: binary b),
	binary ft_vecnew (0: double x, 1: double y),
	void ft_swapvec (0: binary a, 1: binary b),
	binary ft_bzero (0: i64 len, 1: binary str),
	binary ft_memalloc (0: i64 size),
	binary ft_memccpy (0: i32 c, 1: i64 n, 2: binary dst, 3: binary src),
	binary ft_memchr (0: i32 c, 1: i64 n, 2: binary s),
	i32 ft_memcmp (0: i64 n, 1: binary s1, 2: binary s2),
	binary ft_memcpy (0: i64 n, 1: binary dst, 2: binary src),
	void ft_memdel (0: binary ap),
	binary ft_memmove (0: i64 n, 1: binary dst, 2: binary src),
	binary ft_memset (0: i32 c, 1: i64 len, 2: binary str),
	string ft_chartostr (0: byte c),
	byte ft_chrcstr (0: string hay, 1: string needle, 2: byte c),
	byte ft_chrstr (0: string hay, 1: string needle),
	i32 ft_isalnum (0: i32 c),
	i32 ft_isalpha (0: i32 c),
	i32 ft_isascii (0: i32 c),
	i32 ft_isdigit (0: i32 c),
	i32 ft_isprint (0: i32 c),
	string ft_strcat (0: string s1, 1: string s2),
	string ft_strchr (0: string str, 1: i32 c),
	void ft_strclr (0: string s),
	i32 ft_strcmp (0: string s1, 1: string s2),
	i64 ft_strcount (0: string haystack, 1: byte needle),
	i32 ft_strcpos (0: string haystack, 1: byte needle),
	string ft_strcpy (0: string dst, 1: string src),
	string ft_strcsub (0: string s, 1: byte c),
	void ft_strdel (0: binary as),
	string ft_strdup (0: string src),
	i32 ft_strequ (0: string s1, 1: string s2),
	void ft_striter (0: string s, 1: binary f),
	void ft_striteri (0: string s, 1: binary f),
	string ft_strjoin (0: string s1, 1: string s2),
	string ft_strjoin_char (0: string s1, 1: byte c),
	string ft_strjoinfree (0: string s1, 1: string s2),
	i64 ft_strlcat (0: string s1, 1: binary s2, 2: i64 size),
	i32 ft_strlen (0: string str),
	string ft_strmap (0: binary f, 1: string s),
	string ft_strmapi (0: binary f, 1: string s),
	string ft_strncat (0: string s1, 1: string s2, 2: i64 n),
	i32 ft_strncmp (0: string s1, 1: string s2, 2: i64 n),
	string ft_strncpy (0: string dst, 1: string src, 2: i64 n),
	i32 ft_strnequ (0: string s1, 1: string s2, 2: i64 n),
	string ft_strnew (0: i64 size),
	string ft_strnstr (0: string haystack, 1: string needle, 2: i64 len),
	string ft_strnsub (0: string s, 1: i32 n),
	string ft_strrchr (0: string str, 1: i32 c),
	string ft_strrev (0: string str),
	i32 ft_strrpos (0: string haystack, 1: byte needle),
	binary ft_strsplit (0: string s, 1: byte c),
	string ft_strstr (0: string haystack, 1: string needle),
	string ft_strsub (0: string s, 1: i64 len, 2: binary start),
	string ft_strtrim (0: string s),
	i32 ft_tolower (0: i32 c),
	i32 ft_toupper (0: i32 c),
	i64 ft_wstrlen (0: binary wstr),
	binary ft_wstrnsub (0: i32 n, 1: binary s),
}
