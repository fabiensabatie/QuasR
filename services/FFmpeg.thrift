service FFmpeg {
	binary atomic_exchange (0: binary object, 1: binary desired),
	i32 atomic_compare_exchange_strong (0: binary expected, 1: binary object, 2: binary desired),
	void avpriv_atomic_lock (),
	void avpriv_atomic_unlock (),
	binary atomic_exchange (0: binary object, 1: binary desired),
	binary atomic_load (0: binary object),
	i32 atomic_compare_exchange_strong (0: binary expected, 1: binary object, 2: binary desired),
	void atomic_store (0: binary object, 1: binary desired),
	void atomic_thread_fence (0: i32 order),
	binary atomic_fetch_add (0: binary object, 1: binary operand),
	binary atomic_fetch_and (0: binary object, 1: binary operand),
	binary atomic_fetch_or (0: binary object, 1: binary operand),
	binary atomic_fetch_xor (0: binary object, 1: binary operand),
	binary atomic_load (0: binary object),
	i32 atomic_compare_exchange_strong (0: binary expected, 1: binary object, 2: binary desired),
	void atomic_store (0: binary object, 1: binary desired),
	i32 atomic_compare_exchange_strong (0: binary expected, 1: binary object, 2: binary desired),
	binary AVS_ScriptEnvironment (),
	binary avs_load_library (),
	binary avs_array_elt (0: AVS_Value v, 1: i32 index),
	binary avs_new_value_array (0: AVS_Value v0, 1: i32 size),
	binary avs_new_value_bool (0: i32 v0),
	binary avs_new_value_clip (0: AVS_Clip v0),
	binary avs_new_value_error (0: binary v0),
	binary avs_new_value_float (0: double v0),
	binary avs_new_value_int (0: i32 v0),
	binary avs_new_value_string (0: binary v0),
	binary avs_copy_frame (0: AVS_VideoFrame f),
	binary avs_new_frame (0: AVS_ScriptEnvironment env, 1: binary vi),
	binary avs_new_video_frame (0: AVS_ScriptEnvironment env, 1: binary vi),
	binary avs_get_write_ptr (0: binary p),
	binary avs_audio_samples_from_bytes (0: INT64 bytes, 1: binary p),
	binary avs_audio_samples_from_frames (0: INT64 frames, 1: binary p),
	binary avs_bytes_from_audio_samples (0: INT64 samples, 1: binary p),
	binary avs_as_array (0: AVS_Value v),
	binary avs_get_read_ptr (0: binary p),
	binary avs_as_error (0: AVS_Value v),
	binary avs_as_string (0: AVS_Value v),
	binary avs_as_float (0: AVS_Value v),
	binary avs_array_size (0: AVS_Value v),
	binary avs_as_bool (0: AVS_Value v),
	binary avs_as_int (0: AVS_Value v),
	binary avs_audio_channels (0: binary p),
	binary avs_bytes_per_audio_sample (0: binary p),
	binary avs_bytes_per_channel_sample (0: binary p),
	binary avs_defined (0: AVS_Value v),
	binary avs_frames_from_audio_samples (0: INT64 samples, 1: binary p),
	binary avs_get_height (0: binary p),
	binary avs_get_pitch (0: binary p),
	binary avs_get_row_size (0: binary p),
	binary avs_has_audio (0: binary p),
	binary avs_has_video (0: binary p),
	binary avs_is_array (0: AVS_Value v),
	binary avs_is_bff (0: binary p),
	binary avs_is_bool (0: AVS_Value v),
	binary avs_is_clip (0: AVS_Value v),
	binary avs_is_error (0: AVS_Value v),
	binary avs_is_field_based (0: binary p),
	binary avs_is_float (0: AVS_Value v),
	binary avs_is_int (0: AVS_Value v),
	binary avs_is_parity_known (0: binary p),
	binary avs_is_planar (0: binary p),
	binary avs_is_property (0: binary p, 1: i32 property),
	binary avs_is_rgb24 (0: binary p),
	binary avs_is_rgb32 (0: binary p),
	binary avs_is_rgb (0: binary p),
	binary avs_is_same_colorspace (0: AVS_VideoInfo x, 1: AVS_VideoInfo y),
	binary avs_is_string (0: AVS_Value v),
	binary avs_is_tff (0: binary p),
	binary avs_is_yuv (0: binary p),
	binary avs_is_yuy2 (0: binary p),
	binary avs_sample_type (0: binary p),
	binary avs_samples_per_second (0: binary p),
	binary avs_clear_property (0: AVS_VideoInfo p, 1: i32 property),
	binary avs_free_library (0: AVS_Library library),
	binary avs_release_frame (0: AVS_VideoFrame f),
	binary avs_set_field_based (0: AVS_VideoInfo p, 1: i32 isfieldbased),
	binary avs_set_fps (0: AVS_VideoInfo p, 1: binary denominator, 2: binary numerator),
	binary avs_set_property (0: AVS_VideoInfo p, 1: i32 property),
	binary avs_array_elt (0: AVS_Value v, 1: i32 index),
	binary avs_new_value_array (0: AVS_Value v0, 1: i32 size),
	binary avs_new_value_bool (0: i32 v0),
	binary avs_new_value_clip (0: AVS_Clip v0),
	binary avs_new_value_error (0: binary v0),
	binary avs_new_value_float (0: double v0),
	binary avs_new_value_int (0: i32 v0),
	binary avs_new_value_string (0: binary v0),
	binary avs_copy_frame (0: AVS_VideoFrame f),
	binary avs_new_frame (0: AVS_ScriptEnvironment env, 1: binary vi),
	binary avs_new_video_frame (0: AVS_ScriptEnvironment env, 1: binary vi),
	binary avs_audio_samples_from_bytes (0: INT64 bytes, 1: binary p),
	binary avs_audio_samples_from_frames (0: INT64 frames, 1: binary p),
	binary avs_bytes_from_audio_samples (0: INT64 samples, 1: binary p),
	binary avs_as_array (0: AVS_Value v),
	binary avs_as_error (0: AVS_Value v),
	binary avs_as_string (0: AVS_Value v),
	binary avs_get_read_ptr_p (0: binary p, 1: i32 plane),
	binary avs_get_read_ptr (0: binary p),
	binary avs_as_float (0: AVS_Value v),
	binary avs_array_size (0: AVS_Value v),
	binary avs_as_bool (0: AVS_Value v),
	binary avs_as_int (0: AVS_Value v),
	binary avs_audio_channels (0: binary p),
	binary avs_bits_per_pixel (0: binary p),
	binary avs_bmp_size (0: binary vi),
	binary avs_bytes_from_pixels (0: binary p, 1: i32 pixels),
	binary avs_bytes_per_audio_sample (0: binary p),
	binary avs_bytes_per_channel_sample (0: binary p),
	binary avs_defined (0: AVS_Value v),
	binary avs_frames_from_audio_samples (0: INT64 samples, 1: binary p),
	binary avs_get_height_p (0: binary p, 1: i32 plane),
	binary avs_get_height (0: binary p),
	binary avs_get_pitch_p (0: binary p, 1: i32 plane),
	binary avs_get_pitch (0: binary p),
	binary avs_get_row_size_p (0: binary p, 1: i32 plane),
	binary avs_get_row_size (0: binary p),
	binary avs_has_audio (0: binary p),
	binary avs_has_video (0: binary p),
	binary avs_is_array (0: AVS_Value v),
	binary avs_is_bff (0: binary p),
	binary avs_is_bool (0: AVS_Value v),
	binary avs_is_clip (0: AVS_Value v),
	binary avs_is_color_space (0: binary p, 1: i32 c_space),
	binary avs_is_error (0: AVS_Value v),
	binary avs_is_field_based (0: binary p),
	binary avs_is_float (0: AVS_Value v),
	binary avs_is_int (0: AVS_Value v),
	binary avs_is_parity_known (0: binary p),
	binary avs_is_planar (0: binary p),
	binary avs_is_property (0: binary p, 1: i32 property),
	binary avs_is_rgb24 (0: binary p),
	binary avs_is_rgb32 (0: binary p),
	binary avs_is_rgb (0: binary p),
	binary avs_is_same_colorspace (0: AVS_VideoInfo x, 1: AVS_VideoInfo y),
	binary avs_is_string (0: AVS_Value v),
	binary avs_is_tff (0: binary p),
	binary avs_is_writable (0: binary p),
	binary avs_is_yuv (0: binary p),
	binary avs_is_yuy2 (0: binary p),
	binary avs_is_yv12 (0: binary p),
	binary avs_row_size (0: binary p),
	binary avs_sample_type (0: binary p),
	binary avs_samples_per_second (0: binary p),
	binary avs_get_write_ptr_p (0: binary p, 1: i32 plane),
	binary avs_get_write_ptr (0: binary p),
	binary avs_clear_property (0: AVS_VideoInfo p, 1: i32 property),
	binary avs_release_frame (0: AVS_VideoFrame f),
	binary avs_set_field_based (0: AVS_VideoInfo p, 1: i32 isfieldbased),
	binary avs_set_fps (0: AVS_VideoInfo p, 1: binary denominator, 2: binary numerator),
	binary avs_set_property (0: AVS_VideoInfo p, 1: i32 property),
	i32 compat_sem_init (0: binary psem, 1: i32 unused, 2: i32 val),
	binary copysignl (0: binary x, 1: binary y),
	binary scalbnl (0: i32 exp, 1: binary x),
	i32 avpriv_snprintf (0: byte s, 1: binary fmt, 2: i64 n),
	i32 avpriv_vsnprintf (0: byte s, 1: binary fmt, 2: i64 n, 3: binary ap),
	binary pthread_cond_broadcast (0: pthread_cond_t cond),
	binary pthread_cond_destroy (0: pthread_cond_t cond),
	binary pthread_cond_init (0: binary attr, 1: pthread_cond_t cond),
	binary pthread_cond_signal (0: pthread_cond_t cond),
	binary pthread_cond_wait (0: pthread_cond_t cond, 1: pthread_mutex_t mutex),
	binary pthread_create (0: binary attr, 1: pthread_t thread, 2: binary start_routine, 3: void arg),
	binary pthread_join (0: pthread_t thread, 1: void value_ptr),
	binary pthread_mutex_destroy (0: pthread_mutex_t mutex),
	binary pthread_mutex_init (0: binary attr, 1: pthread_mutex_t mutex),
	binary pthread_mutex_lock (0: pthread_mutex_t mutex),
	binary pthread_mutex_unlock (0: pthread_mutex_t mutex),
	binary pthread_once (0: pthread_once_t once_control, 1: binary init_routine),
	void thread_entry (0: void arg),
	double avpriv_strtod (0: byte endptr, 1: binary nptr),
	HMODULE win32_dlopen (0: binary name),
	binary pthread_create (0: binary unused_attr, 1: pthread_t thread, 2: binary start_routine, 3: void arg),
	binary pthread_join (0: pthread_t thread, 1: void value_ptr),
	binary pthread_once (0: pthread_once_t once_control, 1: binary init_routine),
	binary win32thread_worker (0: void arg),
	i32 pthread_cond_broadcast (0: pthread_cond_t cond),
	i32 pthread_cond_destroy (0: pthread_cond_t cond),
	i32 pthread_cond_init (0: binary unused_attr, 1: pthread_cond_t cond),
	i32 pthread_cond_signal (0: pthread_cond_t cond),
	i32 pthread_cond_wait (0: pthread_cond_t cond, 1: pthread_mutex_t mutex),
	i32 pthread_mutex_destroy (0: pthread_mutex_t m),
	i32 pthread_mutex_init (0: pthread_mutex_t m, 1: void attr),
	i32 pthread_mutex_lock (0: pthread_mutex_t m),
	i32 pthread_mutex_unlock (0: pthread_mutex_t m),
	binary mktemp (),
	binary add_asflags (),
	binary add_cflags_headers (),
	binary add_cflags (),
	binary add_compat (),
	binary add_cppflags (),
	binary add_cxxflags (),
	binary add_extralibs (),
	binary add_host_cflags (),
	binary add_host_cppflags (),
	binary add_host_ldflags (),
	binary add_ldexeflags (),
	binary add_ldflags (),
	binary add_ldsoflags (),
	binary add_objcflags (),
	binary add_stripflags (),
	binary add_suffix (),
	binary append (),
	binary armasm_flags (),
	binary as_o (),
	binary c_escape (),
	binary cc_e (),
	binary cc_o (),
	binary check_64bit (),
	binary check_apple_framework (),
	binary check_arm_arch (),
	binary check_as (),
	binary check_builtin (),
	binary check_cc (),
	binary check_cflags (),
	binary check_class_headers_cpp (),
	binary check_cmd (),
	binary check_compile_assert (),
	binary check_complexfunc (),
	binary check_cpp_condition (),
	binary check_cppflags (),
	binary check_cxxflags (),
	binary check_deps (),
	binary check_disable_warning_headers (),
	binary check_disable_warning (),
	binary check_exec_crash (),
	binary check_func_headers (),
	binary check_func (),
	binary check_gas (),
	binary check_header_objcc (),
	binary check_headers (),
	binary check_host_cflags (),
	binary check_host_cpp_condition (),
	binary check_host_cppflags (),
	binary check_inline_asm_flags (),
	binary check_inline_asm (),
	binary check_insn (),
	binary check_ldflags (),
	binary check_ld (),
	binary check_lib_cpp (),
	binary check_lib (),
	binary check_mathfunc (),
	binary check_native (),
	binary check_objcflags (),
	binary check_optflags (),
	binary check_pkg_config (),
	binary check_stripflags (),
	binary check_struct (),
	binary check_type (),
	binary check_x86asm (),
	binary cleanws (),
	binary cp_if_changed (),
	binary cparser_flags (),
	binary die_license_disabled_gpl (),
	binary die_license_disabled (),
	binary die_unknown (),
	binary die (),
	binary disable_components (),
	binary disable_sanitized (),
	binary disable_weak (),
	binary disable_with_reason (),
	binary disabled_all (),
	binary disabled_any (),
	binary disabled (),
	binary disable (),
	binary do_enable_deep (),
	binary do_random (),
	binary enable_deep_weak (),
	binary enable_deep (),
	binary enable_sanitized (),
	binary enable_weak_pic (),
	binary enable_weak (),
	binary enabled_all (),
	binary enabled_any (),
	binary enabled (),
	binary enable (),
	binary esc (),
	binary exesuf (),
	binary expand_deps (),
	binary filter_out (),
	binary filter (),
	binary find_filters_extern (),
	binary find_things_extern (),
	binary flatten_extralibs_wrapper (),
	binary flatten_extralibs (),
	binary get_sanitized (),
	binary hostcc_e (),
	binary hostcc_o (),
	binary icc_flags (),
	binary icl_flags (),
	binary is_in (),
	binary ld_o (),
	binary log_file (),
	binary log (),
	binary map (),
	binary mktemp (),
	binary msvc_common_flags (),
	binary msvc_flags (),
	binary popvar (),
	binary prepend (),
	binary print_config (),
	binary print_enabled_components (),
	binary print_enabled (),
	binary print_in_columns (),
	binary print_include (),
	binary probe_arm_arch (),
	binary probe_cc (),
	binary probe_libc (),
	binary probe_x86asm (),
	binary pushvar (),
	binary rand_list (),
	binary remove_suffix (),
	binary reorder_by (),
	binary requested (),
	binary request (),
	binary require_cc (),
	binary require_cpp_condition (),
	binary require_cpp (),
	binary require_headers (),
	binary require_pkg_config (),
	binary require (),
	binary resolve (),
	binary reverse (),
	binary sanitize_var_name (),
	binary set_all (),
	binary set_ccvars (),
	binary set_default (),
	binary set_sanitized (),
	binary set_weak (),
	binary sh_quote (),
	binary show_help (),
	binary show_list (),
	binary suncc_flags (),
	binary test_as (),
	binary test_cc (),
	binary test_cflags_cc (),
	binary test_cflags (),
	binary test_cmd (),
	binary test_code (),
	binary test_cpp_condition (),
	binary test_cpp (),
	binary test_cxx (),
	binary test_exec (),
	binary test_host_cc (),
	binary test_host_cpp_condition (),
	binary test_host_cpp (),
	binary test_ldflags (),
	binary test_ld (),
	binary test_objcc (),
	binary test_objcflags (),
	binary test_pkg_config (),
	binary test_stat (),
	binary test_stripflags (),
	binary test_x86asm (),
	binary tmpfile (),
	binary tolower (),
	binary toupper (),
	binary try_exec (),
	binary unique (),
	binary warn_if_gets_disabled (),
	binary warn (),
	binary x86asm_o (),
	i32 main (0: binary argv, 1: i32 argc),
	i32 main (0: binary argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: binary argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: binary argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: binary argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	binary toupper (),
	AVDictionary setup_find_stream_info_opts (0: AVDictionary codec_opts, 1: AVFormatContext s),
	AVDictionary filter_codec_opts (0: binary codec_id, 1: AVCodec codec, 2: AVDictionary opts, 3: AVFormatContext s, 4: AVStream st),
	binary get_preset_file (0: byte filename, 1: binary codec_name, 2: binary preset_name, 3: i32 is_path, 4: i64 filename_size),
	double get_rotation (0: AVStream st),
	double parse_number_or_die (0: binary context, 1: binary numstr, 2: double max, 3: double min, 4: i32 type),
	i64 parse_time_or_die (0: binary context, 1: binary timestr, 2: i32 is_duration),
	i32 check_stream_specifier (0: AVFormatContext s, 1: AVStream st, 2: binary spec),
	i32 locate_option (0: byte argv, 1: binary options, 2: binary optname, 3: i32 argc),
	i32 opt_cpuflags (0: binary arg, 1: binary opt, 2: void optctx),
	i32 opt_default (0: binary arg, 1: binary opt, 2: void optctx),
	i32 opt_loglevel (0: binary arg, 1: binary opt, 2: void optctx),
	i32 opt_max_alloc (0: binary arg, 1: binary opt, 2: void optctx),
	i32 opt_report (0: binary opt),
	i32 opt_timelimit (0: binary arg, 1: binary opt, 2: void optctx),
	i32 parse_optgroup (0: OptionGroup g, 1: void optctx),
	i32 parse_option (0: binary options, 1: binary arg, 2: binary opt, 3: void optctx),
	i32 read_yesno (),
	i32 show_bsfs (0: binary arg, 1: binary opt, 2: void optctx),
	i32 show_buildconf (0: binary arg, 1: binary opt, 2: void optctx),
	i32 show_codecs (0: binary arg, 1: binary opt, 2: void optctx),
	i32 show_colors (0: binary arg, 1: binary opt, 2: void optctx),
	i32 show_decoders (0: binary arg, 1: binary opt, 2: void optctx),
	i32 show_demuxers (0: binary arg, 1: binary opt, 2: void optctx),
	i32 show_devices (0: binary arg, 1: binary opt, 2: void optctx),
	i32 show_encoders (0: binary arg, 1: binary opt, 2: void optctx),
	i32 show_filters (0: binary arg, 1: binary opt, 2: void optctx),
	i32 show_formats (0: binary arg, 1: binary opt, 2: void optctx),
	i32 show_help (0: binary arg, 1: binary opt, 2: void optctx),
	i32 show_layouts (0: binary arg, 1: binary opt, 2: void optctx),
	i32 show_license (0: binary arg, 1: binary opt, 2: void optctx),
	i32 show_muxers (0: binary arg, 1: binary opt, 2: void optctx),
	i32 show_pix_fmts (0: binary arg, 1: binary opt, 2: void optctx),
	i32 show_protocols (0: binary arg, 1: binary opt, 2: void optctx),
	i32 show_sample_fmts (0: binary arg, 1: binary opt, 2: void optctx),
	i32 show_sinks (0: binary arg, 1: binary opt, 2: void optctx),
	i32 show_sources (0: binary arg, 1: binary opt, 2: void optctx),
	i32 show_version (0: binary arg, 1: binary opt, 2: void optctx),
	i32 split_commandline (0: OptionParseContext octx, 1: binary argv, 2: binary options, 3: binary groups, 4: i32 argc, 5: i32 nb_groups),
	void grow_array (0: i32 size, 1: i32 elem_size, 2: i32 new_size, 3: void array),
	void exit_program (0: i32 ret),
	void init_dynload (),
	void init_opts (),
	void log_callback_help (0: binary fmt, 1: i32 level, 2: binary vl, 3: void ptr),
	void parse_loglevel (0: byte argv, 1: binary options, 2: i32 argc),
	void parse_options (0: byte argv, 1: binary options, 2: i32 argc, 3: binary parse_arg_function, 4: void optctx),
	void prepare_app_arguments (0: byte argv_ptr, 1: i32 argc_ptr),
	void print_error (0: binary filename, 1: i32 err),
	void register_exit (0: binary cb),
	void show_banner (0: byte argv, 1: binary options, 2: i32 argc),
	void show_help_children (0: binary class, 1: i32 flags),
	void show_help_options (0: binary options, 1: binary msg, 2: i32 alt_flags, 3: i32 rej_flags, 4: i32 req_flags),
	void uninit_opts (),
	void uninit_parse_context (0: OptionParseContext octx),
	i32 guess_input_channel_layout (0: InputStream ist),
	i32 main (0: byte argv, 1: i32 argc),
	void assert_avoptions (0: AVDictionary m),
	void remove_avoptions (0: AVDictionary a, 1: AVDictionary b),
	void sub2video_update (0: AVSubtitle sub, 1: InputStream ist),
	void term_exit (),
	void term_init (),
	i32 cuvid_init (0: AVCodecContext avctx),
	binary DEF_CHOOSE_FORMAT (0: binary AVSampleFormat),
	binary choose_pixel_fmt (0: binary target, 1: AVCodec codec, 2: AVCodecContext enc_ctx, 3: AVStream st),
	i32 configure_filtergraph (0: FilterGraph fg),
	i32 configure_output_filter (0: AVFilterInOut out, 1: FilterGraph fg, 2: OutputFilter ofilter),
	i32 filtergraph_is_simple (0: FilterGraph fg),
	i32 ifilter_parameters_from_frame (0: InputFilter ifilter, 1: binary frame),
	i32 init_complex_filtergraph (0: FilterGraph fg),
	i32 ist_in_filtergraph (0: FilterGraph fg, 1: InputStream ist),
	void check_filter_outputs (),
	void choose_sample_fmt (0: AVCodec codec, 1: AVStream st),
	HWDevice hw_device_get_by_name (0: binary name),
	i32 hw_device_init_from_string (0: HWDevice dev_out, 1: binary arg),
	i32 hw_device_setup_for_decode (0: InputStream ist),
	i32 hw_device_setup_for_encode (0: OutputStream ost),
	i32 hwaccel_decode_init (0: AVCodecContext avctx),
	void hw_device_free_all (),
	i32 ffmpeg_parse_options (0: byte argv, 1: i32 argc),
	void show_help_default (0: binary arg, 1: binary opt),
	void show_usage (),
	i32 qsv_init (0: AVCodecContext s),
	i32 videotoolbox_init (0: AVCodecContext s),
	i64 get_valid_channel_layout (0: i64 channel_layout, 1: i32 channels),
	i32 cmp_audio_fmts (0: binary fmt1, 1: binary fmt2, 2: i64 channel_count1, 3: i64 channel_count2),
	i32 compute_mod (0: i32 a, 1: i32 b),
	i32 main (0: byte argv, 1: i32 argc),
	void fill_rectangle (0: i32 h, 1: i32 w, 2: i32 x, 3: i32 y),
	void show_help_default (0: binary arg, 1: binary opt),
	byte upcase_string (0: byte dst, 1: binary src, 2: i64 dst_size),
	i32 check_section_show_entries (0: i32 section_id),
	i32 main (0: byte argv, 1: i32 argc),
	i32 show_tags (0: AVDictionary tags, 1: WriterContext w, 2: i32 section_id),
	i32 validate_string (0: WriterContext wctx, 1: byte dstp, 2: binary src),
	i32 writer_print_string (0: WriterContext wctx, 1: binary key, 2: binary val, 3: i32 flags),
	void json_print_item_str (0: WriterContext wctx, 1: binary key, 2: binary value),
	void mark_section_show_entries (0: AVDictionary entries, 1: SectionID section_id, 2: i32 show_all_entries),
	void show_help_default (0: binary arg, 1: binary opt),
	void writer_print_integer (0: WriterContext wctx, 1: binary key, 2: binary val),
	void writer_print_rational (0: AVRational q, 1: WriterContext wctx, 2: byte sep, 3: binary key),
	void writer_print_section_footer (0: WriterContext wctx),
	void writer_print_section_header (0: WriterContext wctx, 1: i32 section_id),
	void idct_put (0: FourXContext f, 1: i32 x, 2: i32 y),
	void mcdc (0: binary src, 1: i32 h, 2: i32 log2w, 3: i32 scale, 4: i32 stride, 5: i16 dst, 6: binary dc),
	i32 ff_aac_ac3_parse (0: AVCodecContext avctx, 1: AVCodecParserContext s1, 2: binary poutbuf, 3: binary buf, 4: i32 poutbuf_size, 5: i32 buf_size),
	void codebook_trellis_rate (0: AACEncContext s, 1: SingleChannelElement sce, 2: binary lambda, 3: i32 group_len, 4: i32 win),
	i32 ff_pns_bits (0: SingleChannelElement sce, 1: i32 g, 2: i32 w),
	void search_for_quantizers_twoloop (0: AACEncContext s, 1: AVCodecContext avctx, 2: SingleChannelElement sce, 3: binary lambda),
	double VMUL2S (0: binary scale, 1: binary v, 2: double dst, 3: binary idx, 4: binary sign),
	double VMUL2 (0: binary scale, 1: binary v, 2: double dst, 3: binary idx),
	double VMUL4S (0: binary scale, 1: binary v, 2: double dst, 3: binary idx, 4: binary sign),
	double VMUL4 (0: binary scale, 1: binary v, 2: double dst, 3: binary idx),
	i32 latm_get_value (0: GetBitContext b),
	i32 DEC_SPAIR (0: i32 dst, 1: binary idx),
	i32 DEC_SQUAD (0: i32 dst, 1: binary idx),
	i32 DEC_UPAIR (0: i32 dst, 1: binary idx, 2: binary sign),
	i32 DEC_UQUAD (0: i32 dst, 1: binary idx, 2: binary sign),
	void relative_align_get_bits (0: GetBitContext gb, 1: i32 reference_position),
	binary WINDOW_FUNC (),
	void ff_quantize_band_cost_cache_init (0: binary s),
	binary ff_aac_is_encoding_err (0: AACEncContext s, 1: ChannelElement cpe, 2: double ener01, 3: double ener0, 4: double ener1, 5: i32 g, 6: i32 phase, 7: i32 start, 8: i32 use_pcoeffs, 9: i32 w),
	void ff_aac_search_for_is (0: AACEncContext s, 1: AVCodecContext avctx, 2: ChannelElement cpe),
	void ff_aac_adjust_common_ltp (0: AACEncContext s, 1: ChannelElement cpe),
	void ff_aac_encode_ltp_info (0: AACEncContext s, 1: SingleChannelElement sce, 2: i32 common_window),
	void ff_aac_ltp_insert_new_frame (0: AACEncContext s),
	void ff_aac_search_for_ltp (0: AACEncContext s, 1: SingleChannelElement sce, 2: i32 common_window),
	void ff_aac_update_ltp (0: AACEncContext s, 1: SingleChannelElement sce),
	double flt16_even (0: double pf),
	double flt16_round (0: double pf),
	double flt16_trunc (0: double pf),
	i32 update_counters (0: IndividualChannelStream ics, 1: i32 inc),
	void ff_aac_adjust_common_pred (0: AACEncContext s, 1: ChannelElement cpe),
	void ff_aac_apply_main_pred (0: AACEncContext s, 1: SingleChannelElement sce),
	void ff_aac_encode_main_pred (0: AACEncContext s, 1: SingleChannelElement sce),
	void ff_aac_search_for_pred (0: AACEncContext s, 1: SingleChannelElement sce),
	void predict (0: PredictorState ps, 1: double coef, 2: double rcoef, 3: i32 set),
	void reset_all_predictors (0: PredictorState ps),
	void reset_predict_state (0: PredictorState ps),
	void reset_predictor_group (0: SingleChannelElement sce, 1: i32 group_num),
	binary quantize_and_encode_band_cost_template (0: binary s, 1: PutBitContext pb, 2: binary in, 3: binary scaled, 4: binary ROUNDING, 5: binary lambda, 6: binary uplim, 7: double energy, 8: double out, 9: i32 bits, 10: i32 BT_ESC, 11: i32 BT_NOISE, 12: i32 BT_PAIR, 13: i32 BT_STEREO, 14: i32 BT_UNSIGNED, 15: i32 BT_ZERO, 16: i32 cb, 17: i32 scale_idx, 18: i32 size),
	double quantize_and_encode_band_cost_NONE (0: binary s, 1: PutBitContext pb, 2: binary in, 3: binary scaled, 4: binary lambda, 5: binary uplim, 6: double energy, 7: double quant, 8: i32 bits, 9: i32 cb, 10: i32 scale_idx, 11: i32 size),
	double quantize_band_cost (0: binary s, 1: binary in, 2: binary scaled, 3: binary lambda, 4: binary uplim, 5: double energy, 6: i32 bits, 7: i32 cb, 8: i32 rtz, 9: i32 scale_idx, 10: i32 size),
	i32 quantize_band_cost_bits (0: binary s, 1: binary in, 2: binary scaled, 3: binary lambda, 4: binary uplim, 5: double energy, 6: i32 bits, 7: i32 cb, 8: i32 rtz, 9: i32 scale_idx, 10: i32 size),
	void quantize_and_encode_band (0: binary s, 1: PutBitContext pb, 2: binary in, 3: binary lambda, 4: double out, 5: i32 cb, 6: i32 rtz, 7: i32 scale_idx, 8: i32 size),
	double quantize_band_cost_cached (0: binary s, 1: binary in, 2: binary scaled, 3: binary lambda, 4: binary uplim, 5: double energy, 6: i32 bits, 7: i32 cb, 8: i32 g, 9: i32 rtz, 10: i32 scale_idx, 11: i32 size, 12: i32 w),
	i32 compress_coeffs (0: i32 coef, 1: i32 c_bits, 2: i32 order),
	void ff_aac_apply_tns (0: AACEncContext s, 1: SingleChannelElement sce),
	void ff_aac_encode_tns_info (0: AACEncContext s, 1: SingleChannelElement sce),
	void ff_aac_search_for_tns (0: AACEncContext s, 1: SingleChannelElement sce),
	void quantize_coefs (0: double coef, 1: double lpc, 2: i32 idx, 3: i32 c_bits, 4: i32 order),
	binary bval2bmax (0: double b),
	binary lcg_random (0: binary previous_val),
	double find_form_factor (0: binary scaled, 1: double nzslope, 2: double thresh, 3: i32 group_len, 4: i32 swb_size),
	double find_max_val (0: binary scaled, 1: i32 group_len, 2: i32 swb_size),
	double pos_pow34 (0: double a),
	i32 ff_sfdelta_can_remove_band (0: binary sce, 1: binary nextband, 2: i32 band, 3: i32 prev_sf),
	i32 ff_sfdelta_can_replace (0: binary sce, 1: binary nextband, 2: i32 band, 3: i32 new_sf, 4: i32 prev_sf),
	i32 find_min_book (0: double maxval, 1: i32 sf),
	i32 quant_array_idx (0: binary arr, 1: binary val, 2: binary num),
	i32 quant (0: binary Q, 1: binary rounding, 2: double coef),
	byte coef2maxsf (0: double coef),
	byte coef2minsf (0: double coef),
	void abs_pow34_v (0: binary in, 1: binary size, 2: double out),
	void ff_init_nextband_map (0: binary sce, 1: byte nextband),
	void ff_nextband_remove (0: i32 band, 1: i32 prevband, 2: byte nextband),
	void quantize_bands (0: binary in, 1: binary scaled, 2: binary Q34, 3: binary rounding, 4: i32 out, 5: i32 is_signed, 6: i32 maxval, 7: i32 size),
	binary AAC_RENAME (),
	i32 AAC_RENAME (),
	void make_filters_from_proto (0: binary proto, 1: i32 bands),
	void ps_tableinit (),
	binary make_filters_from_proto (0: binary proto, 1: i32 bands),
	binary ps_tableinit (),
	i32 main (),
	binary AAC_RENAME (),
	binary AAC_RENAME (),
	i32 AAC_RENAME (),
	i32 in_table_int16 (0: binary table, 1: i16 needle, 2: i32 last_el),
	void AAC_RENAME (),
	void ff_aac_tableinit (),
	binary ff_psdsp_init_aarch64 (0: PSDSPContext s),
	binary get_cabac_inline_aarch64 (0: CABACContext c, 1: byte state),
	binary ff_fft_init_aarch64 (0: FFTContext s),
	binary ff_fmt_convert_init_aarch64 (0: AVCodecContext avctx, 1: FmtConvertContext c),
	binary ff_h264chroma_init_aarch64 (0: H264ChromaContext c, 1: i32 bit_depth),
	binary ff_h264dsp_init_aarch64 (0: H264DSPContext c, 1: binary bit_depth, 2: binary chroma_format_idc),
	binary ff_h264_pred_init_aarch64 (0: H264PredContext h, 1: binary chroma_format_idc, 2: i32 bit_depth, 3: i32 codec_id),
	binary ff_h264qpel_init_aarch64 (0: H264QpelContext c, 1: i32 bit_depth),
	binary ff_hpeldsp_init_aarch64 (0: HpelDSPContext c, 1: i32 flags),
	binary ff_idctdsp_init_aarch64 (0: AVCodecContext avctx, 1: IDCTDSPContext c, 2: binary high_bit_depth),
	binary ff_mpadsp_init_aarch64 (0: MPADSPContext s),
	binary wrap (0: binary avpkt, 1: binary avpkt, 2: binary avpkt, 3: binary got_packet_ptr, 4: binary sub, 5: binary got_packet_ptr, 6: binary options, 7: binary frame, 8: binary avpkt, 9: binary frame, 10: binary avpkt),
	binary ff_rv40dsp_init_aarch64 (0: RV34DSPContext c),
	binary ff_sbrdsp_init_aarch64 (0: SBRDSPContext s),
	binary ff_synth_filter_init_aarch64 (0: SynthFilterContext s),
	binary ff_vc1dsp_init_aarch64 (0: VC1DSPContext dsp),
	binary ff_videodsp_init_aarch64 (0: VideoDSPContext ctx, 1: i32 bpc),
	binary ff_vorbisdsp_init_aarch64 (0: VorbisDSPContext c),
	binary ff_vp78dsp_init_aarch64 (0: VP8DSPContext dsp),
	binary ff_vp8dsp_init_aarch64 (0: VP8DSPContext dsp),
	binary INIT_FUNC (0: VP9DSPContext dsp),
	binary ff_vp9dsp_init_aarch64 (0: VP9DSPContext dsp, 1: i32 bpp),
	i32 calc_lowcomp1 (0: i32 a, 1: i32 b0, 2: i32 b1, 3: i32 c),
	i32 calc_lowcomp (0: i32 a, 1: i32 b0, 2: i32 b1, 3: i32 bin),
	i32 ff_ac3_bit_alloc_calc_mask (0: AC3BitAllocParameters s, 1: i16 band_psd, 2: i16 mask, 3: i32 dba_mode, 4: i32 dba_nsegs, 5: i32 end, 6: i32 fast_gain, 7: i32 is_lfe, 8: i32 start, 9: byte dba_lengths, 10: byte dba_offsets, 11: byte dba_values),
	void ff_ac3_bit_alloc_calc_psd (0: i16 band_psd, 1: i16 psd, 2: byte exp, 3: i32 end, 4: i32 start),
	i32 av_ac3_parse_header (0: binary buf, 1: i64 size, 2: i16 frame_size, 3: byte bitstream_id),
	i32 avpriv_ac3_parse_header (0: AC3HeaderInfo phdr, 1: binary buf, 2: i64 size),
	i32 ff_ac3_parse_header (0: AC3HeaderInfo hdr, 1: GetBitContext gbc),
	i32 coupling_coordinates (0: AC3DecodeContext s, 1: i32 blk),
	i32 coupling_strategy (0: AC3DecodeContext s, 1: i32 blk, 2: byte bit_alloc_stages),
	i32 spx_strategy (0: AC3DecodeContext s, 1: i32 blk),
	i32 symmetric_dequant (0: i32 code, 1: i32 levels),
	void decode_transform_coeffs_ch (0: AC3DecodeContext s, 1: i32 blk, 2: i32 ch, 3: mant_groups m),
	void decode_transform_coeffs (0: AC3DecodeContext s, 1: i32 blk),
	void do_imdct (0: AC3DecodeContext s, 1: i32 channels, 2: i32 offset),
	void spx_coordinates (0: AC3DecodeContext s),
	binary ff_ac3dsp_init (0: AC3DSPContext c, 1: i32 bit_exact),
	void ff_ac3dsp_downmix_fixed (0: AC3DSPContext c, 1: i16 matrix, 2: i32 samples, 3: i32 in_ch, 4: i32 len, 5: i32 out_ch),
	void ff_ac3dsp_downmix (0: AC3DSPContext c, 1: double matrix, 2: double samples, 3: i32 in_ch, 4: i32 len, 5: i32 out_ch),
	binary ff_ac3_encode_close (0: AVCodecContext avctx),
	binary ff_ac3_encode_init (0: AVCodecContext avctx),
	i32 asym_quant (0: i32 c, 1: i32 e, 2: i32 qbits),
	i32 ff_ac3_compute_bit_allocation (0: AC3EncodeContext s),
	i32 ff_ac3_validate_metadata (0: AC3EncodeContext s),
	i32 sym_quant (0: i32 c, 1: i32 e, 2: i32 levels),
	void ff_ac3_adjust_frame_size (0: AC3EncodeContext s),
	void ff_ac3_apply_rematrixing (0: AC3EncodeContext s),
	void ff_ac3_compute_coupling_strategy (0: AC3EncodeContext s),
	void ff_ac3_group_exponents (0: AC3EncodeContext s),
	void ff_ac3_output_frame (0: AC3EncodeContext s, 1: binary frame),
	void ff_ac3_process_exponents (0: AC3EncodeContext s),
	void ff_ac3_quantize_mantissas (0: AC3EncodeContext s),
	binary ff_ac3_fixed_mdct_init (0: AC3EncodeContext s),
	binary ff_ac3_fixed_mdct_end (0: AC3EncodeContext s),
	binary ff_ac3_float_encode_init (0: AVCodecContext avctx),
	binary ff_ac3_float_mdct_init (0: AC3EncodeContext s),
	binary ff_ac3_float_mdct_end (0: AC3EncodeContext s),
	i32 AC3_NAME (),
	void ff_acelp_apply_order_2_transfer_function (0: binary in, 1: binary pole_coeffs, 2: binary zero_coeffs, 3: double out, 4: binary mem, 5: double gain, 6: i32 n),
	void ff_acelp_filter_init (0: ACELPFContext c),
	void ff_acelp_high_pass_filter (0: binary in, 1: i16 out, 2: binary hpf_f, 3: i32 length),
	void ff_acelp_interpolatef (0: binary filter_coeffs, 1: binary in, 2: double out, 3: i32 filter_length, 4: i32 frac_pos, 5: i32 length, 6: i32 precision),
	void ff_acelp_interpolate (0: binary filter_coeffs, 1: binary in, 2: i16 out, 3: i32 filter_length, 4: i32 frac_pos, 5: i32 length, 6: i32 precision),
	void ff_tilt_compensation (0: double mem, 1: double samples, 2: double tilt, 3: i32 size),
	double ff_amr_set_fixed_gain (0: binary pred_table, 1: double prediction_error, 2: double energy_mean, 3: double fixed_gain_factor, 4: double fixed_mean_energy),
	i16 ff_acelp_decode_gain_code (0: AudioDSPContext adsp, 1: binary fc_v, 2: binary ma_prediction_coeff, 3: binary quant_energy, 4: i32 gain_corr_factor, 5: i32 ma_pred_order, 6: i32 mr_energy, 7: i32 subframe_size),
	i32 ff_acelp_decode_4bit_to_2nd_delay3 (0: i32 ac_index, 1: i32 pitch_delay_min),
	i32 ff_acelp_decode_5_6_bit_to_2nd_delay3 (0: i32 ac_index, 1: i32 pitch_delay_min),
	i32 ff_acelp_decode_6bit_to_2nd_delay6 (0: i32 ac_index, 1: i32 pitch_delay_min),
	i32 ff_acelp_decode_8bit_to_1st_delay3 (0: i32 ac_index),
	i32 ff_acelp_decode_9bit_to_1st_delay6 (0: i32 ac_index),
	void ff_acelp_update_past_gain (0: i16 quant_energy, 1: i32 erasure, 2: i32 gain_corr_factor, 3: i32 log2_ma_pred_order),
	void ff_decode_pitch_lag (0: binary prev_lag_int, 1: binary subframe, 2: i32 lag_frac, 3: i32 lag_int, 4: i32 pitch_index, 5: i32 resolution, 6: i32 third_as_first),
	void ff_acelp_fc_pulse_per_track (0: binary tab1, 1: binary tab2, 2: i16 fc_v, 3: i32 bits, 4: i32 pulse_count, 5: i32 pulse_indexes, 6: i32 pulse_signs),
	void ff_acelp_vectors_init (0: ACELPVContext c),
	void ff_acelp_weighted_vector_sum (0: binary in_a, 1: binary in_b, 2: i16 out, 3: i16 rounder, 4: i16 weight_coeff_a, 5: i16 weight_coeff_b, 6: i32 length, 7: i32 shift),
	void ff_adaptive_gain_control (0: binary in, 1: double gain_mem, 2: double out, 3: double alpha, 4: double speech_energ, 5: i32 size),
	void ff_clear_fixed_vector (0: binary in, 1: double out, 2: i32 size),
	void ff_decode_10_pulses_35bits (0: AMRFixed fixed_sparse, 1: binary fixed_index, 2: binary gray_decode, 3: i32 bits, 4: i32 half_pulse_count),
	void ff_scale_vector_to_given_sum_of_squares (0: binary in, 1: binary n, 2: double out, 3: double sum_of_squares),
	void ff_set_fixed_vector (0: binary in, 1: double out, 2: double scale, 3: i32 size),
	void ff_weighted_vector_sumf (0: binary in_a, 1: binary in_b, 2: double out, 3: double weight_coeff_a, 4: double weight_coeff_b, 5: i32 length),
	i16 adpcm_ct_expand_nibble (0: ADPCMChannelStatus c, 1: byte nibble),
	i16 adpcm_ima_expand_nibble (0: ADPCMChannelStatus c, 1: byte nibble, 2: i32 shift),
	i16 adpcm_ima_oki_expand_nibble (0: ADPCMChannelStatus c, 1: i32 nibble),
	i16 adpcm_ima_wav_expand_nibble (0: ADPCMChannelStatus c, 1: GetBitContext gb, 2: i32 bps),
	i16 adpcm_ms_expand_nibble (0: ADPCMChannelStatus c, 1: i32 nibble),
	i16 adpcm_mtaf_expand_nibble (0: ADPCMChannelStatus c, 1: byte nibble),
	i16 adpcm_sbpro_expand_nibble (0: ADPCMChannelStatus c, 1: byte nibble, 2: i32 shift, 3: i32 size),
	i16 adpcm_yamaha_expand_nibble (0: ADPCMChannelStatus c, 1: byte nibble),
	i32 adpcm_ima_qt_expand_nibble (0: ADPCMChannelStatus c, 1: i32 nibble, 2: i32 shift),
	byte adpcm_ima_compress_sample (0: ADPCMChannelStatus c, 1: i16 sample),
	byte adpcm_ima_qt_compress_sample (0: ADPCMChannelStatus c, 1: i16 sample),
	byte adpcm_ms_compress_sample (0: ADPCMChannelStatus c, 1: i16 sample),
	byte adpcm_yamaha_compress_sample (0: ADPCMChannelStatus c, 1: i16 sample),
	i32 ff_adts_header_parse (0: AACADTSHeaderInfo hdr, 1: GetBitContext gbc),
	i32 av_adts_header_parse (0: binary buf, 1: i32 samples, 2: byte frames),
	i32 ff_adx_decode_header (0: AVCodecContext avctx, 1: binary buf, 2: i32 coeff, 3: i32 header_size, 4: i32 bufsize),
	void ff_adx_calculate_coeffs (0: i32 coeff, 1: i32 bits, 2: i32 cutoff, 3: i32 sample_rate),
	i32 sign_only (0: i32 v),
	binary decode_scalar (0: GetBitContext gb, 1: i32 bps, 2: i32 k),
	binary ff_alacdsp_init (0: ALACDSPContext c),
	AVCodec av_codec_next (0: binary c),
	AVCodec avcodec_find_decoder_by_name (0: binary name),
	AVCodec avcodec_find_decoder (0: binary id),
	AVCodec avcodec_find_encoder_by_name (0: binary name),
	AVCodec avcodec_find_encoder (0: binary id),
	binary avcodec_register (0: AVCodec codec),
	binary av_codec_iterate (0: void opaque),
	void avcodec_register_all (),
	i64 BYTE_VEC (0: i64 x),
	i64 WORD_VEC (0: i64 x),
	binary ff_blockdsp_init_alpha (0: BlockDSPContext c),
	binary ff_hpeldsp_init_alpha (0: HpelDSPContext c, 1: i32 flags),
	i64 avg2_no_rnd (0: i64 a, 1: i64 b),
	i64 avg2 (0: i64 a, 1: i64 b),
	binary ff_idctdsp_init_alpha (0: AVCodecContext avctx, 1: IDCTDSPContext c, 2: binary high_bit_depth),
	binary ff_me_cmp_init_alpha (0: AVCodecContext avctx, 1: MECmpContext c),
	i64 avg2 (0: i64 a, 1: i64 b),
	i64 avg4 (0: i64 l1, 1: i64 l2, 2: i64 l3, 3: i64 l4),
	binary ff_mpv_common_init_axp (0: MpegEncContext s),
	binary ff_pixblockdsp_init_alpha (0: AVCodecContext avctx, 1: PixblockDSPContext c, 2: binary high_bit_depth),
	i32 idct_row (0: i16 row),
	void ff_simple_idct_add_axp (0: i16 block, 1: binary line_size, 2: byte dest),
	void ff_simple_idct_axp (0: i16 block),
	void ff_simple_idct_put_axp (0: i16 block, 1: binary line_size, 2: byte dest),
	void idct_col2 (0: i16 col),
	void idct_col (0: i16 col),
	i32 als_weighting (0: GetBitContext gb, 1: i32 k, 2: i32 off),
	binary ff_amf_encode_close (0: AVCodecContext avctx),
	i32 ff_amf_encode_init (0: AVCodecContext avctx),
	i32 ff_amf_receive_packet (0: AVCodecContext avctx, 1: AVPacket avpkt),
	i32 ff_amf_send_frame (0: AVCodecContext avctx, 1: binary frame),
	i32 timestamp_queue_enqueue (0: AVCodecContext avctx, 1: i64 timestamp),
	void ff_amr_bit_reorder (0: binary ord_table, 1: binary data, 2: i32 size, 3: i16 out),
	void decode_1p_track (0: i32 out, 1: i32 code, 2: i32 m, 3: i32 off),
	void decode_2p_track (0: i32 out, 1: i32 code, 2: i32 m, 3: i32 off),
	i32 op (0: GetByteContext gb, 1: binary dst_end, 2: i32 x, 3: i32 count, 4: i32 linesize, 5: i32 pixel, 6: i32 width, 7: byte dst),
	i32 APESIGN (0: i32 x),
	i32 ape_decode_value_3860 (0: APEContext ctx, 1: APERice rice, 2: GetBitContext gb),
	i32 ape_decode_value_3900 (0: APEContext ctx, 1: APERice rice),
	i32 ape_decode_value_3990 (0: APEContext ctx, 1: APERice rice),
	i32 get_rice_ook (0: GetBitContext gb, 1: i32 k),
	i32 range_decode_bits (0: APEContext ctx, 1: i32 n),
	i32 range_decode_culfreq (0: APEContext ctx, 1: i32 tot_f),
	i32 range_decode_culshift (0: APEContext ctx, 1: i32 shift),
	i32 range_get_symbol (0: APEContext ctx, 1: binary counts_diff, 2: binary counts),
	void range_dec_normalize (0: APEContext ctx),
	void range_decode_update (0: APEContext ctx, 1: i32 lt_f, 2: i32 sy_f),
	void range_start_decoding (0: APEContext ctx),
	void update_rice (0: APERice rice, 1: binary x),
	double VMUL2S (0: binary scale, 1: binary v, 2: double dst, 3: binary idx, 4: binary sign),
	double VMUL2 (0: binary scale, 1: binary v, 2: double dst, 3: binary idx),
	double VMUL4S (0: binary scale, 1: binary v, 2: double dst, 3: binary idx, 4: binary sign),
	double VMUL4 (0: binary scale, 1: binary v, 2: double dst, 3: binary idx),
	binary ff_psdsp_init_arm (0: PSDSPContext s),
	binary ff_ac3dsp_init_arm (0: AC3DSPContext c, 1: i32 bit_exact),
	binary ff_audiodsp_init_arm (0: AudioDSPContext c),
	binary ff_audiodsp_init_neon (0: AudioDSPContext c),
	binary ff_blockdsp_init_arm (0: BlockDSPContext c),
	binary ff_blockdsp_init_neon (0: BlockDSPContext c),
	binary get_cabac_inline_arm (0: CABACContext c, 1: byte state),
	i32 decode_blockcodes (0: i32 values, 1: i32 code1, 2: i32 code2, 3: i32 levels),
	binary ff_fft_fixed_init_arm (0: FFTContext s),
	binary ff_fft_init_arm (0: FFTContext s),
	binary ff_flacdsp_init_arm (0: binary fmt, 1: FLACDSPContext c, 2: i32 bps, 3: i32 channels),
	binary ff_fmt_convert_init_arm (0: AVCodecContext avctx, 1: FmtConvertContext c),
	binary ff_g722dsp_init_arm (0: G722DSPContext dsp),
	binary ff_h264chroma_init_arm (0: H264ChromaContext c, 1: i32 bit_depth),
	binary ff_h264dsp_init_arm (0: H264DSPContext c, 1: binary bit_depth, 2: binary chroma_format_idc),
	binary ff_h264_pred_init_arm (0: H264PredContext h, 1: binary chroma_format_idc, 2: i32 bit_depth, 3: i32 codec_id),
	binary ff_h264qpel_init_arm (0: H264QpelContext c, 1: i32 bit_depth),
	binary ff_hevc_dsp_init_arm (0: HEVCDSPContext c, 1: binary bit_depth),
	binary ff_hevc_dsp_init_neon (0: HEVCDSPContext c, 1: binary bit_depth),
	void ff_hevc_put_qpel_bi_neon_wrapper (0: i16 src2, 1: binary mx, 2: binary my, 3: i32 height, 4: i32 width, 5: binary dststride, 6: binary srcstride, 7: byte dst, 8: byte src),
	void ff_hevc_put_qpel_neon_wrapper (0: i16 dst, 1: binary mx, 2: binary my, 3: i32 height, 4: i32 width, 5: binary srcstride, 6: byte src),
	void ff_hevc_put_qpel_uni_neon_wrapper (0: binary mx, 1: binary my, 2: i32 height, 3: i32 width, 4: binary dststride, 5: binary srcstride, 6: byte dst, 7: byte src),
	void ff_hevc_sao_band_filter_neon_8_wrapper (0: i16 sao_offset_val, 1: i32 height, 2: i32 sao_left_class, 3: i32 width, 4: binary stride_dst, 5: binary stride_src, 6: byte _dst, 7: byte _src),
	void ff_hevc_sao_edge_filter_neon_8_wrapper (0: i16 sao_offset_val, 1: i32 eo, 2: i32 height, 3: i32 width, 4: binary stride_dst, 5: byte _dst, 6: byte _src),
	binary ff_hpeldsp_init_armv6 (0: HpelDSPContext c, 1: i32 flags),
	binary ff_hpeldsp_init_neon (0: HpelDSPContext c, 1: i32 flags),
	binary ff_idctdsp_init_arm (0: AVCodecContext avctx, 1: IDCTDSPContext c, 2: binary high_bit_depth),
	binary ff_idctdsp_init_armv5te (0: AVCodecContext avctx, 1: IDCTDSPContext c, 2: binary high_bit_depth),
	binary ff_idctdsp_init_armv6 (0: AVCodecContext avctx, 1: IDCTDSPContext c, 2: binary high_bit_depth),
	binary ff_idctdsp_init_neon (0: AVCodecContext avctx, 1: IDCTDSPContext c, 2: binary high_bit_depth),
	binary ff_llauddsp_init_arm (0: LLAudDSPContext c),
	binary FASTDIV (0: i32 a, 1: i32 b),
	binary MUL16 (0: i32 ra, 1: i32 rb),
	binary MULH (0: i32 a, 1: i32 b),
	binary mid_pred (0: i32 a, 1: i32 b, 2: i32 c),
	binary ff_me_cmp_init_arm (0: AVCodecContext avctx, 1: MECmpContext c),
	binary ff_mlpdsp_init_arm (0: MLPDSPContext c),
	binary ff_mpadsp_init_arm (0: MPADSPContext s),
	binary ff_mpv_common_init_arm (0: MpegEncContext s),
	binary ff_mpv_common_init_armv5te (0: MpegEncContext s),
	void dct_unquantize_h263_helper_c (0: i16 block, 1: i32 count, 2: i32 qadd, 3: i32 qmul),
	binary ff_mpegvideoencdsp_init_arm (0: AVCodecContext avctx, 1: MpegvideoEncDSPContext c),
	binary wrap (0: binary avpkt, 1: binary avpkt, 2: binary avpkt, 3: binary got_packet_ptr, 4: binary sub, 5: binary got_packet_ptr, 6: binary options, 7: binary frame, 8: binary avpkt, 9: binary frame, 10: binary avpkt),
	binary ff_pixblockdsp_init_arm (0: AVCodecContext avctx, 1: PixblockDSPContext c, 2: binary high_bit_depth),
	binary ff_rdft_init_arm (0: RDFTContext s),
	binary ff_rv34dsp_init_arm (0: RV34DSPContext c),
	binary ff_rv40dsp_init_arm (0: RV34DSPContext c),
	binary ff_sbcdsp_init_arm (0: SBCDSPContext s),
	binary ff_sbrdsp_init_arm (0: SBRDSPContext s),
	binary ff_synth_filter_init_arm (0: SynthFilterContext s),
	binary ff_vc1dsp_init_arm (0: VC1DSPContext dsp),
	binary ff_vc1dsp_init_neon (0: VC1DSPContext dsp),
	binary ff_videodsp_init_arm (0: VideoDSPContext ctx, 1: i32 bpc),
	binary ff_videodsp_init_armv5te (0: VideoDSPContext ctx, 1: i32 bpc),
	binary ff_vorbisdsp_init_arm (0: VorbisDSPContext c),
	binary ff_vp3dsp_init_arm (0: VP3DSPContext c, 1: i32 flags),
	i32 vp56_rac_get_prob_armv6 (0: VP56RangeCoder c, 1: i32 pr),
	i32 vp56_rac_get_prob_branchy_armv6 (0: VP56RangeCoder c, 1: i32 pr),
	binary ff_vp6dsp_init_arm (0: VP56DSPContext s),
	binary ff_vp78dsp_init_arm (0: VP8DSPContext dsp),
	binary ff_vp8dsp_init_arm (0: VP8DSPContext dsp),
	binary ff_vp78dsp_init_armv6 (0: VP8DSPContext dsp),
	binary ff_vp8dsp_init_armv6 (0: VP8DSPContext dsp),
	binary ff_vp78dsp_init_neon (0: VP8DSPContext dsp),
	binary ff_vp8dsp_init_neon (0: VP8DSPContext dsp),
	binary INIT_FUNC (0: VP9DSPContext dsp),
	binary ff_vp9dsp_init_arm (0: VP9DSPContext dsp, 1: i32 bpp),
	byte ff_ass_get_dialog (0: binary speaker, 1: binary style, 2: binary text, 3: i32 layer, 4: i32 readorder),
	i32 ff_ass_add_rect (0: AVSubtitle sub, 1: binary dialog, 2: binary speaker, 3: binary style, 4: i32 layer, 5: i32 readorder),
	i32 ff_ass_subtitle_header_default (0: AVCodecContext avctx),
	i32 ff_ass_subtitle_header (0: AVCodecContext avctx, 1: binary font, 2: i32 alignment, 3: i32 back_color, 4: i32 bold, 5: i32 border_style, 6: i32 color, 7: i32 font_size, 8: i32 italic, 9: i32 underline),
	void ff_ass_bprint_text_event (0: binary buf, 1: binary linebreaks, 2: binary p, 3: i32 keep_ass_markup, 4: i32 size),
	void ff_ass_decoder_flush (0: AVCodecContext avctx),
	ASSDialog ff_ass_split_dialog2 (0: ASSSplitContext ctx, 1: binary buf),
	ASSDialog ff_ass_split_dialog (0: ASSSplitContext ctx, 1: binary buf, 2: i32 number, 3: i32 cache),
	ASSSplitContext ff_ass_split (0: binary buf),
	ASSStyle ff_ass_style_get (0: ASSSplitContext ctx, 1: binary style),
	binary skip_space (0: binary buf),
	i32 ff_ass_split_override_codes (0: binary callbacks, 1: binary buf, 2: void priv),
	i32 is_eol (0: byte buf),
	void ff_ass_free_dialog (0: ASSDialog dialogp),
	void ff_ass_split_free (0: ASSSplitContext ctx),
	binary ff_asv_common_init (0: AVCodecContext avctx),
	i32 asv1_decode_block (0: ASV1Context a, 1: binary block),
	i32 asv1_get_level (0: GetBitContext gb),
	i32 asv2_decode_block (0: ASV1Context a, 1: binary block),
	i32 asv2_get_bits (0: GetBitContext gb, 1: i32 n),
	i32 asv2_get_level (0: GetBitContext gb),
	i32 decode_mb (0: ASV1Context a),
	void idct_put (0: ASV1Context a, 1: AVFrame frame, 2: i32 mb_x, 3: i32 mb_y),
	i32 encode_mb (0: ASV1Context a),
	void asv1_encode_block (0: ASV1Context a, 1: binary block),
	void asv1_put_level (0: PutBitContext pb, 1: i32 level),
	void asv2_encode_block (0: ASV1Context a, 1: binary block),
	void asv2_put_bits (0: PutBitContext pb, 1: i32 n, 2: i32 v),
	void asv2_put_level (0: ASV1Context a, 1: PutBitContext pb, 2: i32 level),
	void dct_get (0: ASV1Context a, 1: binary frame, 2: i32 mb_x, 3: i32 mb_y),
	binary ff_atrac_generate_tables (),
	binary ff_atrac_init_gain_compensation (0: AtracGCContext gctx, 1: i32 id2exp_offset, 2: i32 loc_scale),
	void ff_atrac_gain_compensation (0: AtracGCContext gctx, 1: AtracGainInfo gc_next, 2: AtracGainInfo gc_now, 3: double in, 4: double out, 5: double prev, 6: i32 num_samples),
	void ff_atrac_iqmf (0: double delayBuf, 1: double inhi, 2: double inlo, 3: double pOut, 4: double temp, 5: binary nIn),
	binary ff_atrac3p_init_vlcs (),
	i32 ff_atrac3p_decode_channel_unit (0: AVCodecContext avctx, 1: Atrac3pChanUnitCtx ctx, 2: GetBitContext gb, 3: i32 num_channels),
	void gainc_level_mode1m (0: Atrac3pChanUnitCtx ctx, 1: AtracGainInfo dst, 2: GetBitContext gb),
	void gainc_level_mode3s (0: AtracGainInfo dst, 1: AtracGainInfo ref),
	void gainc_loc_mode0 (0: Atrac3pChanUnitCtx ctx, 1: AtracGainInfo dst, 2: GetBitContext gb, 3: i32 pos),
	void gainc_loc_mode1 (0: Atrac3pChanUnitCtx ctx, 1: AtracGainInfo dst, 2: GetBitContext gb),
	void unpack_vq_shape (0: binary shape_vec, 1: i32 dst, 2: i32 num_values, 3: i32 start_val),
	binary ff_atrac3p_init_imdct (0: AVCodecContext avctx, 1: FFTContext mdct_ctx),
	binary ff_atrac3p_init_wave_synth (),
	void ff_atrac3p_generate_tones (0: AVFloatDSPContext fdsp, 1: Atrac3pChanUnitCtx ch_unit, 2: double out, 3: i32 ch_num, 4: i32 sb),
	void ff_atrac3p_imdct (0: AVFloatDSPContext fdsp, 1: FFTContext mdct_ctx, 2: double pIn, 3: double pOut, 4: i32 sb, 5: i32 wind_id),
	void ff_atrac3p_ipqf (0: Atrac3pIPQFChannelCtx hist, 1: FFTContext dct_ctx, 2: binary in, 3: double out),
	void ff_atrac3p_power_compensation (0: AVFloatDSPContext fdsp, 1: Atrac3pChanUnitCtx ctx, 2: double sp, 3: i32 ch_index, 4: i32 rng_index, 5: i32 sb),
	i32 parse_band_ext (0: ATRAC9BlockData b, 1: ATRAC9Context s, 2: GetBitContext gb, 3: i32 stereo),
	i32 parse_gradient (0: ATRAC9BlockData b, 1: ATRAC9Context s, 2: GetBitContext gb),
	i32 read_scalefactors (0: ATRAC9BlockData b, 1: ATRAC9ChannelData c, 2: ATRAC9Context s, 3: GetBitContext gb, 4: i32 channel_idx, 5: i32 first_in_pkt),
	void apply_band_extension (0: ATRAC9BlockData b, 1: ATRAC9Context s, 2: binary stereo),
	void apply_intensity_stereo (0: ATRAC9BlockData b, 1: ATRAC9Context s, 2: binary stereo),
	void apply_scalefactors (0: ATRAC9BlockData b, 1: ATRAC9Context s, 2: binary stereo),
	void calc_codebook_idx (0: ATRAC9BlockData b, 1: ATRAC9ChannelData c, 2: ATRAC9Context s),
	void calc_precision (0: ATRAC9BlockData b, 1: ATRAC9ChannelData c, 2: ATRAC9Context s),
	void dequantize (0: ATRAC9BlockData b, 1: ATRAC9ChannelData c, 2: ATRAC9Context s),
	void fill_with_noise (0: ATRAC9ChannelData c, 1: ATRAC9Context s, 2: i32 count, 3: i32 start),
	void read_coeffs_coarse (0: ATRAC9BlockData b, 1: ATRAC9ChannelData c, 2: ATRAC9Context s, 3: GetBitContext gb),
	void read_coeffs_fine (0: ATRAC9BlockData b, 1: ATRAC9ChannelData c, 2: ATRAC9Context s, 3: GetBitContext gb),
	void scale_band_ext_coeffs (0: ATRAC9ChannelData c, 1: binary e_unit, 2: binary s_unit, 3: binary sf),
	binary ff_af_queue_init (0: AVCodecContext avctx, 1: AudioFrameQueue afq),
	i32 ff_af_queue_add (0: AudioFrameQueue afq, 1: binary f),
	void ff_af_queue_close (0: AudioFrameQueue afq),
	void ff_af_queue_remove (0: AudioFrameQueue afq, 1: i64 duration, 2: i64 pts, 3: i32 nb_samples),
	binary ff_audiodsp_init (0: AudioDSPContext c),
	i32 clipf_c_one (0: i32 a, 1: i32 maxisign, 2: i32 maxi, 3: i32 mini),
	i32 ff_av1_extract_obu (0: AV1OBU obu, 1: binary buf, 2: i32 length, 3: void logctx),
	i32 ff_av1_packet_split (0: AV1Packet pkt, 1: binary buf, 2: i32 length, 3: void logctx),
	void ff_av1_packet_uninit (0: AV1Packet pkt),
	i64 leb128 (0: GetBitContext gb),
	i32 get_obu_bit_length (0: binary buf, 1: i32 size, 2: i32 type),
	i32 parse_obu_header (0: binary buf, 1: i32 spatial_id, 2: i32 start_pos, 3: i32 temporal_id, 4: i32 type, 5: i64 obu_size, 6: i32 buf_size),
	AVDCT avcodec_dct_alloc (),
	binary avcodec_dct_get_class (),
	i32 avcodec_dct_init (0: AVDCT dsp),
	DCTContext av_dct_init (0: binary inverse, 1: i32 nbits),
	FFTContext av_fft_init (0: i32 inverse, 1: i32 nbits),
	FFTContext av_mdct_init (0: double scale, 1: i32 inverse, 2: i32 nbits),
	RDFTContext av_rdft_init (0: binary trans, 1: i32 nbits),
	binary av_dct_end (0: DCTContext s),
	binary av_fft_end (0: FFTContext s),
	binary av_mdct_end (0: FFTContext s),
	binary av_rdft_end (0: RDFTContext s),
	void av_dct_calc (0: DCTContext s, 1: FFTSample data),
	void av_fft_calc (0: FFTComplex z, 1: FFTContext s),
	void av_fft_permute (0: FFTComplex z, 1: FFTContext s),
	void av_imdct_calc (0: FFTContext s, 1: FFTSample output, 2: binary input),
	void av_imdct_half (0: FFTContext s, 1: FFTSample output, 2: binary input),
	void av_mdct_calc (0: FFTContext s, 1: FFTSample output, 2: binary input),
	void av_rdft_calc (0: FFTSample data, 1: RDFTContext s),
	AVPacket av_packet_alloc (),
	AVPacket av_packet_clone (0: binary src),
	binary av_free_packet (0: AVPacket pkt),
	binary av_packet_add_side_data (0: binary type, 1: AVPacket pkt, 2: i64 size, 3: byte data),
	binary av_packet_free_side_data (0: AVPacket pkt),
	binary av_packet_side_data_name (0: binary type),
	i32 av_copy_packet_side_data (0: AVPacket pkt, 1: binary src),
	i32 av_copy_packet (0: AVPacket dst, 1: binary src),
	i32 av_dup_packet (0: AVPacket pkt),
	i32 av_grow_packet (0: AVPacket pkt, 1: i32 grow_by),
	i32 av_new_packet (0: AVPacket pkt, 1: i32 size),
	i32 av_packet_copy_props (0: AVPacket dst, 1: binary src),
	i32 av_packet_from_data (0: AVPacket pkt, 1: i32 size, 2: byte data),
	i32 av_packet_make_refcounted (0: AVPacket pkt),
	i32 av_packet_make_writable (0: AVPacket pkt),
	i32 av_packet_merge_side_data (0: AVPacket pkt),
	i32 av_packet_ref (0: AVPacket dst, 1: binary src),
	i32 av_packet_shrink_side_data (0: binary type, 1: AVPacket pkt, 2: i32 size),
	i32 av_packet_split_side_data (0: AVPacket pkt),
	i32 av_packet_unpack_dictionary (0: AVDictionary dict, 1: binary data, 2: i32 size),
	i32 ff_side_data_set_encoder_stats (0: AVPacket pkt, 1: i64 error, 2: i32 error_count, 3: i32 pict_type, 4: i32 quality),
	byte av_packet_get_side_data (0: binary type, 1: binary pkt, 2: i32 size),
	byte av_packet_new_side_data (0: binary type, 1: AVPacket pkt, 2: i32 size),
	byte av_packet_pack_dictionary (0: AVDictionary dict, 1: i32 size),
	void av_init_packet (0: AVPacket pkt),
	void av_packet_free (0: AVPacket pkt),
	void av_packet_move_ref (0: AVPacket dst, 1: AVPacket src),
	void av_packet_rescale_ts (0: AVPacket pkt, 1: AVRational dst_tb, 2: AVRational src_tb),
	void av_packet_unref (0: AVPacket pkt),
	void av_shrink_packet (0: AVPacket pkt, 1: i32 size),
	binary avpicture_fill (0: binary pix_fmt, 1: AVPicture picture, 2: binary ptr, 3: i32 height, 4: i32 width),
	i32 avpicture_alloc (0: binary pix_fmt, 1: AVPicture picture, 2: i32 height, 3: i32 width),
	i32 avpicture_get_size (0: binary pix_fmt, 1: i32 height, 2: i32 width),
	i32 avpicture_layout (0: binary pix_fmt, 1: binary src, 2: i32 dest_size, 3: i32 height, 4: i32 width, 5: binary dest),
	void av_picture_copy (0: binary pix_fmt, 1: AVPicture dst, 2: binary src, 3: i32 height, 4: i32 width),
	void avpicture_free (0: AVPicture picture),
	binary MAC64 (0: i64 d, 1: i32 a, 2: i32 b),
	binary MUL64 (0: i32 a, 1: i32 b),
	binary MAC16 (0: i32 a, 1: i32 b, 2: i32 d),
	binary MUL16 (0: i32 a, 1: i32 b),
	binary MULH (0: i32 a, 1: i32 b),
	binary MULL (0: i32 a, 1: i32 b, 2: binary shift),
	binary mid_pred (0: i32 a, 1: i32 b, 2: i32 c),
	binary ff_bgmc_init (0: AVCodecContext avctx, 1: i32 cf_lut_status, 2: byte cf_lut),
	binary ff_bgmc_end (0: i32 cf_lut_status, 1: byte cf_lut),
	void ff_bgmc_decode_end (0: GetBitContext gb),
	void ff_bgmc_decode_init (0: GetBitContext gb, 1: binary h, 2: binary l, 3: binary v),
	void ff_bgmc_decode (0: GetBitContext gb, 1: i32 cf_lut_status, 2: i32 dst, 3: i32 delta, 4: byte cf_lut, 5: binary h, 6: binary l, 7: binary v, 8: binary num, 9: binary sx),
	i32 binkb_get_value (0: BinkContext c, 1: i32 bundle_num),
	i32 get_value (0: BinkContext c, 1: i32 bundle),
	void put_pixels8x8_overlapped (0: i32 stride, 1: byte dst, 2: byte src),
	binary ff_binkdsp_init (0: BinkDSPContext c),
	void bink_idct_col (0: binary src, 1: i32 dest),
	i32 ff_init_vlc_sparse (0: VLC vlc_arg, 1: binary bits, 2: binary codes, 3: binary symbols, 4: i32 bits_size, 5: i32 bits_wrap, 6: i32 codes_size, 7: i32 codes_wrap, 8: i32 flags, 9: i32 nb_bits, 10: i32 nb_codes, 11: i32 symbols_size, 12: i32 symbols_wrap),
	void avpriv_align_put_bits (0: PutBitContext s),
	void avpriv_copy_bits (0: PutBitContext pb, 1: binary src, 2: i32 length),
	void avpriv_put_string (0: PutBitContext pb, 1: binary string, 2: i32 terminate_string),
	void ff_free_vlc (0: VLC vlc),
	AVBitStreamFilterContext av_bitstream_filter_init (0: binary name),
	binary av_bitstream_filter_next (0: binary f),
	i32 av_bitstream_filter_filter (0: AVBitStreamFilterContext bsfc, 1: AVCodecContext avctx, 2: binary args, 3: binary buf, 4: i32 poutbuf_size, 5: i32 buf_size, 6: i32 keyframe, 7: byte poutbuf),
	void av_bitstream_filter_close (0: AVBitStreamFilterContext bsfc),
	void av_register_bitstream_filter (0: AVBitStreamFilter bsf),
	binary av_bsf_get_by_name (0: binary name),
	binary av_bsf_iterate (0: void opaque),
	binary av_bsf_next (0: void opaque),
	binary ff_bsf_child_class_next (0: binary prev),
	binary ff_blockdsp_init (0: AVCodecContext avctx, 1: BlockDSPContext c),
	AVBSFList av_bsf_list_alloc (),
	binary av_bsf_get_class (),
	i32 av_bsf_alloc (0: AVBSFContext pctx, 1: binary filter),
	i32 av_bsf_get_null_filter (0: AVBSFContext bsf),
	i32 av_bsf_init (0: AVBSFContext ctx),
	i32 av_bsf_list_append2 (0: AVBSFList lst, 1: AVDictionary options, 2: binary bsf_name),
	i32 av_bsf_list_append (0: AVBSFContext bsf, 1: AVBSFList lst),
	i32 av_bsf_list_finalize (0: AVBSFContext bsf, 1: AVBSFList lst),
	i32 av_bsf_list_parse_str (0: AVBSFContext bsf_lst, 1: binary str),
	i32 av_bsf_receive_packet (0: AVBSFContext ctx, 1: AVPacket pkt),
	i32 av_bsf_send_packet (0: AVBSFContext ctx, 1: AVPacket pkt),
	i32 ff_bsf_get_packet_ref (0: AVBSFContext ctx, 1: AVPacket pkt),
	i32 ff_bsf_get_packet (0: AVBSFContext ctx, 1: AVPacket pkt),
	void av_bsf_flush (0: AVBSFContext ctx),
	void av_bsf_free (0: AVBSFContext pctx),
	void av_bsf_list_free (0: AVBSFList lst),
	binary ff_bswapdsp_init (0: BswapDSPContext c),
	binary bytestream2_seek_p (0: PutByteContext p, 1: i32 offset, 2: i32 whence),
	binary bytestream2_seek (0: GetByteContext g, 1: i32 offset, 2: i32 whence),
	binary bytestream2_size_p (0: PutByteContext p),
	binary bytestream2_size (0: GetByteContext g),
	binary bytestream2_tell_p (0: PutByteContext p),
	binary bytestream2_tell (0: GetByteContext g),
	binary bytestream2_copy_bufferu (0: GetByteContext g, 1: PutByteContext p, 2: binary size),
	binary bytestream2_copy_buffer (0: GetByteContext g, 1: PutByteContext p, 2: binary size),
	binary bytestream2_get_bufferu (0: GetByteContext g, 1: byte dst, 2: binary size),
	binary bytestream2_get_buffer (0: GetByteContext g, 1: byte dst, 2: binary size),
	binary bytestream2_get_bytes_left_p (0: PutByteContext p),
	binary bytestream2_get_bytes_left (0: GetByteContext g),
	binary bytestream2_get_eof (0: PutByteContext p),
	binary bytestream2_put_bufferu (0: PutByteContext p, 1: binary src, 2: binary size),
	binary bytestream2_put_buffer (0: PutByteContext p, 1: binary src, 2: binary size),
	binary bytestream_get_buffer (0: binary b, 1: byte dst, 2: binary size),
	binary bytestream2_init_writer (0: PutByteContext p, 1: i32 buf_size, 2: byte buf),
	binary bytestream2_set_bufferu (0: PutByteContext p, 1: binary c, 2: binary size),
	binary bytestream2_set_buffer (0: PutByteContext p, 1: binary c, 2: binary size),
	binary bytestream2_skip_p (0: PutByteContext p, 1: binary size),
	binary bytestream2_skipu (0: GetByteContext g, 1: binary size),
	binary bytestream2_skip (0: GetByteContext g, 1: binary size),
	binary bytestream_put_buffer (0: binary src, 1: byte b, 2: binary size),
	i32 copy_block (0: AVCodecContext avctx, 1: i32 height, 2: i32 offset, 3: i32 stride, 4: byte from, 5: byte to),
	void draw_n_color (0: i32 bpp, 1: i32 height, 2: i32 stride, 3: i32 width, 4: i32 col, 5: byte out, 6: binary cols, 7: binary grps),
	i32 ff_init_cabac_decoder (0: CABACContext c, 1: binary buf, 2: i32 buf_size),
	void ff_init_cabac_encoder (0: CABACContext c, 1: i32 buf_size, 2: byte buf),
	binary get_cabac_bypass_sign (0: CABACContext c, 1: i32 val),
	binary get_cabac_inline (0: CABACContext c, 1: byte state),
	binary skip_bytes (0: CABACContext c, 1: i32 n),
	binary get_cabac_noinline (0: CABACContext c, 1: byte state),
	binary get_cabac_bypass (0: CABACContext c),
	binary get_cabac_terminate (0: CABACContext c),
	binary get_cabac (0: CABACContext c, 1: byte state),
	void refill2 (0: CABACContext c),
	void refill (0: CABACContext c),
	void renorm_cabac_decoder_once (0: CABACContext c),
	i32 ff_canopus_parse_info_tag (0: AVCodecContext avctx, 1: binary src, 2: i64 size),
	binary ff_cavs_end (0: AVCodecContext avctx),
	binary ff_cavs_init (0: AVCodecContext avctx),
	i32 ff_cavs_init_pic (0: AVSContext h),
	i32 ff_cavs_init_top_lines (0: AVSContext h),
	i32 ff_cavs_next_mb (0: AVSContext h),
	i32 get_bs (0: binary mvP, 1: binary mvQ, 2: i32 b),
	void ff_cavs_filter (0: binary mb_type, 1: AVSContext h),
	void ff_cavs_init_mb (0: AVSContext h),
	void ff_cavs_inter (0: binary mb_type, 1: AVSContext h),
	void ff_cavs_load_intra_pred_chroma (0: AVSContext h),
	void ff_cavs_load_intra_pred_luma (0: AVSContext h, 1: i32 block, 2: byte left, 3: byte top),
	void ff_cavs_modify_mb_i (0: AVSContext h, 1: i32 pred_mode_uv),
	void ff_cavs_mv (0: binary size, 1: binary nC, 2: binary nP, 3: binary mode, 4: AVSContext h, 5: i32 ref),
	void mc_dir_part (0: AVFrame pic, 1: AVSContext h, 2: binary mv, 3: h264_chroma_mc_func chroma_op, 4: i32 chroma_height, 5: i32 delta, 6: i32 list, 7: i32 src_x_offset, 8: i32 src_y_offset, 9: qpel_mc_func qpix_op, 10: byte dest_cb, 11: byte dest_cr, 12: byte dest_y),
	void mc_part_std (0: AVSContext h, 1: binary mv, 2: h264_chroma_mc_func chroma_avg, 3: h264_chroma_mc_func chroma_put, 4: i32 chroma_height, 5: i32 delta, 6: i32 x_offset, 7: i32 y_offset, 8: qpel_mc_func qpix_avg, 9: qpel_mc_func qpix_put, 10: byte dest_cb, 11: byte dest_cr, 12: byte dest_y),
	void modify_pred (0: binary mod_table, 1: i32 mode),
	void mv_pred_median (0: AVSContext h, 1: binary mvA, 2: binary mvB, 3: binary mvC, 4: binary mvP),
	void scale_mv (0: AVSContext h, 1: binary src, 2: i32 d_x, 3: i32 d_y, 4: i32 distp),
	void set_mvs (0: binary size, 1: binary mv),
	i32 check_for_slice (0: AVSContext h),
	i32 decode_residual_chroma (0: AVSContext h),
	i32 decode_residual_inter (0: AVSContext h),
	i32 decode_slice_header (0: AVSContext h, 1: GetBitContext gb),
	i32 dequant (0: AVSContext h, 1: i16 dst, 2: i16 level_buf, 3: i32 coeff_num, 4: i32 mul, 5: i32 shift, 6: byte run_buf),
	i32 get_ue_code (0: GetBitContext gb, 1: i32 order),
	void mv_pred_direct (0: AVSContext h, 1: binary col_mv, 2: binary pmv_fw),
	void mv_pred_sym (0: binary size, 1: AVSContext h, 2: binary src),
	void set_intra_mode_default (0: AVSContext h),
	void set_mv_intra (0: AVSContext h),
	void store_mvs (0: AVSContext h),
	void loop_filter_c1 (0: i32 alpha, 1: i32 beta, 2: i32 tc, 3: binary stride, 4: byte p0_p),
	void loop_filter_c2 (0: i32 alpha, 1: i32 beta, 2: binary stride, 3: byte p0_p),
	void loop_filter_l1 (0: i32 alpha, 1: i32 beta, 2: i32 tc, 3: binary stride, 4: byte p0_p),
	void loop_filter_l2 (0: i32 alpha, 1: i32 beta, 2: binary stride, 3: byte p0_p),
	binary AAC_RENAME (),
	i32 main (),
	i32 ff_cbs_alloc_unit_content (0: CodedBitstreamContext ctx, 1: CodedBitstreamUnit unit, 2: i64 size, 3: binary free),
	i32 ff_cbs_alloc_unit_data (0: CodedBitstreamContext ctx, 1: CodedBitstreamUnit unit, 2: i64 size),
	i32 ff_cbs_delete_unit (0: CodedBitstreamContext ctx, 1: CodedBitstreamFragment frag, 2: i32 position),
	i32 ff_cbs_init (0: binary codec_id, 1: CodedBitstreamContext ctx_ptr, 2: void log_ctx),
	i32 ff_cbs_insert_unit_content (0: AVBufferRef content_buf, 1: CodedBitstreamContext ctx, 2: CodedBitstreamFragment frag, 3: CodedBitstreamUnitType type, 4: i32 position, 5: void content),
	i32 ff_cbs_insert_unit_data (0: AVBufferRef data_buf, 1: CodedBitstreamContext ctx, 2: CodedBitstreamFragment frag, 3: CodedBitstreamUnitType type, 4: i32 position, 5: i64 data_size, 6: byte data),
	i32 ff_cbs_read_extradata (0: CodedBitstreamContext ctx, 1: CodedBitstreamFragment frag, 2: binary par),
	i32 ff_cbs_read_packet (0: CodedBitstreamContext ctx, 1: CodedBitstreamFragment frag, 2: binary pkt),
	i32 ff_cbs_read_unsigned (0: CodedBitstreamContext ctx, 1: GetBitContext gbc, 2: binary name, 3: binary subscripts, 4: i32 width, 5: i32 write_to, 6: i32 range_max, 7: i32 range_min),
	i32 ff_cbs_read (0: CodedBitstreamContext ctx, 1: CodedBitstreamFragment frag, 2: binary data, 3: i64 size),
	i32 ff_cbs_write_extradata (0: AVCodecParameters par, 1: CodedBitstreamContext ctx, 2: CodedBitstreamFragment frag),
	i32 ff_cbs_write_fragment_data (0: CodedBitstreamContext ctx, 1: CodedBitstreamFragment frag),
	i32 ff_cbs_write_packet (0: AVPacket pkt, 1: CodedBitstreamContext ctx, 2: CodedBitstreamFragment frag),
	i32 ff_cbs_write_unsigned (0: CodedBitstreamContext ctx, 1: PutBitContext pbc, 2: binary name, 3: binary subscripts, 4: i32 width, 5: i32 range_max, 6: i32 range_min, 7: i32 value),
	void ff_cbs_close (0: CodedBitstreamContext ctx_ptr),
	void ff_cbs_fragment_uninit (0: CodedBitstreamContext ctx, 1: CodedBitstreamFragment frag),
	void ff_cbs_trace_header (0: CodedBitstreamContext ctx, 1: binary name),
	void ff_cbs_trace_syntax_element (0: CodedBitstreamContext ctx, 1: binary bits, 2: binary str, 3: binary subscripts, 4: i64 value, 5: i32 position),
	i32 ff_cbs_h264_add_sei_message (0: CodedBitstreamContext ctx, 1: CodedBitstreamFragment au, 2: binary payload),
	i32 ff_cbs_h264_delete_sei_message (0: CodedBitstreamContext ctx, 1: CodedBitstreamFragment au, 2: CodedBitstreamUnit nal, 3: i32 position),
	i32 ff_celp_lp_synthesis_filter (0: binary filter_coeffs, 1: binary in, 2: i16 out, 3: i32 buffer_length, 4: i32 filter_length, 5: i32 rounder, 6: i32 shift, 7: i32 stop_on_overflow),
	void ff_celp_circ_addf (0: binary in, 1: binary lagged, 2: double out, 3: double fac, 4: i32 lag, 5: i32 n),
	void ff_celp_convolve_circ (0: binary fc_in, 1: binary filter, 2: i16 fc_out, 3: i32 len),
	void ff_celp_filter_init (0: CELPFContext c),
	void ff_celp_lp_synthesis_filterf (0: binary filter_coeffs, 1: binary in, 2: double out, 3: i32 buffer_length, 4: i32 filter_length),
	void ff_celp_lp_zero_synthesis_filterf (0: binary filter_coeffs, 1: binary in, 2: double out, 3: i32 buffer_length, 4: i32 filter_length),
	double ff_dot_productf (0: binary a, 1: binary b, 2: i32 length),
	i64 ff_dot_product (0: binary a, 1: binary b, 2: i32 length),
	i32 ff_exp2 (0: i16 power),
	i32 ff_log2_q15 (0: i32 value),
	void ff_celp_math_init (0: CELPMContext c),
	i32 bidir_sal (0: i32 offset, 1: i32 value),
	i32 dequant_and_decompand (0: i32 codebook, 1: i32 level, 2: i32 quantisation),
	void difference_coding (0: i16 band, 1: i32 height, 2: i32 width),
	void filter (0: i16 high, 1: i16 low, 2: i16 output, 3: i32 clip, 4: i32 len, 5: binary high_stride, 6: binary low_stride, 7: binary out_stride),
	void interlaced_vertical_filter (0: i16 high, 1: i16 low, 2: i16 output, 3: i32 linesize, 4: i32 plane, 5: i32 width),
	void peak_table (0: Peak peak, 1: i16 band, 2: i32 length),
	void process_alpha (0: i16 alpha, 1: i32 width),
	binary ff_cfhd_init_vlcs (0: CFHDContext s),
	void ff_draw_pc_font (0: binary font, 1: i32 bg, 2: i32 ch, 3: i32 fg, 4: i32 font_height, 5: i32 linesize, 6: byte dst),
	i32 decode_block (0: CLVContext ctx, 1: i16 blk, 2: i32 ac_quant, 3: i32 has_ac),
	i32 avpriv_codec2_mode_bit_rate (0: i32 mode, 1: void logctx),
	i32 avpriv_codec2_mode_block_align (0: i32 mode, 1: void logctx),
	i32 avpriv_codec2_mode_frame_size (0: i32 mode, 1: void logctx),
	i16 avpriv_codec2_version_from_extradata (0: byte ptr),
	byte avpriv_codec2_mode_from_extradata (0: byte ptr),
	void avpriv_codec2_make_extradata (0: i32 mode, 1: byte ptr),
	binary avcodec_get_type (0: binary codec_id),
	binary avcodec_descriptor_get_by_name (0: binary name),
	binary avcodec_descriptor_get (0: binary id),
	binary avcodec_descriptor_next (0: binary prev),
	i32 decode_bytes (0: binary inbuffer, 1: i32 bytes, 2: byte out),
	void decode_bytes_and_gain (0: COOKContext q, 1: COOKSubpacket p, 2: binary inbuffer, 3: cook_gains gains_ptr),
	void expand_category (0: COOKContext q, 1: i32 category_index, 2: i32 category),
	void mlt_compensate_output (0: COOKContext q, 1: cook_gains gains_ptr, 2: double decode_buffer, 3: double out, 4: double previous_buffer),
	void copy_block16 (0: binary src, 1: i32 h, 2: binary dstStride, 3: binary srcStride, 4: byte dst),
	void copy_block17 (0: binary src, 1: i32 h, 2: binary dstStride, 3: binary srcStride, 4: byte dst),
	void copy_block2 (0: binary src, 1: i32 h, 2: binary dstStride, 3: binary srcStride, 4: byte dst),
	void copy_block4 (0: binary src, 1: i32 h, 2: binary dstStride, 3: binary srcStride, 4: byte dst),
	void copy_block8 (0: binary src, 1: i32 h, 2: binary dstStride, 3: binary srcStride, 4: byte dst),
	void copy_block9 (0: binary src, 1: i32 h, 2: binary dstStride, 3: binary srcStride, 4: byte dst),
	i32 main (0: binary argv, 1: i32 argc),
	binary id2subtype (0: binary id, 1: CHDContext priv),
	CopyRet copy_frame (0: AVCodecContext avctx, 1: AVFrame frame, 2: binary output, 3: i32 got_frame),
	CopyRet receive_frame (0: AVCodecContext avctx, 1: AVFrame frame, 2: i32 got_frame),
	void print_frame_info (0: binary output, 1: CHDContext priv),
	binary av_d3d11va_alloc_context (),
	AVD3D11VAContext av_d3d11va_alloc_context (),
	i32 avpriv_dca_convert_bitstream (0: binary src, 1: i32 max_size, 2: i32 src_size, 3: byte dst),
	i32 avpriv_dca_parse_core_frame_header (0: DCACoreFrameHeader h, 1: binary buf, 2: i32 size),
	i32 ff_dca_parse_core_frame_header (0: DCACoreFrameHeader h, 1: GetBitContext gb),
	i32 ff_dca_count_chs_for_mask (0: binary mask),
	binary ff_dca_core_init (0: DCACoreDecoder s),
	binary ff_dca_core_close (0: DCACoreDecoder s),
	binary ff_dca_core_flush (0: DCACoreDecoder s),
	i32 decode_blockcodes (0: i32 audio, 1: i32 code1, 2: i32 code2, 3: i32 levels),
	i32 extract_audio (0: DCACoreDecoder s, 1: i32 audio, 2: i32 abits, 3: i32 ch),
	i32 ff_dca_core_filter_fixed (0: DCACoreDecoder s, 1: i32 x96_synth),
	i32 ff_dca_core_filter_frame (0: AVFrame frame, 1: DCACoreDecoder s),
	i32 ff_dca_core_parse_exss (0: DCACoreDecoder s, 1: DCAExssAsset asset, 2: byte data),
	i32 ff_dca_core_parse (0: DCACoreDecoder s, 1: i32 size, 2: byte data),
	i32 parse_block_codes (0: DCACoreDecoder s, 1: i32 audio, 2: i32 abits),
	i32 parse_huffman_codes (0: DCACoreDecoder s, 1: i32 audio, 2: i32 abits, 3: i32 sel),
	i32 parse_joint_scale (0: DCACoreDecoder s, 1: i32 sel),
	i32 parse_scale (0: DCACoreDecoder s, 1: i32 scale_index, 2: i32 sel),
	void inverse_adpcm (0: binary vq_index, 1: binary prediction_mode, 2: i32 subband_samples, 3: i32 len, 4: i32 ofs, 5: i32 sb_end, 6: i32 sb_start),
	i32 ff_dca_core_map_spkr (0: DCACoreDecoder core, 1: i32 spkr),
	void ff_dca_core_dequantize (0: binary input, 1: i32 output, 2: i32 scale, 3: i32 step_size, 4: i32 len, 5: i32 residual),
	i32 ff_dca_exss_parse (0: DCAExssParser s, 1: binary data, 2: i32 size),
	binary ff_dca_lbr_init (0: DCALbrDecoder s),
	binary ff_dca_lbr_close (0: DCALbrDecoder s),
	binary ff_dca_lbr_flush (0: DCALbrDecoder s),
	i32 ff_dca_lbr_filter_frame (0: AVFrame frame, 1: DCALbrDecoder s),
	i32 ff_dca_lbr_parse (0: DCAExssAsset asset, 1: DCALbrDecoder s, 2: byte data),
	i32 parse_vlc (0: GetBitContext s, 1: VLC vlc, 2: i32 max_depth),
	binary ff_dca_xll_close (0: DCAXllDecoder s),
	binary ff_dca_xll_flush (0: DCAXllDecoder s),
	i32 ff_dca_xll_filter_frame (0: AVFrame frame, 1: DCAXllDecoder s),
	i32 ff_dca_xll_parse (0: DCAExssAsset asset, 1: DCAXllDecoder s, 2: byte data),
	binary ff_dcaadpcm_init (0: DCAADPCMEncContext s),
	binary ff_dcaadpcm_free (0: DCAADPCMEncContext s),
	i64 apply_filter (0: binary a, 1: binary aa, 2: binary corr),
	i64 calc_corr (0: binary x, 1: i32 j, 2: i32 k, 3: i32 len),
	i64 calc_prediction_gain (0: binary in, 1: i32 out, 2: i32 len, 3: i32 pred_vq),
	i32 ff_dcaadpcm_do_real (0: binary in, 1: binary prev_hist, 2: i32 next_hist, 3: i32 out, 4: i32 peak, 5: i32 scale_factor, 6: i32 step_size, 7: i32 len, 8: i32 pred_vq_index, 9: softfloat quant),
	i32 ff_dcaadpcm_subband_analysis (0: binary s, 1: binary in, 2: i32 diff, 3: i32 len),
	i64 ff_dcaadpcm_predict (0: binary input, 1: i32 pred_vq_index),
	binary ff_dcadct_init (0: DCADCTContext c),
	i32 ff_dca_set_channel_layout (0: AVCodecContext avctx, 1: i32 ch_remap, 2: i32 dca_mask),
	void ff_dca_downmix_to_stereo_fixed (0: DCADSPContext dcadsp, 1: i32 coeff_l, 2: i32 samples, 3: i32 ch_mask, 4: i32 nsamples),
	void ff_dca_downmix_to_stereo_float (0: AVFloatDSPContext fdsp, 1: double samples, 2: i32 coeff_l, 3: i32 ch_mask, 4: i32 nsamples),
	i32 ff_dca_check_crc (0: AVCodecContext avctx, 1: GetBitContext s, 2: i32 p1, 3: i32 p2),
	i32 ff_dca_seek_bits (0: GetBitContext s, 1: i32 p),
	binary ff_dcadsp_init (0: DCADSPContext s),
	i32 find_peak (0: DCAEncContext c, 1: binary in, 2: i32 len),
	i32 get_step_size (0: DCAEncContext c, 1: i32 band, 2: i32 ch),
	void quantize_adpcm_subband (0: DCAEncContext c, 1: i32 band, 2: i32 ch),
	i32 quantize_value (0: i32 value, 1: softfloat quant),
	binary ff_dca_init_vlcs (),
	i32 ff_dca_vlc_calc_alloc_bits (0: i32 values, 1: byte n, 2: byte sel),
	i32 ff_dca_vlc_calc_quant_bits (0: i32 values, 1: byte n, 2: byte sel, 3: byte table),
	void ff_dca_vlc_enc_alloc (0: PutBitContext pb, 1: i32 values, 2: byte n, 3: byte sel),
	void ff_dca_vlc_enc_quant (0: PutBitContext pb, 1: i32 values, 2: byte n, 3: byte sel, 4: byte table),
	i32 clip23 (0: i32 a),
	i32 mul15 (0: i32 a, 1: i32 b),
	i32 mul16 (0: i32 a, 1: i32 b),
	i32 mul17 (0: i32 a, 1: i32 b),
	i32 mul22 (0: i32 a, 1: i32 b),
	i32 mul23 (0: i32 a, 1: i32 b),
	i32 mul31 (0: i32 a, 1: i32 b),
	i32 mul32 (0: i32 a, 1: i32 b),
	i32 mul__ (0: i32 a, 1: i32 b, 2: i32 bits),
	i32 norm13 (0: i64 a),
	i32 norm16 (0: i64 a),
	i32 norm20 (0: i64 a),
	i32 norm21 (0: i64 a),
	i32 norm23 (0: i64 a),
	i32 norm__ (0: i64 a, 1: i32 bits),
	binary ff_dct_init (0: binary inverse, 1: DCTContext s, 2: i32 nbits),
	binary ff_dct_end (0: DCTContext s),
	void dct32 (0: INTFLOAT out, 1: binary tab_arg),
	binary ff_ref_dct_init (),
	void ff_ref_fdct (0: binary block),
	void ff_ref_idct (0: binary block),
	binary avcodec_default_get_format (0: binary avctx, 1: binary fmt),
	binary avcodec_decode_audio4 (0: AVCodecContext avctx, 1: AVFrame frame, 2: binary avpkt, 3: i32 got_frame_ptr),
	binary avcodec_decode_video2 (0: AVCodecContext avctx, 1: AVFrame picture, 2: binary avpkt, 3: i32 got_picture_ptr),
	binary avcodec_receive_frame (0: AVCodecContext avctx, 1: AVFrame frame),
	binary avcodec_send_packet (0: AVCodecContext avctx, 1: binary avpkt),
	i32 avcodec_decode_subtitle2 (0: AVCodecContext avctx, 1: AVPacket avpkt, 2: AVSubtitle sub, 3: i32 got_sub_ptr),
	i32 avcodec_default_get_buffer2 (0: AVCodecContext avctx, 1: AVFrame frame, 2: i32 flags),
	i32 avcodec_get_hw_frames_parameters (0: binary hw_pix_fmt, 1: AVBufferRef out_frames_ref, 2: AVBufferRef device_ref, 3: AVCodecContext avctx),
	i32 ff_attach_decode_data (0: AVFrame frame),
	i32 ff_decode_bsfs_init (0: AVCodecContext avctx),
	i32 ff_decode_frame_props (0: AVCodecContext avctx, 1: AVFrame frame),
	i32 ff_decode_get_hw_frames_ctx (0: binary dev_type, 1: AVCodecContext avctx),
	i32 ff_decode_get_packet (0: AVCodecContext avctx, 1: AVPacket pkt),
	i32 ff_get_buffer (0: AVCodecContext avctx, 1: AVFrame frame, 2: i32 flags),
	i32 ff_get_format (0: AVCodecContext avctx, 1: binary fmt),
	i32 ff_reget_buffer (0: AVCodecContext avctx, 1: AVFrame frame),
	void avcodec_flush_buffers (0: AVCodecContext avctx),
	void ff_decode_bsfs_uninit (0: AVCodecContext avctx),
	i32 av_dirac_parse_sequence_header (0: AVDiracSeqHeader pdsh, 1: binary buf, 2: i64 buf_size, 3: void log_ctx),
	binary ff_dirac_init_arith_tables (),
	void ff_dirac_init_arith_decoder (0: DiracArith c, 1: GetBitContext gb, 2: i32 length),
	i32 dirac_get_arith_bit (0: DiracArith c, 1: i32 ctx),
	i32 dirac_get_arith_int (0: DiracArith c, 1: i32 data_ctx, 2: i32 follow_ctx),
	i32 dirac_get_arith_uint (0: DiracArith c, 1: i32 data_ctx, 2: i32 follow_ctx),
	void refill (0: DiracArith c),
	void renorm (0: DiracArith c),
	i32 ff_spatial_idwt_init (0: binary type, 1: DWTContext d, 2: DWTPlane p, 3: i32 bit_depth, 4: i32 decomposition_count),
	void ff_spatial_idwt_slice2 (0: DWTContext d, 1: i32 y),
	binary ff_dirac_golomb_reader_init (0: DiracGolombLUT lut_ctx),
	binary ff_dirac_golomb_reader_end (0: DiracGolombLUT lut_ctx),
	i32 ff_dirac_golomb_read_16bit (0: DiracGolombLUT lut_ctx, 1: binary buf, 2: i32 bytes, 3: i32 coeffs, 4: byte _dst),
	i32 ff_dirac_golomb_read_32bit (0: DiracGolombLUT lut_ctx, 1: binary buf, 2: i32 bytes, 3: i32 coeffs, 4: byte _dst),
	void search_for_golomb (0: DiracGolombLUT l, 1: i32 bits, 2: residual r),
	i32 coeff_unpack_golomb (0: GetBitContext gb, 1: i32 qfactor, 2: i32 qoffset),
	i32 divide3 (0: i32 x),
	i32 pred_block_mode (0: DiracBlock block, 1: i32 refmask, 2: i32 stride, 3: i32 x, 4: i32 y),
	i32 pred_sbsplit (0: i32 stride, 1: i32 x, 2: i32 y, 3: byte sbsplit),
	void pred_block_dc (0: DiracBlock block, 1: i32 stride, 2: i32 x, 3: i32 y),
	void pred_mv (0: DiracBlock block, 1: i32 ref, 2: i32 stride, 3: i32 x, 4: i32 y),
	i16 DEQUANT_SUBBAND (),
	i32 avpriv_dnxhd_get_frame_size (0: i32 cid),
	i32 avpriv_dnxhd_get_hr_frame_size (0: i32 cid, 1: i32 h, 2: i32 w),
	i32 avpriv_dnxhd_get_interlaced (0: i32 cid),
	i32 ff_dnxhd_find_cid (0: AVCodecContext avctx, 1: i32 bit_depth),
	i32 ff_dnxhd_get_cid_table (0: i32 cid),
	void ff_dnxhd_print_profiles (0: AVCodecContext avctx, 1: i32 loglevel),
	binary ff_dnxhd_check_header_prefix_hr (0: i64 prefix),
	binary ff_dnxhd_check_header_prefix (0: i64 prefix),
	binary ff_dnxhd_parse_header_prefix (0: binary buf),
	i32 get_bucket (0: i32 shift, 1: i32 value),
	i32 log_add (0: i32 a, 1: i32 b),
	binary ff_init_dsd_data (),
	void ff_dsd2pcm_translate (0: DSDContext s, 1: binary src, 2: double dst, 3: i32 lsbf, 4: binary dst_stride, 5: binary src_stride, 6: i64 samples),
	binary ff_dvvideo_init (0: AVCodecContext avctx),
	i32 ff_dv_init_dynamic_tables (0: DVVideoContext ctx, 1: binary d),
	void dv_calc_mb_coordinates (0: binary d, 1: i32 chan, 2: i32 seq, 3: i32 slot, 4: i16 tbl),
	i32 dv_work_pool_size (0: binary d),
	void dv_calculate_mb_xy (0: DVVideoContext s, 1: DVwork_chunk work_chunk, 2: i32 mb_x, 3: i32 mb_y, 4: i32 m),
	binary av_dv_codec_profile2 (0: binary pix_fmt, 1: AVRational frame_rate, 2: i32 height, 3: i32 width),
	binary av_dv_codec_profile (0: binary pix_fmt, 1: i32 height, 2: i32 width),
	binary av_dv_frame_profile (0: binary sys, 1: binary frame, 2: binary buf_size),
	binary ff_dv_frame_profile (0: AVCodecContext codec, 1: binary sys, 2: binary frame, 3: binary buf_size),
	void ff_dv_print_profiles (0: i32 loglevel, 1: void logctx),
	binary dv_vlc_map_tableinit (),
	i32 dv_get_audio_sample_count (0: binary buffer, 1: i32 dsf),
	i16 dv_audio_12to16 (0: i16 sample),
	binary ff_data_identifier_is_teletext (0: i32 data_identifier),
	binary ff_data_unit_id_is_teletext (0: i32 data_unit_id),
	void bit_copy (0: GetBitContext gb, 1: PutBitContext pb),
	i32 dv_write_dif_id (0: binary t, 1: byte buf, 2: byte chan_num, 3: byte dif_num, 4: byte seq_num),
	i32 dv_write_pack (0: binary pack_id, 1: DVVideoContext c, 2: byte buf),
	i32 dv_write_ssyb_id (0: byte buf, 1: byte fr, 2: byte syb_num),
	void dv_guess_qnos (0: EncBlockInfo blks, 1: i32 qnos),
	byte decode_sym_565 (0: GetBitContext gb, 1: i32 bits, 2: binary lru),
	byte decode_sym (0: GetBitContext gb, 1: binary lru),
	i32 ff_dxva2_commit_buffer (0: AVCodecContext avctx, 1: AVDXVAContext ctx, 2: DECODER_BUFFER_DESC dsc, 3: binary data, 4: binary mb_count, 5: binary size, 6: binary type),
	i32 ff_dxva2_common_end_frame (0: AVCodecContext avctx, 1: AVFrame frame, 2: binary pp, 3: binary qm, 4: binary commit_bs_si, 5: binary pp_size, 6: binary qm_size),
	i32 ff_dxva2_common_frame_params (0: AVBufferRef hw_frames_ctx, 1: AVCodecContext avctx),
	i32 ff_dxva2_decode_init (0: AVCodecContext avctx),
	i32 ff_dxva2_decode_uninit (0: AVCodecContext avctx),
	i32 ff_dxva2_is_d3d11 (0: binary avctx),
	binary ff_dxva2_get_surface_index (0: binary avctx, 1: binary ctx, 2: binary frame),
	binary ff_eac3_exponent_init (),
	void ff_eac3_get_frame_exp_strategy (0: AC3EncodeContext s),
	void ff_eac3_output_frame_header (0: AC3EncodeContext s),
	void ff_eac3_set_cpl_states (0: AC3EncodeContext s),
	void ea_idct_col (0: binary src, 1: i16 dest),
	void ff_ea_idct_put_c (0: i16 block, 1: binary linesize, 2: byte dest),
	i32 decode_block_intra (0: MadContext s, 1: i16 block),
	void comp_block (0: AVFrame frame, 1: MadContext t, 2: i32 add, 3: i32 j, 4: i32 mb_x, 5: i32 mb_y, 6: i32 mv_x, 7: i32 mv_y),
	void comp (0: i32 add, 1: binary dst_stride, 2: binary src_stride, 3: binary dst, 4: binary src),
	void idct_put (0: AVFrame frame, 1: MadContext t, 2: i16 block, 3: i32 j, 4: i32 mb_x, 5: i32 mb_y),
	void tgq_dconly (0: TgqContext s, 1: i32 dc, 2: binary dst_stride, 3: binary dst),
	void tqi_idct_put (0: AVCodecContext avctx, 1: AVFrame frame, 2: binary block),
	i32 avpriv_do_elbg (0: AVLFG rand_state, 1: i32 closest_cb, 2: i32 codebook, 3: i32 points, 4: i32 dim, 5: i32 max_steps, 6: i32 numCB, 7: i32 numpoints),
	i32 avpriv_init_elbg (0: AVLFG rand_state, 1: i32 closest_cb, 2: i32 codebook, 3: i32 points, 4: i32 dim, 5: i32 max_steps, 6: i32 numCB, 7: i32 numpoints),
	i32 distance_limited (0: i32 a, 1: i32 b, 2: i32 dim, 3: i32 limit),
	void vect_division (0: i32 res, 1: i32 vect, 2: i32 dim, 3: i32 div),
	i32 ff_els_decode_bit (0: ElsDecCtx ctx, 1: byte rung),
	binary ff_els_decode_unsigned (0: ElsDecCtx ctx, 1: ElsUnsignedRung ur),
	void ff_els_decoder_init (0: ElsDecCtx ctx, 1: binary in, 2: i64 data_size),
	void ff_els_decoder_uninit (0: ElsUnsignedRung rung),
	binary avcodec_encode_audio2 (0: AVCodecContext avctx, 1: AVPacket avpkt, 2: binary frame, 3: i32 got_packet_ptr),
	binary avcodec_encode_video2 (0: AVCodecContext avctx, 1: AVPacket avpkt, 2: binary frame, 3: i32 got_packet_ptr),
	binary avcodec_receive_packet (0: AVCodecContext avctx, 1: AVPacket avpkt),
	binary avcodec_send_frame (0: AVCodecContext avctx, 1: binary frame),
	i32 avcodec_encode_subtitle (0: AVCodecContext avctx, 1: binary sub, 2: i32 buf_size, 3: byte buf),
	i32 ff_alloc_packet2 (0: AVCodecContext avctx, 1: AVPacket avpkt, 2: i64 min_size, 3: i64 size),
	i32 ff_alloc_packet (0: AVPacket avpkt, 1: i32 size),
	void ff_er_add_slice (0: ERContext s, 1: i32 endx, 2: i32 endy, 3: i32 startx, 4: i32 starty, 5: i32 status),
	void ff_er_frame_end (0: ERContext s),
	void ff_er_frame_start (0: ERContext s),
	i32 avpriv_exif_decode_ifd (0: AVDictionary metadata, 1: binary buf, 2: i32 depth, 3: i32 le, 4: i32 size, 5: void logctx),
	i32 ff_exif_decode_ifd (0: AVDictionary metadata, 1: GetByteContext gbytes, 2: i32 depth, 3: i32 le, 4: void logctx),
	i16 exr_flt2uint (0: i32 v),
	i16 exr_halflt2uint (0: i16 v),
	void wdec14 (0: i16 a, 1: i16 b, 2: i16 h, 3: i16 l),
	void wdec16 (0: i16 a, 1: i16 b, 2: i16 h, 3: i16 l),
	binary ff_exrdsp_init (0: ExrDSPContext c),
	void ff_faandct248 (0: i16 data),
	void ff_faandct (0: i16 data),
	void ff_faanidct_add (0: binary block, 1: binary line_size, 2: byte dest),
	void ff_faanidct_put (0: binary block, 1: binary line_size, 2: byte dest),
	void ff_faanidct (0: binary block),
	void p8idct (0: binary temp, 1: binary data, 2: i32 type, 3: i32 x, 4: i32 y, 5: binary stride, 6: byte dest),
	binary ff_ccitt_unpack_init (),
	i32 ff_ccitt_unpack (0: binary compr, 1: AVCodecContext avctx, 2: binary src, 3: i32 height, 4: i32 opts, 5: i32 srcsize, 6: i32 stride, 7: byte dst),
	binary ff_fdctdsp_init (0: AVCodecContext avctx, 1: FDCTDSPContext c),
	binary ff_jni_get_env (0: void log_ctx),
	byte ff_jni_jstring_to_utf_chars (0: binary env, 1: binary string, 2: void log_ctx),
	i32 ff_jni_exception_check (0: binary env, 1: i32 log, 2: void log_ctx),
	i32 ff_jni_exception_get_summary (0: binary env, 1: byte error, 2: binary exception, 3: void log_ctx),
	i32 ff_jni_init_jfields (0: binary env, 1: binary jfields_mapping, 2: i32 global, 3: void jfields, 4: void log_ctx),
	i32 ff_jni_reset_jfields (0: binary env, 1: binary jfields_mapping, 2: i32 global, 3: void jfields, 4: void log_ctx),
	binary ff_jni_utf_chars_to_jstring (0: binary env, 1: binary utf_chars, 2: void log_ctx),
	void ff_fft_lut_init (0: i32 index, 1: i32 off, 2: i32 size, 3: i16 table),
	binary ff_fft_init (0: FFTContext s, 1: i32 inverse, 2: i32 nbits),
	binary ff_fft_end (0: FFTContext s),
	binary ff_init_ff_cos_tabs (0: i32 index),
	binary ff_ffv1_close (0: AVCodecContext avctx),
	binary ff_ffv1_common_init (0: AVCodecContext avctx),
	binary ff_ffv1_init_slice_contexts (0: FFV1Context f),
	binary ff_ffv1_init_slice_state (0: FFV1Context fs, 1: FFV1Context f),
	binary ff_ffv1_init_slices_state (0: FFV1Context f),
	i32 ff_ffv1_allocate_initial_states (0: FFV1Context f),
	void ff_ffv1_clear_slice_state (0: FFV1Context fs, 1: FFV1Context f),
	binary fold (0: i32 bits, 1: i32 diff),
	void update_vlc_state (0: VlcState state, 1: binary v),
	i32 RENAME (),
	binary get_symbol_inline (0: RangeCoder c, 1: i32 is_signed, 2: byte state),
	i32 get_vlc_symbol (0: GetBitContext gb, 1: VlcState state, 2: i32 bits),
	void put_vlc_symbol (0: PutBitContext pb, 1: VlcState state, 2: i32 bits, 3: i32 v),
	i32 avpriv_fits_header_init (0: FITSHeader header, 1: FITSHeaderState state),
	i32 avpriv_fits_header_parse_line (0: AVDictionary metadata, 1: FITSHeader header, 2: binary line, 3: void avcl),
	i32 ff_flac_decode_frame_header (0: AVCodecContext avctx, 1: FLACFrameInfo fi, 2: GetBitContext gb, 3: i32 log_level_offset),
	i32 ff_flac_get_max_frame_size (0: i32 blocksize, 1: i32 bps, 2: i32 ch),
	i32 ff_flac_is_extradata_valid (0: binary format, 1: AVCodecContext avctx, 2: byte streaminfo_start),
	i32 ff_flac_parse_streaminfo (0: binary s, 1: AVCodecContext avctx, 2: binary buffer),
	void ff_flac_set_channel_layout (0: AVCodecContext avctx),
	binary flac_parse_block_header (0: binary block_header, 1: i32 last, 2: i32 size, 3: i32 type),
	i32 decode_subframe (0: FLACContext s, 1: i32 channel),
	binary ff_flacdsp_init (0: binary fmt, 1: FLACDSPContext c, 2: i32 bps, 3: i32 channels),
	i32 encode_15_7_sl (0: Palette palette, 1: binary src, 2: i32 dist, 3: i32 width, 4: byte dest),
	i32 pixel_color7_fast (0: Palette palette, 1: binary c15),
	binary chroma_diff (0: binary c1, 1: binary c2),
	binary pixel_bgr (0: binary src),
	binary pixel_color15 (0: binary src),
	i32 ff_flv_decode_picture_header (0: MpegEncContext s),
	void ff_flv2_encode_ac_esc (0: PutBitContext pb, 1: i32 last, 2: i32 level, 3: i32 run, 4: i32 slevel),
	void ff_flv_encode_picture_header (0: MpegEncContext s, 1: i32 picture_number),
	binary ff_fmt_convert_init (0: AVCodecContext avctx, 1: FmtConvertContext c),
	i32 ff_frame_thread_encoder_init (0: AVCodecContext avctx, 1: AVDictionary options),
	i32 ff_thread_video_encode_frame (0: AVCodecContext avctx, 1: AVPacket pkt, 2: binary frame, 3: i32 got_packet_ptr),
	void ff_frame_thread_encoder_free (0: AVCodecContext avctx),
	i32 epic_cache_entries_for_pixel (0: binary hash, 1: i32 pix),
	i32 epic_decode_component_pred (0: ePICContext dc, 1: i32 NW, 2: i32 N, 3: i32 W),
	i32 is_pixel_on_stack (0: binary dc, 1: i32 pix),
	void yuv2rgb (0: i32 U, 1: i32 V, 2: i32 Y, 3: i32 ridx, 4: byte out),
	i32 linear_scale_factor (0: binary log_factor),
	void ff_g722_update_high_predictor (0: binary band, 1: binary dhigh, 2: binary ihigh),
	void ff_g722_update_low_predictor (0: binary band, 1: binary ilow),
	void s_zero (0: binary band, 1: i32 cur_diff),
	binary ff_g722dsp_init (0: G722DSPContext c),
	i32 encode_high (0: binary state, 1: i32 xhigh),
	i32 encode_low (0: binary state, 1: i32 xlow),
	void filter_samples (0: G722Context c, 1: binary samples, 2: i32 xhigh, 3: i32 xlow),
	i32 ff_g723_1_dot_product (0: binary a, 1: binary b, 2: i32 length),
	i32 ff_g723_1_normalize_bits (0: i32 num, 1: i32 width),
	i32 ff_g723_1_scale_vector (0: binary vector, 1: i16 dst, 2: i32 length),
	void ff_g723_1_gen_acb_excitation (0: binary cur_rate, 1: G723_1_Subframe subfrm, 2: i16 prev_excitation, 3: i16 vector, 4: i32 pitch_lag),
	void ff_g723_1_gen_dirac_train (0: i16 buf, 1: i32 pitch_lag),
	void ff_g723_1_get_residual (0: i16 prev_excitation, 1: i16 residual, 2: i32 lag),
	void ff_g723_1_inverse_quant (0: i16 cur_lsp, 1: i16 prev_lsp, 2: i32 bad_frame, 3: byte lsp_index),
	void ff_g723_1_lsp_interpolate (0: i16 cur_lsp, 1: i16 lpc, 2: i16 prev_lsp),
	i32 cng_rand (0: i32 state, 1: i32 base),
	Float11 i2f (0: Float11 f, 1: i32 i),
	i16 inverse_quant (0: G726Context c, 1: i32 i),
	i16 mult (0: Float11 f1, 1: Float11 f2),
	i32 sgn (0: i32 value),
	byte quant (0: G726Context c, 1: i32 d),
	i16 g729_prng (0: i16 value),
	i16 ff_g729_adaptive_gain_control (0: i16 speech, 1: i16 gain_prev, 2: i32 gain_after, 3: i32 gain_before, 4: i32 subframe_size),
	void ff_g729_postfilter (0: AudioDSPContext adsp, 1: binary lp_filter_coeffs, 2: i32 voicing, 3: i16 ht_prev_data, 4: i16 pos_filter_data, 5: i16 res_filter_data, 6: i16 residual, 7: i16 speech, 8: i32 pitch_delay_int, 9: i32 subframe_size),
	binary get_bitsz (0: GetBitContext s, 1: i32 n),
	binary get_vlc2 (0: GetBitContext s, 1: binary table, 2: i32 bits, 3: i32 max_depth),
	binary align_get_bits (0: GetBitContext s),
	i32 check_marker (0: GetBitContext s, 1: binary msg, 2: void logctx),
	i32 decode012 (0: GetBitContext gb),
	i32 decode210 (0: GetBitContext gb),
	i32 get_bits_count (0: binary s),
	i32 get_bits_left (0: GetBitContext gb),
	i32 get_sbits_long (0: GetBitContext s, 1: i32 n),
	i32 get_sbits (0: GetBitContext s, 1: i32 n),
	i32 get_xbits_le (0: GetBitContext s, 1: i32 n),
	i32 get_xbits (0: GetBitContext s, 1: i32 n),
	i32 init_get_bits8 (0: GetBitContext s, 1: binary buffer, 2: i32 byte_size),
	i32 init_get_bits (0: GetBitContext s, 1: binary buffer, 2: i32 bit_size),
	i32 set_idx (0: GetBitContext s, 1: binary table, 2: i32 nb_bits, 3: i32 n, 4: i32 code),
	i32 skip_1stop_8data_bits (0: GetBitContext gb),
	i64 get_bits64 (0: GetBitContext s, 1: i32 n),
	i64 get_val (0: GetBitContext s, 1: i32 is_le, 2: binary n),
	binary get_bits1 (0: GetBitContext s),
	binary get_bits_le (0: GetBitContext s, 1: i32 n),
	binary get_bits_long (0: GetBitContext s, 1: i32 n),
	binary get_bits (0: GetBitContext s, 1: i32 n),
	binary show_bits1 (0: GetBitContext s),
	binary show_bits_long (0: GetBitContext s, 1: i32 n),
	binary show_bits (0: GetBitContext s, 1: i32 n),
	binary show_val (0: binary s, 1: binary n),
	void refill_32 (0: GetBitContext s),
	void refill_64 (0: GetBitContext s),
	void skip_bits1 (0: GetBitContext s),
	void skip_bits_long (0: GetBitContext s, 1: i32 n),
	void skip_bits (0: GetBitContext s, 1: i32 n),
	void skip_remaining (0: GetBitContext s, 1: binary n),
	i32 dirac_get_se_golomb (0: GetBitContext gb),
	i32 get_interleaved_se_golomb (0: GetBitContext gb),
	i32 get_se_golomb_long (0: GetBitContext gb),
	i32 get_se_golomb (0: GetBitContext gb),
	i32 get_se (0: GetBitContext s, 1: binary file, 2: binary func, 3: i32 line),
	i32 get_sr_golomb_flac (0: GetBitContext gb, 1: i32 esc_len, 2: i32 k, 3: i32 limit),
	i32 get_sr_golomb_shorten (0: GetBitContext gb, 1: i32 k),
	i32 get_sr_golomb (0: GetBitContext gb, 1: i32 esc_len, 2: i32 k, 3: i32 limit),
	i32 get_te0_golomb (0: GetBitContext gb, 1: i32 range),
	i32 get_te_golomb (0: GetBitContext gb, 1: i32 range),
	i32 get_te (0: GetBitContext s, 1: byte file, 2: binary func, 3: i32 line, 4: i32 r),
	i32 get_ue_golomb_31 (0: GetBitContext gb),
	i32 get_ue_golomb (0: GetBitContext gb),
	i32 get_ue (0: GetBitContext s, 1: binary file, 2: binary func, 3: i32 line),
	i32 get_ur_golomb_jpegls (0: GetBitContext gb, 1: i32 esc_len, 2: i32 k, 3: i32 limit),
	i32 get_ur_golomb (0: GetBitContext gb, 1: i32 esc_len, 2: i32 k, 3: i32 limit),
	binary get_ur_golomb_shorten (0: GetBitContext gb, 1: i32 k),
	binary get_interleaved_ue_golomb (0: GetBitContext gb),
	binary get_ue_golomb_long (0: GetBitContext gb),
	void set_se_golomb (0: PutBitContext pb, 1: i32 i),
	void set_sr_golomb_flac (0: PutBitContext pb, 1: i32 esc_len, 2: i32 i, 3: i32 k, 4: i32 limit),
	void set_sr_golomb (0: PutBitContext pb, 1: i32 esc_len, 2: i32 i, 3: i32 k, 4: i32 limit),
	void set_te_golomb (0: PutBitContext pb, 1: i32 i, 2: i32 range),
	void set_ue_golomb_long (0: PutBitContext pb, 1: i32 i),
	void set_ue_golomb (0: PutBitContext pb, 1: i32 i),
	void set_ur_golomb_jpegls (0: PutBitContext pb, 1: i32 esc_len, 2: i32 i, 3: i32 k, 4: i32 limit),
	void set_ur_golomb (0: PutBitContext pb, 1: i32 esc_len, 2: i32 i, 3: i32 k, 4: i32 limit),
	i32 decode_log_area (0: i32 coded, 1: i32 factor, 2: i32 offset),
	i32 gsm_mult (0: i32 a, 1: i32 b),
	binary ff_h261_common_init (),
	void ff_h261_loop_filter (0: MpegEncContext s),
	binary ff_h261_encode_init (0: MpegEncContext s),
	i32 ff_h261_get_picture_format (0: i32 height, 1: i32 width),
	i32 get_cbp (0: MpegEncContext s),
	void ff_h261_encode_mb (0: MpegEncContext s, 1: i32 motion_x, 2: i32 motion_y),
	void ff_h261_encode_picture_header (0: MpegEncContext s, 1: i32 picture_number),
	void ff_h261_reorder_mb_index (0: MpegEncContext s),
	i16 ff_h263_pred_motion (0: MpegEncContext s, 1: i32 px, 2: i32 py, 3: i32 block, 4: i32 dir),
	i32 ff_h263_pred_dc (0: MpegEncContext s, 1: i16 dc_val_ptr, 2: i32 n),
	void ff_h263_loop_filter (0: MpegEncContext s),
	void ff_h263_pred_acdc (0: MpegEncContext s, 1: i16 block, 2: i32 n),
	void ff_h263_update_motion_val (0: MpegEncContext s),
	i32 get_p_cbp (0: MpegEncContext s, 1: i32 motion_x, 2: i32 motion_y),
	i32 h263_get_motion_length (0: i32 f_code, 1: i32 val),
	void ff_h263_encode_motion_vector (0: MpegEncContext s, 1: i32 f_code, 2: i32 x, 3: i32 y),
	i32 ff_h263_find_frame_end (0: ParseContext pc, 1: binary buf, 2: i32 buf_size),
	binary ff_h263_decode_end (0: AVCodecContext avctx),
	binary ff_h263_decode_init (0: AVCodecContext avctx),
	i32 ff_h263_decode_frame (0: AVCodecContext avctx, 1: AVPacket avpkt, 2: i32 got_frame, 3: void data),
	binary ff_h263dsp_init (0: H263DSPContext ctx),
	i32 ff_h2645_extract_rbsp (0: H2645NAL nal, 1: H2645RBSP rbsp, 2: binary src, 3: i32 length, 4: i32 small_padding),
	i32 ff_h2645_packet_split (0: binary codec_id, 1: H2645Packet pkt, 2: binary buf, 3: i32 is_nalff, 4: i32 length, 5: i32 nal_length_size, 6: i32 small_padding, 7: i32 use_ref, 8: void logctx),
	void ff_h2645_packet_uninit (0: H2645Packet pkt),
	i32 get_nalsize (0: binary buf, 1: i32 buf_index, 2: i32 buf_size, 3: i32 nal_length_size, 4: void logctx),
	i32 ff_h264_decode_mb_cabac (0: H264SliceContext sl, 1: binary h),
	void ff_h264_init_cabac_states (0: H264SliceContext sl, 1: binary h),
	binary ff_h264_decode_init_vlc (),
	i32 ff_h264_decode_mb_cavlc (0: H264SliceContext sl, 1: binary h),
	i32 get_level_prefix (0: GetBitContext gb),
	i32 pred_non_zero_count (0: H264SliceContext sl, 1: binary h, 2: i32 n),
	void ff_h264_direct_dist_scale_factor (0: H264SliceContext sl, 1: binary h),
	void ff_h264_direct_ref_list_init (0: H264SliceContext sl, 1: binary h),
	void ff_h264_pred_direct_motion (0: H264SliceContext sl, 1: binary h, 2: i32 mb_type),
	binary ff_h264_get_level (0: i32 constraint_set3_flag, 1: i32 level_idc),
	binary ff_h264_guess_level (0: i64 bitrate, 1: i32 height, 2: i32 max_dec_frame_buffering, 3: i32 profile_idc, 4: i32 width),
	void ff_h264_filter_mb_fast (0: H264SliceContext sl, 1: binary h, 2: i32 mb_x, 3: i32 mb_y, 4: byte img_cb, 5: byte img_cr, 6: byte img_y, 7: binary linesize, 8: binary uvlinesize),
	void ff_h264_filter_mb (0: H264SliceContext sl, 1: binary h, 2: i32 mb_x, 3: i32 mb_y, 4: byte img_cb, 5: byte img_cr, 6: byte img_y, 7: binary linesize, 8: binary uvlinesize),
	i32 get_lowest_part_list_y (0: H264SliceContext sl, 1: i32 height, 2: i32 list, 3: i32 n, 4: i32 y_offset),
	void ff_h264_hl_decode_mb (0: H264SliceContext sl, 1: binary h),
	void get_lowest_part_y (0: H264SliceContext sl, 1: binary h, 2: i32 nrefs, 3: i32 height, 4: i32 list0, 5: i32 list1, 6: i32 n, 7: i32 y_offset),
	binary fetch_diagonal_mv (0: H264SliceContext sl, 1: binary h, 2: binary C, 3: i32 i, 4: i32 list, 5: i32 part_width),
	binary pred_16x8_motion (0: H264SliceContext sl, 1: binary h, 2: i32 mx, 3: i32 my, 4: i32 list, 5: i32 n, 6: i32 ref),
	binary pred_8x16_motion (0: H264SliceContext sl, 1: binary h, 2: i32 mx, 3: i32 my, 4: i32 list, 5: i32 n, 6: i32 ref),
	binary pred_motion (0: H264SliceContext sl, 1: binary h, 2: i32 mx, 3: i32 my, 4: i32 list, 5: i32 n, 6: i32 part_width, 7: i32 ref),
	binary pred_pskip_motion (0: H264SliceContext sl, 1: binary h),
	binary decode_mb_skip (0: H264SliceContext sl, 1: binary h),
	void fill_decode_caches (0: H264SliceContext sl, 1: binary h, 2: i32 mb_type),
	void fill_decode_neighbors (0: H264SliceContext sl, 1: binary h, 2: i32 mb_type),
	i32 ff_h264_check_intra4x4_pred_mode (0: byte pred_mode_cache, 1: i32 left_samples_available, 2: i32 top_samples_available, 3: void logctx),
	i32 ff_h264_check_intra_pred_mode (0: i32 is_chroma, 1: i32 left_samples_available, 2: i32 mode, 3: i32 top_samples_available, 4: void logctx),
	i32 ff_h264_decode_extradata (0: H264ParamSets ps, 1: binary data, 2: i32 is_avc, 3: i32 nal_length_size, 4: i32 err_recognition, 5: i32 size, 6: void logctx),
	i32 ff_h264_get_profile (0: binary sps),
	i32 ff_h264_init_poc (0: H264POCContext pc, 1: binary sps, 2: i32 pic_poc, 3: binary pic_field_poc, 4: i32 nal_ref_idc, 5: i32 picture_structure),
	i32 ff_h264_parse_ref_count (0: GetBitContext gb, 1: binary pps, 2: i32 plist_count, 3: binary ref_count, 4: i32 picture_structure, 5: i32 slice_type_nos, 6: void logctx),
	i32 ff_h264_pred_weight_table (0: GetBitContext gb, 1: H264PredWeightTable pwt, 2: binary sps, 3: binary ref_count, 4: i32 picture_structure, 5: i32 slice_type_nos, 6: void logctx),
	i32 parse_nal_units (0: AVCodecContext avctx, 1: AVCodecParserContext s, 2: binary buf, 3: i32 buf_size),
	i32 ff_h264_field_end (0: H264Context h, 1: H264SliceContext sl, 2: i32 in_setup),
	i32 ff_h264_ref_picture (0: H264Context h, 1: H264Picture dst, 2: H264Picture src),
	void ff_h264_set_erpic (0: ERPicture dst, 1: H264Picture src),
	void ff_h264_unref_picture (0: H264Context h, 1: H264Picture pic),
	i32 decode_hrd_parameters (0: AVCodecContext avctx, 1: GetBitContext gb, 2: SPS sps),
	i32 decode_vui_parameters (0: AVCodecContext avctx, 1: GetBitContext gb, 2: SPS sps),
	i32 ff_h264_decode_picture_parameter_set (0: AVCodecContext avctx, 1: GetBitContext gb, 2: H264ParamSets ps, 3: i32 bit_length),
	i32 ff_h264_decode_seq_parameter_set (0: AVCodecContext avctx, 1: GetBitContext gb, 2: H264ParamSets ps, 3: i32 ignore_truncation),
	void ff_h264_ps_uninit (0: H264ParamSets ps),
	i32 ff_h264_build_ref_list (0: H264Context h, 1: H264SliceContext sl),
	i32 ff_h264_decode_ref_pic_list_reordering (0: H264SliceContext sl, 1: void logctx),
	i32 ff_h264_decode_ref_pic_marking (0: GetBitContext gb, 1: H264SliceContext sl, 2: binary nal, 3: void logctx),
	i32 ff_h264_execute_ref_pic_marking (0: H264Context h),
	i32 unreference_pic (0: H264Context h, 1: H264Picture pic, 2: i32 refmask),
	void ff_h264_remove_all_refs (0: H264Context h),
	binary ff_h264_sei_stereo_mode (0: binary h),
	i32 ff_h264_sei_decode (0: GetBitContext gb, 1: H264SEIContext h, 2: binary ps, 3: void logctx),
	void ff_h264_sei_uninit (0: H264SEIContext h),
	i32 ff_h264_execute_decode_slices (0: H264Context h),
	i32 ff_h264_get_slice_type (0: binary sl),
	i32 ff_h264_queue_decode_slice (0: H264Context h, 1: binary nal),
	i32 ff_h264_update_thread_context (0: AVCodecContext dst, 1: binary src),
	binary ff_h264chroma_init (0: H264ChromaContext c, 1: i32 bit_depth),
	i32 avpriv_h264_has_num_reorder_frames (0: AVCodecContext avctx),
	i32 ff_h264_alloc_tables (0: H264Context h),
	i32 ff_h264_slice_context_init (0: H264Context h, 1: H264SliceContext sl),
	void ff_h264_draw_horiz_band (0: H264SliceContext sl, 1: binary h, 2: i32 height, 3: i32 y),
	void ff_h264_flush_change (0: H264Context h),
	void ff_h264_free_tables (0: H264Context h),
	binary get_chroma_qp (0: binary pps, 1: i32 qscale, 2: i32 t),
	binary get_dct8x8_allowed (0: H264SliceContext sl, 1: binary h),
	binary pred_intra_mode (0: H264SliceContext sl, 1: binary h, 2: i32 n),
	binary pack8to16 (0: binary a, 1: binary b),
	binary pack16to32 (0: binary a, 1: binary b),
	binary write_back_intra_pred_mode (0: H264SliceContext sl, 1: binary h),
	binary write_back_motion_list (0: H264SliceContext sl, 1: binary h, 2: i32 b8_xy, 3: i32 b_stride, 4: i32 b_xy, 5: i32 list, 6: i32 mb_type),
	binary write_back_motion (0: H264SliceContext sl, 1: binary h, 2: i32 mb_type),
	binary write_back_non_zero_count (0: H264SliceContext sl, 1: binary h),
	i32 find_start_code (0: binary buf, 1: i32 buf_index, 2: i32 buf_size, 3: i32 next_avc),
	binary ff_h264dsp_init (0: H264DSPContext c, 1: binary bit_depth, 2: binary chroma_format_idc),
	void FUNCC (),
	binary ff_h264_pred_init (0: H264PredContext h, 1: binary bit_depth, 2: i32 chroma_format_idc, 3: i32 codec_id),
	binary ff_h264qpel_init (0: H264QpelContext c, 1: i32 bit_depth),
	void FUNC (),
	binary ff_h265_get_level (0: i32 level_idc),
	binary ff_h265_guess_level (0: binary ptl, 1: i64 bitrate, 2: i32 height, 3: i32 max_dec_pic_buffering, 4: i32 slice_segments, 5: i32 tile_cols, 6: i32 tile_rows, 7: i32 width),
	binary ff_h265_get_profile (0: binary ptl),
	binary ff_hap_free_context (0: HapContext ctx),
	i32 ff_hap_parse_section_header (0: binary section_type, 1: GetByteContext gbc, 2: i32 section_size),
	i32 ff_hap_set_chunk_count (0: HapContext ctx, 1: i32 count, 2: i32 first_in_frame),
	i32 ff_hevc_cabac_init (0: HEVCContext s, 1: i32 ctb_addr_ts),
	i32 ff_hevc_cbf_cb_cr_decode (0: HEVCContext s, 1: i32 trafo_depth),
	i32 ff_hevc_cbf_luma_decode (0: HEVCContext s, 1: i32 trafo_depth),
	i32 ff_hevc_cu_chroma_qp_offset_flag (0: HEVCContext s),
	i32 ff_hevc_cu_chroma_qp_offset_idx (0: HEVCContext s),
	i32 ff_hevc_cu_qp_delta_abs (0: HEVCContext s),
	i32 ff_hevc_cu_qp_delta_sign_flag (0: HEVCContext s),
	i32 ff_hevc_cu_transquant_bypass_flag_decode (0: HEVCContext s),
	i32 ff_hevc_end_of_slice_flag_decode (0: HEVCContext s),
	i32 ff_hevc_inter_pred_idc_decode (0: HEVCContext s, 1: i32 nPbH, 2: i32 nPbW),
	i32 ff_hevc_intra_chroma_pred_mode_decode (0: HEVCContext s),
	i32 ff_hevc_log2_res_scale_abs (0: HEVCContext s, 1: i32 idx),
	i32 ff_hevc_merge_flag_decode (0: HEVCContext s),
	i32 ff_hevc_merge_idx_decode (0: HEVCContext s),
	i32 ff_hevc_mpm_idx_decode (0: HEVCContext s),
	i32 ff_hevc_mvp_lx_flag_decode (0: HEVCContext s),
	i32 ff_hevc_no_residual_syntax_flag_decode (0: HEVCContext s),
	i32 ff_hevc_part_mode_decode (0: HEVCContext s, 1: i32 log2_cb_size),
	i32 ff_hevc_pcm_flag_decode (0: HEVCContext s),
	i32 ff_hevc_pred_mode_decode (0: HEVCContext s),
	i32 ff_hevc_prev_intra_luma_pred_flag_decode (0: HEVCContext s),
	i32 ff_hevc_ref_idx_lx_decode (0: HEVCContext s, 1: i32 num_ref_idx_lx),
	i32 ff_hevc_rem_intra_luma_pred_mode_decode (0: HEVCContext s),
	i32 ff_hevc_res_scale_sign_flag (0: HEVCContext s, 1: i32 idx),
	i32 ff_hevc_sao_band_position_decode (0: HEVCContext s),
	i32 ff_hevc_sao_eo_class_decode (0: HEVCContext s),
	i32 ff_hevc_sao_merge_flag_decode (0: HEVCContext s),
	i32 ff_hevc_sao_offset_abs_decode (0: HEVCContext s),
	i32 ff_hevc_sao_offset_sign_decode (0: HEVCContext s),
	i32 ff_hevc_sao_type_idx_decode (0: HEVCContext s),
	i32 ff_hevc_skip_flag_decode (0: HEVCContext s, 1: i32 x0, 2: i32 x_cb, 3: i32 y0, 4: i32 y_cb),
	i32 ff_hevc_split_coding_unit_flag_decode (0: HEVCContext s, 1: i32 ct_depth, 2: i32 x0, 3: i32 y0),
	i32 ff_hevc_split_transform_flag_decode (0: HEVCContext s, 1: i32 log2_trafo_size),
	void ff_hevc_hls_mvd_coding (0: HEVCContext s, 1: i32 log2_cb_size, 2: i32 x0, 3: i32 y0),
	void ff_hevc_hls_residual_coding (0: binary scan_idx, 1: HEVCContext s, 2: i32 c_idx, 3: i32 log2_trafo_size, 4: i32 x0, 5: i32 y0),
	void ff_hevc_save_states (0: HEVCContext s, 1: i32 ctb_addr_ts),
	void ff_hevc_deblocking_boundary_strengths (0: HEVCContext s, 1: i32 log2_trafo_size, 2: i32 x0, 3: i32 y0),
	void ff_hevc_hls_filters (0: HEVCContext s, 1: i32 ctb_size, 2: i32 x_ctb, 3: i32 y_ctb),
	void ff_hevc_hls_filter (0: HEVCContext s, 1: i32 ctb_size, 2: i32 x, 3: i32 y),
	void ff_hevc_set_qPy (0: HEVCContext s, 1: i32 log2_cb_size, 2: i32 xBase, 3: i32 yBase),
	void ff_hevc_luma_mv_merge_mode (0: HEVCContext s, 1: MvField mv, 2: i32 log2_cb_size, 3: i32 merge_idx, 4: i32 nPbH, 5: i32 nPbW, 6: i32 part_idx, 7: i32 x0, 8: i32 y0),
	void ff_hevc_luma_mv_mvp_mode (0: HEVCContext s, 1: MvField mv, 2: i32 LX, 3: i32 log2_cb_size, 4: i32 merge_idx, 5: i32 mvp_lx_flag, 6: i32 nPbH, 7: i32 nPbW, 8: i32 part_idx, 9: i32 x0, 10: i32 y0),
	void ff_hevc_set_neighbour_available (0: HEVCContext s, 1: i32 nPbH, 2: i32 nPbW, 3: i32 x0, 4: i32 y0),
	i32 ff_hevc_decode_extradata (0: HEVCParamSets ps, 1: HEVCSEI sei, 2: binary data, 3: i32 is_nalff, 4: i32 nal_length_size, 5: i32 apply_defdispwin, 6: i32 err_recognition, 7: i32 size, 8: void logctx),
	i32 ff_hevc_compute_poc (0: binary sps, 1: i32 nal_unit_type, 2: i32 pocTid0, 3: i32 poc_lsb),
	i32 ff_hevc_decode_nal_pps (0: AVCodecContext avctx, 1: GetBitContext gb, 2: HEVCParamSets ps),
	i32 ff_hevc_decode_nal_sps (0: AVCodecContext avctx, 1: GetBitContext gb, 2: HEVCParamSets ps, 3: i32 apply_defdispwin),
	i32 ff_hevc_decode_nal_vps (0: AVCodecContext avctx, 1: GetBitContext gb, 2: HEVCParamSets ps),
	i32 ff_hevc_decode_short_term_rps (0: AVCodecContext avctx, 1: GetBitContext gb, 2: ShortTermRPS rps, 3: binary sps, 4: i32 is_slice_header),
	i32 ff_hevc_parse_sps (0: AVBufferRef vps_list, 1: AVCodecContext avctx, 2: GetBitContext gb, 3: HEVCSPS sps, 4: i32 apply_defdispwin, 5: binary sps_id),
	i32 setup_pps (0: AVCodecContext avctx, 1: GetBitContext gb, 2: HEVCPPS pps, 3: HEVCSPS sps),
	void ff_hevc_ps_uninit (0: HEVCParamSets ps),
	i32 ff_hevc_encode_nal_vps (0: HEVCVPS vps, 1: i32 buf_size, 2: byte buf, 3: binary id),
	RefPicList ff_hevc_get_ref_list (0: HEVCContext s, 1: HEVCFrame ref, 2: i32 x0, 3: i32 y0),
	i32 ff_hevc_frame_nb_refs (0: binary s),
	i32 ff_hevc_frame_rps (0: HEVCContext s),
	i32 ff_hevc_output_frame (0: AVFrame out, 1: HEVCContext s, 2: i32 flush),
	i32 ff_hevc_set_new_ref (0: AVFrame frame, 1: HEVCContext s, 2: i32 poc),
	i32 ff_hevc_slice_rpl (0: HEVCContext s),
	void ff_hevc_bump_frame (0: HEVCContext s),
	void ff_hevc_clear_refs (0: HEVCContext s),
	void ff_hevc_flush_dpb (0: HEVCContext s),
	void ff_hevc_unref_frame (0: HEVCContext s, 1: HEVCFrame frame, 2: i32 flags),
	i32 ff_hevc_decode_nal_sei (0: GetBitContext gb, 1: HEVCSEI s, 2: binary ps, 3: i32 type, 4: void logctx),
	void ff_hevc_reset_sei (0: HEVCSEI s),
	binary ff_hevc_nal_is_nonref (0: binary type),
	void ff_hevc_dsp_init (0: HEVCDSPContext hevcdsp, 1: i32 bit_depth),
	void ff_hevc_pred_init (0: HEVCPredContext hpc, 1: i32 bit_depth),
	binary PIXOP2 (),
	void put_blocks (0: AVFrame pic, 1: HQContext c, 2: i16 block0, 3: i16 block1, 4: i32 ilace, 5: i32 plane, 6: i32 x, 7: i32 y),
	binary ff_hq_init_vlcs (0: HQContext c),
	binary ff_hqdsp_init (0: HQDSPContext c),
	void idct_col (0: i16 blk),
	void idct_row (0: i16 blk),
	void hqx_get_ac (0: GetBitContext gb, 1: binary ac, 2: i32 lev, 3: i32 run),
	void put_blocks (0: HQXContext ctx, 1: binary quant, 2: i16 block0, 3: i16 block1, 4: i32 ilace, 5: i32 plane, 6: i32 x, 7: i32 y),
	binary ff_hqxdsp_init (0: HQXDSPContext c),
	void idct_col (0: binary quant, 1: i16 blk),
	void idct_row (0: i16 blk),
	binary ff_hqx_init_vlcs (0: HQXContext ctx),
	i32 ff_htmlmarkup_to_ass (0: binary dst, 1: binary in, 2: void log_ctx),
	i32 ff_huff_build_tree (0: AVCodecContext avctx, 1: HuffCmp cmp, 2: Node nodes, 3: VLC vlc, 4: i32 flags, 5: i32 nb_bits, 6: i32 nb_codes),
	i32 ff_huff_gen_len_table (0: binary stats, 1: i32 skip0, 2: i32 stats_size, 3: byte dst),
	binary ff_huffyuv_alloc_temp (0: HYuvContext s),
	binary ff_huffyuv_common_end (0: HYuvContext s),
	binary ff_huffyuv_common_init (0: AVCodecContext avctx),
	i32 ff_huffyuv_generate_bits_table (0: binary len_table, 1: i32 n, 2: i32 dst),
	binary ff_huffyuvdsp_init (0: binary pix_fmt, 1: HuffYUVDSPContext c),
	i32 encode_bgra_bitstream (0: HYuvContext s, 1: i32 count, 2: i32 planes),
	i32 sub_left_prediction (0: HYuvContext s, 1: binary src, 2: i32 left, 3: i32 w, 4: byte dst),
	void diff_bytes (0: HYuvContext s, 1: binary src0, 2: binary src1, 3: i32 w, 4: byte dst),
	void sub_left_prediction_bgr32 (0: HYuvContext s, 1: binary src, 2: i32 alpha, 3: i32 blue, 4: i32 green, 5: i32 red, 6: i32 w, 7: byte dst),
	void sub_left_prediction_rgb24 (0: HYuvContext s, 1: i32 blue, 2: i32 green, 3: i32 red, 4: i32 w, 5: byte dst, 6: byte src),
	binary ff_huffyuvencdsp_init (0: AVCodecContext avctx, 1: HuffYUVEncDSPContext c),
	binary ff_idctdsp_init (0: AVCodecContext avctx, 1: IDCTDSPContext c),
	binary ff_init_scantable_permutation (0: binary perm_type, 1: byte idct_permutation),
	binary ff_init_scantable (0: ScanTable st, 1: binary src_scantable, 2: byte permutation),
	void ff_add_pixels_clamped_c (0: binary block, 1: binary line_size, 2: binary pixels),
	void ff_put_pixels_clamped_c (0: binary block, 1: binary line_size, 2: binary pixels),
	binary ff_iir_filter_init_coeffs (0: binary filt_mode, 1: binary filt_type, 2: double cutoff_ratio, 3: double ripple, 4: double stopband, 5: i32 order, 6: void avc),
	binary ff_iir_filter_init_state (0: i32 order),
	binary ff_iir_filter_free_coeffsp (0: binary coeffsp),
	binary ff_iir_filter_free_statep (0: binary state),
	void ff_iir_filter_flt (0: binary s, 1: binary src, 2: binary c, 3: double dst, 4: i32 size, 5: binary dstep, 6: binary sstep),
	void ff_iir_filter_init (0: FFIIRFilterContext f),
	void ff_iir_filter (0: binary s, 1: binary src, 2: binary c, 3: i16 dst, 4: i32 size, 5: binary dstep, 6: binary sstep),
	double freq2bark (0: double freq),
	binary avcodec_find_best_pix_fmt2 (0: binary dst_pix_fmt1, 1: binary dst_pix_fmt2, 2: binary src_pix_fmt, 3: i32 loss_ptr, 4: i32 has_alpha),
	binary avcodec_find_best_pix_fmt_of_2 (0: binary dst_pix_fmt1, 1: binary dst_pix_fmt2, 2: binary src_pix_fmt, 3: i32 loss_ptr, 4: i32 has_alpha),
	binary avcodec_find_best_pix_fmt_of_list (0: binary src_pix_fmt, 1: binary pix_fmt_list, 2: i32 loss_ptr, 3: i32 has_alpha),
	binary is_yuv_planar (0: binary desc),
	i32 av_picture_crop (0: binary pix_fmt, 1: AVPicture dst, 2: binary src, 3: i32 left_band, 4: i32 top_band),
	i32 av_picture_pad (0: binary pix_fmt, 1: AVPicture dst, 2: binary src, 3: i32 color, 4: i32 height, 5: i32 padbottom, 6: i32 padleft, 7: i32 padright, 8: i32 padtop, 9: i32 width),
	i32 avcodec_get_pix_fmt_loss (0: binary dst_pix_fmt, 1: binary src_pix_fmt, 2: i32 has_alpha),
	void avcodec_get_chroma_sub_sample (0: binary pix_fmt, 1: i32 h_shift, 2: i32 v_shift),
	i32 ir2_get_code (0: GetBitContext gb),
	i32 replicate32 (0: i32 a),
	i64 replicate64 (0: i64 a),
	void fill_64 (0: binary pix, 1: i32 n, 2: i32 row_offset, 3: byte dst),
	i32 scale_tile_size (0: i32 def_size, 1: i32 size_factor),
	i32 skip_hdr_extension (0: GetBitContext gb),
	i32 ff_intel_h263_decode_picture_header (0: MpegEncContext s),
	binary ff_exp2fi (0: i32 x),
	binary ff_samples_to_time_base (0: AVCodecContext avctx, 1: i64 samples),
	binary ff_intrax8_common_init (0: AVCodecContext avctx, 1: IDCTDSPContext idsp, 2: IntraX8Context w, 3: binary block, 4: binary block_last_index, 5: i32 mb_height, 6: i32 mb_width),
	binary ff_intrax8_common_end (0: IntraX8Context w),
	i32 ff_intrax8_decode_picture (0: GetBitContext gb, 1: IntraX8Context w, 2: Picture pict, 3: i32 mb_x, 4: i32 mb_y, 5: i32 dquant, 6: i32 loopfilter, 7: i32 lowdelay, 8: i32 quant_offset),
	i32 x8_get_orient_vlc (0: IntraX8Context w),
	void x8_select_ac_table (0: IntraX8Context w, 1: i32 mode),
	binary ff_intrax8dsp_init (0: IntraX8DSPContext dsp),
	binary ff_h263_decode_init_vlc (),
	i32 ff_h263_decode_mba (0: MpegEncContext s),
	i32 ff_h263_decode_mb (0: MpegEncContext s),
	i32 ff_h263_decode_motion (0: MpegEncContext s, 1: i32 f_code, 2: i32 pred),
	i32 ff_h263_decode_picture_header (0: MpegEncContext s),
	i32 ff_h263_resync (0: MpegEncContext s),
	void ff_h263_show_pict_info (0: MpegEncContext s),
	void set_one_direct_mv (0: MpegEncContext s, 1: Picture p, 2: i32 i),
	binary ff_h263_encode_init (0: MpegEncContext s),
	binary ff_h263_aspect_to_info (0: AVRational aspect),
	void ff_clean_h263_qscales (0: MpegEncContext s),
	void ff_h263_encode_gob_header (0: MpegEncContext s, 1: i32 mb_line),
	void ff_h263_encode_mba (0: MpegEncContext s),
	void ff_h263_encode_mb (0: MpegEncContext s, 1: i32 motion_x, 2: i32 motion_y),
	void ff_h263_encode_motion (0: PutBitContext pb, 1: i32 f_code, 2: i32 val),
	void ff_h263_encode_picture_header (0: MpegEncContext s, 1: i32 picture_number),
	binary ff_ivi_decode_close (0: AVCodecContext avctx),
	binary ff_ivi_init_planes (0: AVCodecContext avctx, 1: IVIPlaneDesc planes, 2: binary cfg, 3: i32 is_indeo4),
	binary ff_ivi_init_tiles (0: IVIPlaneDesc planes, 1: i32 tile_height, 2: i32 tile_width),
	binary ff_ivi_init_static_vlc (),
	i32 ff_ivi_dec_huff_desc (0: AVCodecContext avctx, 1: GetBitContext gb, 2: IVIHuffTab huff_tab, 3: i32 desc_coded, 4: i32 which_tab),
	i32 ff_ivi_decode_frame (0: AVCodecContext avctx, 1: AVPacket avpkt, 2: i32 got_frame, 3: void data),
	i32 ivi_pic_config_cmp (0: IVIPicConfig str1, 1: IVIPicConfig str2),
	i32 ivi_scale_mv (0: i32 mv_scale, 1: i32 mv),
	void ff_ivi_col_haar4 (0: binary in, 1: binary flags, 2: i16 out, 3: binary pitch),
	void ff_ivi_col_haar8 (0: binary in, 1: binary flags, 2: i16 out, 3: binary pitch),
	void ff_ivi_col_slant4 (0: binary in, 1: binary flags, 2: i16 out, 3: binary pitch),
	void ff_ivi_col_slant8 (0: binary in, 1: binary flags, 2: i16 out, 3: binary pitch),
	void ff_ivi_dc_col_slant (0: binary in, 1: i16 out, 2: i32 blk_size, 3: binary pitch),
	void ff_ivi_dc_haar_2d (0: binary in, 1: i16 out, 2: i32 blk_size, 3: binary pitch),
	void ff_ivi_dc_row_slant (0: binary in, 1: i16 out, 2: i32 blk_size, 3: binary pitch),
	void ff_ivi_dc_slant_2d (0: binary in, 1: i16 out, 2: i32 blk_size, 3: binary pitch),
	void ff_ivi_inverse_haar_4x4 (0: binary in, 1: binary flags, 2: i16 out, 3: binary pitch),
	void ff_ivi_inverse_haar_8x8 (0: binary in, 1: binary flags, 2: i16 out, 3: binary pitch),
	void ff_ivi_inverse_slant_4x4 (0: binary in, 1: binary flags, 2: i16 out, 3: binary pitch),
	void ff_ivi_inverse_slant_8x8 (0: binary in, 1: binary flags, 2: i16 out, 3: binary pitch),
	void ff_ivi_put_dc_pixel_8x8 (0: binary in, 1: i16 out, 2: i32 blk_size, 3: binary pitch),
	void ff_ivi_put_pixels_8x8 (0: binary in, 1: binary flags, 2: i16 out, 3: binary pitch),
	void ff_ivi_recompose53 (0: binary plane, 1: binary dst_pitch, 2: byte dst),
	void ff_ivi_recompose_haar (0: binary plane, 1: binary dst_pitch, 2: byte dst),
	void ff_ivi_row_haar4 (0: binary in, 1: binary flags, 2: i16 out, 3: binary pitch),
	void ff_ivi_row_haar8 (0: binary in, 1: binary flags, 2: i16 out, 3: binary pitch),
	void ff_ivi_row_slant4 (0: binary in, 1: binary flags, 2: i16 out, 3: binary pitch),
	void ff_ivi_row_slant8 (0: binary in, 1: binary flags, 2: i16 out, 3: binary pitch),
	binary jss_skip_whitespace (0: binary p),
	binary jss_whitespace (0: byte c),
	void ff_fdct_ifast248 (0: i16 data),
	void ff_fdct_ifast (0: i16 data),
	void FUNC (),
	i32 av_jni_set_java_vm (0: void log_ctx, 1: void vm),
	void av_jni_get_java_vm (0: void log_ctx),
	i32 ff_jpeg2000_init_component (0: AVCodecContext avctx, 1: Jpeg2000CodingStyle codsty, 2: Jpeg2000Component comp, 3: Jpeg2000QuantStyle qntsty, 4: i32 cbps, 5: i32 dx, 6: i32 dy),
	binary ff_jpeg2000_init_tier1_luts (),
	void ff_jpeg2000_cleanup (0: Jpeg2000CodingStyle codsty, 1: Jpeg2000Component comp),
	void ff_jpeg2000_reinit (0: Jpeg2000CodingStyle codsty, 1: Jpeg2000Component comp),
	void ff_jpeg2000_set_significance (0: Jpeg2000T1Context t1, 1: i32 negative, 2: i32 x, 3: i32 y),
	i32 ff_jpeg2000_ceildivpow2 (0: i32 a, 1: i32 b),
	i32 ff_jpeg2000_ceildiv (0: i32 a, 1: i32 b),
	i32 ff_jpeg2000_getrefctxno (0: i32 flag),
	i32 ff_jpeg2000_getsgnctxno (0: i32 xorbit, 1: i32 flag),
	i32 ff_jpeg2000_getsigctxno (0: i32 bandno, 1: i32 flag),
	i32 needs_termination (0: i32 passno, 1: i32 style),
	void mct_decode (0: Jpeg2000DecoderContext s, 1: Jpeg2000Tile tile),
	void tile_codeblocks (0: Jpeg2000DecoderContext s, 1: Jpeg2000Tile tile),
	binary ff_jpeg2000dsp_init (0: Jpeg2000DSPContext c),
	i32 ff_dwt_decode (0: DWTContext s, 1: void t),
	i32 ff_dwt_encode (0: DWTContext s, 1: void t),
	i32 ff_jpeg2000_dwt_init (0: DWTContext s, 1: i32 decomp_levels, 2: i32 type),
	void extend53 (0: i32 p, 1: i32 i0, 2: i32 i1),
	void extend97_float (0: double p, 1: i32 i0, 2: i32 i1),
	void extend97_int (0: i32 p, 1: i32 i0, 2: i32 i1),
	void ff_dwt_destroy (0: DWTContext s),
	i32 iso_clip (0: i32 vmax, 1: i32 vmin, 2: i32 v),
	void ff_jpegls_init_state (0: JLSState state),
	void ff_jpegls_reset_coding_parameters (0: JLSState s, 1: i32 reset_all),
	i32 ff_jpegls_quantize (0: JLSState s, 1: i32 v),
	i32 ff_jpegls_update_state_regular (0: JLSState state, 1: i32 Q, 2: i32 err),
	void ff_jpegls_downscale_state (0: JLSState state, 1: i32 Q),
	i32 ff_jpegls_decode_lse (0: MJpegDecodeContext s),
	i32 ff_jpegls_decode_picture (0: MJpegDecodeContext s, 1: i32 ilv, 2: i32 near, 3: i32 point_transform),
	i32 ls_get_code_regular (0: GetBitContext gb, 1: JLSState state, 2: i32 Q),
	i32 ls_get_code_runterm (0: GetBitContext gb, 1: JLSState state, 2: i32 RItype, 3: i32 limit_add),
	void ls_decode_line (0: JLSState state, 1: MJpegDecodeContext s, 2: i32 bits, 3: i32 comp, 4: i32 last2, 5: i32 stride, 6: i32 w, 7: void dst, 8: void last),
	void ls_encode_line (0: JLSState state, 1: PutBitContext pb, 2: i32 bits, 3: i32 comp, 4: i32 last2, 5: i32 stride, 6: i32 w, 7: void cur, 8: void last),
	void ls_encode_regular (0: JLSState state, 1: PutBitContext pb, 2: i32 Q, 3: i32 err),
	void ls_encode_runterm (0: JLSState state, 1: PutBitContext pb, 2: i32 RItype, 3: i32 err, 4: i32 limit_add),
	void ls_encode_run (0: JLSState state, 1: PutBitContext pb, 2: i32 comp, 3: i32 run, 4: i32 trail),
	void ff_mjpeg_build_huffman_codes (0: binary bits_table, 1: binary val_table, 2: i16 huff_code, 3: byte huff_size),
	void ff_j_rev_dct1 (0: DCTBLOCK data),
	void ff_j_rev_dct2 (0: DCTBLOCK data),
	void ff_j_rev_dct4 (0: DCTBLOCK data),
	void ff_jref_idct_add (0: i16 block, 1: binary line_size, 2: byte dest),
	void ff_jref_idct_put (0: i16 block, 1: binary line_size, 2: byte dest),
	void decode2x2 (0: GetBitContext gb, 1: i32 linesize, 2: byte dst),
	void decode4x4 (0: GetBitContext gb, 1: i32 linesize, 2: byte dst),
	void decode8x8 (0: BlockDSPContext bdsp, 1: GetBitContext gb, 2: i32 linesize, 3: byte dst),
	binary ff_kbd_window_init_fixed (0: double alpha, 1: i32 window, 2: i32 n),
	binary ff_kbd_window_init (0: double window, 1: double alpha, 2: i32 n),
	void ff_lag_rac_init (0: GetBitContext gb, 1: i32 length, 2: lag_rac l),
	byte lag_get_rac (0: lag_rac l),
	void lag_rac_refill (0: lag_rac l),
	void cx_pktcpy (0: binary dst, 1: AOMContext ctx, 2: binary src),
	i32 ff_libopenh264_check_version (0: void logctx),
	void ff_libopenh264_trace_callback (0: binary msg, 1: i32 level, 2: void ctx),
	binary libopenjpeg_guess_pix_fmt (0: binary image),
	i32 libopenjpeg_ispacked (0: binary pix_fmt),
	i32 libopenjpeg_matches_pix_fmt (0: binary pix_fmt, 1: binary image),
	void libopenjpeg_copy_to_packed16 (0: AVFrame picture, 1: binary image),
	void libopenjpeg_copy_to_packed8 (0: AVFrame picture, 1: binary image),
	void libopenjpeg_copyto16 (0: AVFrame picture, 1: binary image),
	void libopenjpeg_copyto8 (0: AVFrame picture, 1: binary image),
	i32 ff_opus_error_to_averror (0: i32 err),
	i32 conv (0: byte buf, 1: double pcm, 2: i32 channels, 3: i32 samples),
	binary ff_vp9_init_static (0: AVCodec codec),
	void cx_pktcpy (0: binary dst, 1: VPxContext ctx, 2: binary src_alpha, 3: binary src),
	binary ff_libwebp_encode_init_common (0: AVCodecContext avctx),
	i32 ff_libwebp_error_to_averror (0: i32 err),
	i32 ff_libwebp_get_frame (0: AVCodecContext avctx, 1: AVFrame alt_frame_ptr, 2: LibWebPContextCommon s, 3: binary pic_ptr, 4: binary frame),
	void ljpeg_encode_yuv_mb (0: LJpegEncContext s, 1: PutBitContext pb, 2: binary frame, 3: i32 mb_x, 4: i32 mb_y, 5: i32 predictor),
	i32 loco_get_rice (0: RICEContext r),
	i32 loco_predict (0: i32 stride, 1: byte data),
	void loco_update_rice_param (0: RICEContext r, 1: i32 val),
	binary ff_llauddsp_init (0: LLAudDSPContext c),
	void ff_llviddsp_init (0: LLVidDSPContext c),
	binary ff_llvidencdsp_init (0: LLVidEncDSPContext c),
	binary ff_lpc_init (0: binary lpc_type, 1: LPCContext s, 2: i32 blocksize, 3: i32 max_order),
	binary ff_lpc_end (0: LPCContext s),
	double ff_lpc_calc_ref_coefs_f (0: LPCContext s, 1: binary samples, 2: double ref, 3: i32 len, 4: i32 order),
	i32 ff_lpc_calc_coefs (0: binary lpc_type, 1: LPCContext s, 2: binary samples, 3: i32 shift, 4: i32 blocksize, 5: i32 lpc_passes, 6: i32 max_order, 7: i32 max_shift, 8: i32 min_order, 9: i32 min_shift, 10: i32 omethod, 11: i32 precision, 12: i32 zero_shift),
	i32 ff_lpc_calc_ref_coefs (0: LPCContext s, 1: binary samples, 2: double ref, 3: i32 order),
	i32 AAC_RENAME (),
	void compute_ref_coefs (0: LPC_TYPE error, 1: LPC_TYPE ref, 2: binary autoc, 3: i32 max_order),
	void ff_acelp_lp_decode (0: binary lsp_2nd, 1: binary lsp_prev, 2: i16 lp_1st, 3: i16 lp_2nd, 4: i32 lp_order),
	void ff_acelp_lsf2lspd (0: binary lsf, 1: double lsp, 2: i32 lp_order),
	void ff_acelp_lsf2lsp (0: binary lsf, 1: i16 lsp, 2: i32 lp_order),
	void ff_acelp_lsp2lpc (0: binary lsp, 1: i16 lp, 2: i32 lp_half_order),
	void ff_acelp_lspd2lpc (0: binary lsp, 1: double lpc, 2: i32 lp_half_order),
	void ff_acelp_reorder_lsf (0: i16 lsfq, 1: i32 lp_order, 2: i32 lsfq_max, 3: i32 lsfq_min_distance, 4: i32 lsfq_min),
	void ff_amrwb_lsp2lpc (0: binary lsp, 1: double lp, 2: i32 lp_order),
	void ff_lsp2polyf (0: binary lsp, 1: double f, 2: i32 lp_half_order),
	void ff_set_min_dist_lsf (0: double min_spacing, 1: double lsf, 2: i32 size),
	void ff_sort_nearly_sorted_floats (0: double vals, 1: i32 len),
	i32 ff_lzf_uncompress (0: GetByteContext gb, 1: i64 size, 2: byte buf),
	binary ff_lzw_decode_close (0: LZWState p),
	binary ff_lzw_decode_open (0: LZWState p),
	i32 ff_lzw_decode_init (0: LZWState p, 1: binary buf, 2: i32 buf_size, 3: i32 csize, 4: i32 mode),
	i32 ff_lzw_decode_tail (0: LZWState p),
	i32 ff_lzw_decode (0: LZWState p, 1: i32 len, 2: byte buf),
	i32 ff_lzw_encode_flush (0: LZWEncodeState s, 1: binary lzw_flush_put_bits),
	i32 ff_lzw_encode (0: LZWEncodeState s, 1: binary inbuf, 2: i32 insize),
	i32 findCode (0: LZWEncodeState s, 1: i32 hash_prefix, 2: byte c),
	i32 hashNext (0: binary offset, 1: i32 head),
	i32 hashOffset (0: binary head),
	i32 hash (0: binary add, 1: i32 head),
	void addCode (0: LZWEncodeState s, 1: i32 hash_code, 2: i32 hash_prefix, 3: byte c),
	void ff_lzw_encode_init (0: binary mode, 1: LZWEncodeState s, 2: i32 maxbits, 3: i32 outsize, 4: byte outbuf, 5: binary lzw_put_bits),
	void writeCode (0: LZWEncodeState s, 1: i32 c),
	i16 mace_broken_clip_int16 (0: i32 n),
	binary MULH (0: i32 a, 1: i32 b),
	binary bitswap_32 (0: i32 x),
	binary UMULH (0: binary a, 1: binary b),
	binary ff_sqrf (0: double a),
	binary median4 (0: i32 a, 1: i32 b, 2: i32 c, 3: i32 d),
	binary mid_pred (0: i32 a, 1: i32 b, 2: i32 c),
	binary sign_extend (0: i32 val, 1: binary bits),
	binary ff_sqrt (0: binary a),
	binary zero_extend (0: binary bits, 1: binary val),
	byte ff_u8_to_s8 (0: byte a),
	binary ff_mdct15_init (0: MDCT15Context ps, 1: double scale, 2: i32 N, 3: i32 inverse),
	binary ff_mdct15_uninit (0: MDCT15Context ps),
	i32 init_pfa_reindex_tabs (0: MDCT15Context s),
	void fft5 (0: FFTComplex in, 1: FFTComplex out, 2: binary exptab),
	void ff_mdct_calcw_c (0: FFTContext s, 1: FFTDouble out, 2: binary input),
	binary ff_mdct_init (0: FFTContext s, 1: double scale, 2: i32 inverse, 3: i32 nbits),
	binary ff_mdct_end (0: FFTContext s),
	void ff_imdct_calc_c (0: FFTContext s, 1: FFTSample output, 2: binary input),
	void ff_imdct_half_c (0: FFTContext s, 1: FFTSample output, 2: binary input),
	void ff_mdct_calc_c (0: FFTContext s, 1: FFTSample out, 2: binary input),
	i32 decode_mb (0: MDECContext a),
	i32 mdec_decode_block_intra (0: MDECContext a, 1: i16 block, 2: i32 n),
	void idct_put (0: AVFrame frame, 1: MDECContext a, 2: i32 mb_x, 3: i32 mb_y),
	binary WRAPPER8_16_SQ (),
	binary ff_me_cmp_init (0: AVCodecContext avctx, 1: MECmpContext c),
	i32 pix_abs16_c (0: MpegEncContext v, 1: i32 h, 2: binary stride, 3: byte pix1, 4: byte pix2),
	i32 pix_abs8_c (0: MpegEncContext v, 1: i32 h, 2: binary stride, 3: byte pix1, 4: byte pix2),
	i32 pix_median_abs16_c (0: MpegEncContext v, 1: i32 h, 2: binary stride, 3: byte pix1, 4: byte pix2),
	i32 pix_median_abs8_c (0: MpegEncContext v, 1: i32 h, 2: binary stride, 3: byte pix1, 4: byte pix2),
	void ff_set_cmp (0: MECmpContext c, 1: i32 type, 2: me_cmp_func cmp),
	AVMediaCodecContext av_mediacodec_alloc_context (),
	i32 av_mediacodec_default_init (0: AVCodecContext avctx, 1: AVMediaCodecContext ctx, 2: void surface),
	i32 av_mediacodec_release_buffer (0: AVMediaCodecBuffer buffer, 1: i32 render),
	i32 av_mediacodec_render_buffer_at_time (0: AVMediaCodecBuffer buffer, 1: i64 time),
	void av_mediacodec_default_free (0: AVCodecContext avctx),
	i32 ff_mediacodec_surface_unref (0: void log_ctx, 1: void surface),
	void ff_mediacodec_surface_ref (0: void log_ctx, 1: void surface),
	void ff_mediacodec_sw_buffer_copy_yuv420_packed_semi_planar_64x32Tile2m8ka (0: AVCodecContext avctx, 1: AVFrame frame, 2: FFAMediaCodecBufferInfo info, 3: MediaCodecDecContext s, 4: i64 size, 5: byte data),
	void ff_mediacodec_sw_buffer_copy_yuv420_packed_semi_planar (0: AVCodecContext avctx, 1: AVFrame frame, 2: FFAMediaCodecBufferInfo info, 3: MediaCodecDecContext s, 4: i64 size, 5: byte data),
	void ff_mediacodec_sw_buffer_copy_yuv420_planar (0: AVCodecContext avctx, 1: AVFrame frame, 2: FFAMediaCodecBufferInfo info, 3: MediaCodecDecContext s, 4: i64 size, 5: byte data),
	void ff_mediacodec_sw_buffer_copy_yuv420_semi_planar (0: AVCodecContext avctx, 1: AVFrame frame, 2: FFAMediaCodecBufferInfo info, 3: MediaCodecDecContext s, 4: i64 size, 5: byte data),
	binary DECLARE_FF_AMEDIACODEC_CREATE_FUNC (),
	FFAMediaCodec codec_create (0: binary arg, 1: i32 method),
	FFAMediaFormat ff_AMediaCodec_getOutputFormat (0: FFAMediaCodec codec),
	FFAMediaFormat ff_AMediaFormat_new (),
	byte ff_AMediaCodecList_getCodecNameByType (0: binary mime, 1: i32 encoder, 2: i32 profile, 3: void log_ctx),
	byte ff_AMediaCodec_getName (0: FFAMediaCodec codec),
	byte ff_AMediaFormat_toString (0: FFAMediaFormat format),
	i32 ff_AMediaCodecProfile_getProfileFromAVCodecContext (0: AVCodecContext avctx),
	i32 ff_AMediaCodec_cleanOutputBuffers (0: FFAMediaCodec codec),
	i32 ff_AMediaCodec_configure (0: FFAMediaCodec codec, 1: binary format, 2: i32 flags, 3: void crypto, 4: void surface),
	i32 ff_AMediaCodec_flush (0: FFAMediaCodec codec),
	i32 ff_AMediaCodec_getBufferFlagCodecConfig (0: FFAMediaCodec codec),
	i32 ff_AMediaCodec_getBufferFlagEndOfStream (0: FFAMediaCodec codec),
	i32 ff_AMediaCodec_getBufferFlagKeyFrame (0: FFAMediaCodec codec),
	i32 ff_AMediaCodec_getConfigureFlagEncode (0: FFAMediaCodec codec),
	i32 ff_AMediaCodec_infoOutputBuffersChanged (0: FFAMediaCodec codec, 1: binary idx),
	i32 ff_AMediaCodec_infoOutputFormatChanged (0: FFAMediaCodec codec, 1: binary idx),
	i32 ff_AMediaCodec_infoTryAgainLater (0: FFAMediaCodec codec, 1: binary idx),
	i32 ff_AMediaCodec_queueInputBuffer (0: FFAMediaCodec codec, 1: binary offset, 2: i64 idx, 3: i64 size, 4: i32 flags, 5: i64 time),
	i32 ff_AMediaCodec_releaseOutputBufferAtTime (0: FFAMediaCodec codec, 1: i64 timestampNs, 2: i64 idx),
	i32 ff_AMediaCodec_releaseOutputBuffer (0: FFAMediaCodec codec, 1: i32 render, 2: i64 idx),
	i32 ff_AMediaCodec_start (0: FFAMediaCodec codec),
	i32 ff_AMediaCodec_stop (0: FFAMediaCodec codec),
	i32 ff_AMediaFormat_delete (0: FFAMediaFormat format),
	i32 ff_AMediaFormat_getBuffer (0: FFAMediaFormat format, 1: binary name, 2: i64 size, 3: void data),
	i32 ff_AMediaFormat_getFloat (0: FFAMediaFormat format, 1: binary name, 2: double out),
	i32 ff_AMediaFormat_getInt32 (0: FFAMediaFormat format, 1: binary name, 2: i32 out),
	i32 ff_AMediaFormat_getInt64 (0: FFAMediaFormat format, 1: binary name, 2: i64 out),
	i32 ff_AMediaFormat_getString (0: FFAMediaFormat format, 1: binary out, 2: binary name),
	i32 ff_Build_SDK_INT (0: AVCodecContext avctx),
	binary ff_AMediaCodec_dequeueInputBuffer (0: FFAMediaCodec codec, 1: i64 timeoutUs),
	binary ff_AMediaCodec_dequeueOutputBuffer (0: FFAMediaCodec codec, 1: FFAMediaCodecBufferInfo info, 2: i64 timeoutUs),
	byte ff_AMediaCodec_getInputBuffer (0: FFAMediaCodec codec, 1: i64 out_size, 2: i64 idx),
	byte ff_AMediaCodec_getOutputBuffer (0: FFAMediaCodec codec, 1: i64 out_size, 2: i64 idx),
	void ff_AMediaFormat_setBuffer (0: FFAMediaFormat format, 1: binary name, 2: i64 size, 3: void data),
	void ff_AMediaFormat_setFloat (0: FFAMediaFormat format, 1: binary name, 2: double value),
	void ff_AMediaFormat_setInt32 (0: FFAMediaFormat format, 1: binary name, 2: i32 value),
	void ff_AMediaFormat_setInt64 (0: FFAMediaFormat format, 1: binary name, 2: i64 value),
	void ff_AMediaFormat_setString (0: FFAMediaFormat format, 1: binary name, 2: binary value),
	i32 ff_mediacodec_dec_close (0: AVCodecContext avctx, 1: MediaCodecDecContext s),
	i32 ff_mediacodec_dec_flush (0: AVCodecContext avctx, 1: MediaCodecDecContext s),
	i32 ff_mediacodec_dec_init (0: AVCodecContext avctx, 1: FFAMediaFormat format, 2: MediaCodecDecContext s, 3: binary mime),
	i32 ff_mediacodec_dec_is_flushing (0: AVCodecContext avctx, 1: MediaCodecDecContext s),
	i32 ff_mediacodec_dec_receive (0: AVCodecContext avctx, 1: AVFrame frame, 2: MediaCodecDecContext s, 3: binary wait),
	i32 ff_mediacodec_dec_send (0: AVCodecContext avctx, 1: AVPacket pkt, 2: MediaCodecDecContext s, 3: binary wait),
	void ff_aac_coder_init_mips (0: AACEncContext c),
	void ff_aacdec_init_mips (0: AACContext c),
	double VMUL2S_mips (0: binary scale, 1: binary v, 2: double dst, 3: binary idx, 4: binary sign),
	double VMUL2_mips (0: binary scale, 1: binary v, 2: double dst, 3: binary idx),
	double VMUL4S_mips (0: binary scale, 1: binary v, 2: double dst, 3: binary idx, 4: binary sign),
	double VMUL4_mips (0: binary scale, 1: binary v, 2: double dst, 3: binary idx),
	void ff_psdsp_init_mips (0: PSDSPContext s),
	void calc_thr_3gpp_mips (0: AacPsyChannel pch, 1: binary wi, 2: binary coefs, 3: binary cutoff, 4: binary num_bands, 5: binary band_sizes),
	void psy_hp_filter_mips (0: binary firbuf, 1: binary psy_fir_coeffs, 2: double hpfsmpl),
	void ff_aacsbr_func_ptr_init_mips (0: AACSBRContext c),
	void sbr_qmf_analysis_mips (0: AVFloatDSPContext fdsp, 1: FFTContext mdct, 2: SBRDSPContext sbrdsp, 3: binary in, 4: double x, 5: binary z, 6: i32 buf_idx),
	void sbr_qmf_synthesis_mips (0: AVFloatDSPContext fdsp, 1: FFTContext mdct, 2: SBRDSPContext sbrdsp, 3: binary div, 4: double out, 5: double v0, 6: i32 v_off),
	void ff_ac3dsp_init_mips (0: AC3DSPContext c, 1: i32 bit_exact),
	void ff_acelp_filter_init_mips (0: ACELPFContext c),
	void ff_acelp_vectors_init_mips (0: ACELPVContext c),
	void ff_hb_fir_filter_mips (0: binary in, 1: binary fir_coef, 2: double out, 3: binary mem),
	void ff_blockdsp_init_mips (0: BlockDSPContext c),
	void ff_clear_block_mmi (0: i16 block),
	void ff_clear_blocks_mmi (0: i16 block),
	void ff_fill_block16_mmi (0: i32 h, 1: binary line_size, 2: byte block, 3: byte value),
	void ff_fill_block8_mmi (0: i32 h, 1: binary line_size, 2: byte block, 3: byte value),
	void ff_clear_block_msa (0: i16 block),
	void ff_clear_blocks_msa (0: i16 block),
	void ff_fill_block16_msa (0: i32 height, 1: binary stride, 2: byte src, 3: byte val),
	void ff_fill_block8_msa (0: i32 height, 1: binary stride, 2: byte src, 3: byte val),
	binary get_cabac_inline (0: CABACContext c, 1: byte state),
	void ff_celp_filter_init_mips (0: CELPFContext c),
	void ff_celp_math_init_mips (0: CELPMContext c),
	void compute_antialias_mips_fixed (0: GranuleDef g, 1: MPADecodeContext s),
	void compute_antialias_mips_float (0: GranuleDef g, 1: MPADecodeContext s),
	binary ff_fft_init_mips (0: FFTContext s),
	binary ff_fmt_convert_init_mips (0: FmtConvertContext c),
	binary ff_h263dsp_init_mips (0: H263DSPContext c),
	void ff_h263_h_loop_filter_msa (0: i32 q_scale, 1: i32 stride, 2: byte src),
	void ff_h263_v_loop_filter_msa (0: i32 q_scale, 1: i32 stride, 2: byte src),
	binary ff_h264chroma_init_mips (0: H264ChromaContext c, 1: i32 bit_depth),
	void ff_avg_h264_chroma_mc4_mmi (0: i32 h, 1: i32 x, 2: i32 y, 3: binary stride, 4: byte dst, 5: byte src),
	void ff_avg_h264_chroma_mc8_mmi (0: i32 h, 1: i32 x, 2: i32 y, 3: binary stride, 4: byte dst, 5: byte src),
	void ff_put_h264_chroma_mc4_mmi (0: i32 h, 1: i32 x, 2: i32 y, 3: binary stride, 4: byte dst, 5: byte src),
	void ff_put_h264_chroma_mc8_mmi (0: i32 h, 1: i32 x, 2: i32 y, 3: binary stride, 4: byte dst, 5: byte src),
	void ff_avg_h264_chroma_mc2_msa (0: i32 height, 1: i32 x, 2: i32 y, 3: binary stride, 4: byte dst, 5: byte src),
	void ff_avg_h264_chroma_mc4_msa (0: i32 height, 1: i32 x, 2: i32 y, 3: binary stride, 4: byte dst, 5: byte src),
	void ff_avg_h264_chroma_mc8_msa (0: i32 height, 1: i32 x, 2: i32 y, 3: binary stride, 4: byte dst, 5: byte src),
	void ff_put_h264_chroma_mc2_msa (0: i32 height, 1: i32 x, 2: i32 y, 3: binary stride, 4: byte dst, 5: byte src),
	void ff_put_h264_chroma_mc4_msa (0: i32 height, 1: i32 x, 2: i32 y, 3: binary stride, 4: byte dst, 5: byte src),
	void ff_put_h264_chroma_mc8_msa (0: i32 height, 1: i32 x, 2: i32 y, 3: binary stride, 4: byte dst, 5: byte src),
	binary ff_h264dsp_init_mips (0: H264DSPContext c, 1: binary bit_depth, 2: binary chroma_format_idc),
	void ff_deblock_h_chroma_8_mmi (0: byte tc0, 1: i32 alpha, 2: i32 beta, 3: i32 stride, 4: byte pix),
	void ff_deblock_h_chroma_intra_8_mmi (0: i32 alpha, 1: i32 beta, 2: i32 stride, 3: byte pix),
	void ff_deblock_h_luma_8_mmi (0: byte tc0, 1: i32 alpha, 2: i32 beta, 3: i32 stride, 4: byte pix),
	void ff_deblock_h_luma_intra_8_mmi (0: i32 alpha, 1: i32 beta, 2: i32 stride, 3: byte pix),
	void ff_deblock_v8_luma_8_mmi (0: byte tc0, 1: i32 alpha, 2: i32 beta, 3: i32 stride, 4: byte pix),
	void ff_deblock_v_chroma_8_mmi (0: byte tc0, 1: i32 alpha, 2: i32 beta, 3: binary stride, 4: byte pix),
	void ff_deblock_v_chroma_intra_8_mmi (0: i32 alpha, 1: i32 beta, 2: i32 stride, 3: byte pix),
	void ff_deblock_v_luma_8_mmi (0: byte tc0, 1: i32 alpha, 2: i32 beta, 3: i32 stride, 4: byte pix),
	void ff_deblock_v_luma_intra_8_mmi (0: i32 alpha, 1: i32 beta, 2: i32 stride, 3: byte pix),
	void ff_h264_add_pixels4_8_mmi (0: i16 src, 1: i32 stride, 2: byte dst),
	void ff_h264_biweight_pixels16_8_mmi (0: i32 height, 1: i32 log2_denom, 2: i32 offset, 3: i32 weightd, 4: i32 weights, 5: binary stride, 6: byte dst, 7: byte src),
	void ff_h264_biweight_pixels4_8_mmi (0: i32 height, 1: i32 log2_denom, 2: i32 offset, 3: i32 weightd, 4: i32 weights, 5: binary stride, 6: byte dst, 7: byte src),
	void ff_h264_biweight_pixels8_8_mmi (0: i32 height, 1: i32 log2_denom, 2: i32 offset, 3: i32 weightd, 4: i32 weights, 5: binary stride, 6: byte dst, 7: byte src),
	void ff_h264_chroma422_dc_dequant_idct_8_mmi (0: i16 block, 1: i32 qmul),
	void ff_h264_chroma_dc_dequant_idct_8_mmi (0: i16 block, 1: i32 qmul),
	void ff_h264_idct8_add4_8_mmi (0: binary block_offset, 1: binary nnzc, 2: i16 block, 3: i32 stride, 4: byte dst),
	void ff_h264_idct8_add_8_mmi (0: i16 block, 1: i32 stride, 2: byte dst),
	void ff_h264_idct8_dc_add_8_mmi (0: i16 block, 1: i32 stride, 2: byte dst),
	void ff_h264_idct_add16_8_mmi (0: binary block_offset, 1: binary nnzc, 2: i16 block, 3: i32 stride, 4: byte dst),
	void ff_h264_idct_add16intra_8_mmi (0: binary block_offset, 1: binary nnzc, 2: i16 block, 3: i32 stride, 4: byte dst),
	void ff_h264_idct_add8_422_8_mmi (0: binary block_offset, 1: binary nnzc, 2: i16 block, 3: i32 stride, 4: byte dest),
	void ff_h264_idct_add8_8_mmi (0: binary block_offset, 1: binary nnzc, 2: i16 block, 3: i32 stride, 4: byte dest),
	void ff_h264_idct_add_8_mmi (0: i16 block, 1: i32 stride, 2: byte dst),
	void ff_h264_idct_dc_add_8_mmi (0: i16 block, 1: i32 stride, 2: byte dst),
	void ff_h264_luma_dc_dequant_idct_8_mmi (0: i16 input, 1: i16 output, 2: i32 qmul),
	void ff_h264_weight_pixels16_8_mmi (0: i32 height, 1: i32 log2_denom, 2: i32 offset, 3: i32 weight, 4: binary stride, 5: byte block),
	void ff_h264_weight_pixels4_8_mmi (0: i32 height, 1: i32 log2_denom, 2: i32 offset, 3: i32 weight, 4: binary stride, 5: byte block),
	void ff_h264_weight_pixels8_8_mmi (0: i32 height, 1: i32 log2_denom, 2: i32 offset, 3: i32 weight, 4: binary stride, 5: byte block),
	void ff_biweight_h264_pixels16_8_msa (0: i32 height, 1: i32 log2_denom, 2: i32 offset_in, 3: i32 weight_dst, 4: i32 weight_src, 5: binary stride, 6: byte dst, 7: byte src),
	void ff_biweight_h264_pixels4_8_msa (0: i32 height, 1: i32 log2_denom, 2: i32 offset, 3: i32 weight_dst, 4: i32 weight_src, 5: binary stride, 6: byte dst, 7: byte src),
	void ff_biweight_h264_pixels8_8_msa (0: i32 height, 1: i32 log2_denom, 2: i32 offset, 3: i32 weight_dst, 4: i32 weight_src, 5: binary stride, 6: byte dst, 7: byte src),
	void ff_h264_h_loop_filter_chroma422_mbaff_msa (0: i32 alpha, 1: i32 beta, 2: i32 ystride, 3: byte tc0, 4: byte src),
	void ff_h264_h_loop_filter_chroma422_msa (0: i32 alpha, 1: i32 beta, 2: i32 ystride, 3: byte tc0, 4: byte src),
	void ff_h264_h_loop_filter_luma_mbaff_intra_msa (0: i32 alpha, 1: i32 beta, 2: i32 ystride, 3: byte src),
	void ff_h264_h_loop_filter_luma_mbaff_msa (0: i32 alpha, 1: i32 beta, 2: i32 ystride, 3: byte tc0, 4: byte src),
	void ff_h264_h_lpf_chroma_inter_msa (0: byte tc, 1: i32 alpha, 2: i32 beta, 3: i32 img_width, 4: byte data),
	void ff_h264_h_lpf_chroma_intra_msa (0: i32 alpha, 1: i32 beta, 2: i32 img_width, 3: byte data),
	void ff_h264_h_lpf_luma_inter_msa (0: byte tc, 1: i32 alpha, 2: i32 beta, 3: i32 img_width, 4: byte data),
	void ff_h264_h_lpf_luma_intra_msa (0: i32 alpha, 1: i32 beta, 2: i32 img_width, 3: byte data),
	void ff_h264_v_lpf_chroma_inter_msa (0: byte tc, 1: i32 alpha, 2: i32 beta, 3: i32 img_width, 4: byte data),
	void ff_h264_v_lpf_chroma_intra_msa (0: i32 alpha, 1: i32 beta, 2: i32 img_width, 3: byte data),
	void ff_h264_v_lpf_luma_inter_msa (0: byte tc, 1: i32 alpha, 2: i32 beta, 3: i32 img_width, 4: byte data),
	void ff_h264_v_lpf_luma_intra_msa (0: i32 alpha, 1: i32 beta, 2: i32 img_width, 3: byte data),
	void ff_weight_h264_pixels16_8_msa (0: i32 height, 1: i32 log2_denom, 2: i32 offset_in, 3: i32 weight_src, 4: binary stride, 5: byte src),
	void ff_weight_h264_pixels4_8_msa (0: i32 height, 1: i32 log2_denom, 2: i32 offset, 3: i32 weight_src, 4: binary stride, 5: byte src),
	void ff_weight_h264_pixels8_8_msa (0: i32 height, 1: i32 log2_denom, 2: i32 offset, 3: i32 weight_src, 4: binary stride, 5: byte src),
	void ff_h264_deq_idct_luma_dc_msa (0: i16 dst, 1: i16 src, 2: i32 de_qval),
	void ff_h264_idct4x4_addblk_dc_msa (0: i16 src, 1: i32 dst_stride, 2: byte dst),
	void ff_h264_idct8_add4_msa (0: binary blk_offset, 1: binary nzc, 2: i16 block, 3: i32 dst_stride, 4: byte dst),
	void ff_h264_idct8_addblk_msa (0: i16 src, 1: i32 dst_stride, 2: byte dst),
	void ff_h264_idct8_dc_addblk_msa (0: i16 src, 1: i32 dst_stride, 2: byte dst),
	void ff_h264_idct_add16_intra_msa (0: binary blk_offset, 1: binary nzc, 2: i16 block, 3: i32 dst_stride, 4: byte dst),
	void ff_h264_idct_add16_msa (0: binary blk_offset, 1: binary nzc, 2: i16 block, 3: i32 dst_stride, 4: byte dst),
	void ff_h264_idct_add8_422_msa (0: binary blk_offset, 1: binary nzc, 2: i16 block, 3: i32 dst_stride, 4: byte dst),
	void ff_h264_idct_add8_msa (0: binary blk_offset, 1: binary nzc, 2: i16 block, 3: i32 dst_stride, 4: byte dst),
	void ff_h264_idct_add_msa (0: i16 src, 1: i32 dst_stride, 2: byte dst),
	binary ff_h264_pred_init_mips (0: H264PredContext h, 1: binary chroma_format_idc, 2: i32 bit_depth, 3: i32 codec_id),
	void ff_pred16x16_dc_8_mmi (0: binary stride, 1: byte src),
	void ff_pred16x16_horizontal_8_mmi (0: binary stride, 1: byte src),
	void ff_pred16x16_plane_h264_8_mmi (0: binary stride, 1: byte src),
	void ff_pred16x16_plane_rv40_8_mmi (0: binary stride, 1: byte src),
	void ff_pred16x16_plane_svq3_8_mmi (0: binary stride, 1: byte src),
	void ff_pred16x16_vertical_8_mmi (0: binary stride, 1: byte src),
	void ff_pred4x4_dc_8_mmi (0: binary topright, 1: binary stride, 2: byte src),
	void ff_pred8x16_horizontal_8_mmi (0: binary stride, 1: byte src),
	void ff_pred8x16_vertical_8_mmi (0: binary stride, 1: byte src),
	void ff_pred8x8_dc_8_mmi (0: binary stride, 1: byte src),
	void ff_pred8x8_horizontal_8_mmi (0: binary stride, 1: byte src),
	void ff_pred8x8_top_dc_8_mmi (0: binary stride, 1: byte src),
	void ff_pred8x8_vertical_8_mmi (0: binary stride, 1: byte src),
	void ff_pred8x8l_dc_8_mmi (0: i32 has_topleft, 1: i32 has_topright, 2: binary stride, 3: byte src),
	void ff_pred8x8l_top_dc_8_mmi (0: i32 has_topleft, 1: i32 has_topright, 2: binary stride, 3: byte src),
	void ff_pred8x8l_vertical_8_mmi (0: i32 has_topleft, 1: i32 has_topright, 2: binary stride, 3: byte src),
	void pred16x16_plane_compat_mmi (0: binary rv40, 1: binary svq3, 2: i32 stride, 3: byte src),
	void ff_h264_intra_pred_dc_128_16x16_msa (0: binary stride, 1: byte src),
	void ff_h264_intra_pred_dc_128_8x8_msa (0: binary stride, 1: byte src),
	void ff_h264_intra_pred_dc_16x16_msa (0: binary stride, 1: byte src),
	void ff_h264_intra_pred_dc_left_16x16_msa (0: binary stride, 1: byte src),
	void ff_h264_intra_pred_dc_top_16x16_msa (0: binary stride, 1: byte src),
	void ff_h264_intra_pred_horiz_16x16_msa (0: binary stride, 1: byte src),
	void ff_h264_intra_pred_horiz_8x8_msa (0: binary stride, 1: byte src),
	void ff_h264_intra_pred_vert_16x16_msa (0: binary stride, 1: byte src),
	void ff_h264_intra_pred_vert_8x8_msa (0: binary stride, 1: byte src),
	void ff_h264_intra_predict_dc_4blk_8x8_msa (0: binary stride, 1: byte src),
	void ff_h264_intra_predict_hor_dc_8x8_msa (0: binary stride, 1: byte src),
	void ff_h264_intra_predict_mad_cow_dc_0l0_8x8_msa (0: binary stride, 1: byte src),
	void ff_h264_intra_predict_mad_cow_dc_0lt_8x8_msa (0: binary stride, 1: byte src),
	void ff_h264_intra_predict_mad_cow_dc_l00_8x8_msa (0: binary stride, 1: byte src),
	void ff_h264_intra_predict_mad_cow_dc_l0t_8x8_msa (0: binary stride, 1: byte src),
	void ff_h264_intra_predict_plane_16x16_msa (0: binary stride, 1: byte src),
	void ff_h264_intra_predict_plane_8x8_msa (0: binary stride, 1: byte src),
	void ff_h264_intra_predict_vert_dc_8x8_msa (0: binary stride, 1: byte src),
	void ff_vp8_pred16x16_127_dc_8_msa (0: binary stride, 1: byte src),
	void ff_vp8_pred16x16_129_dc_8_msa (0: binary stride, 1: byte src),
	void ff_vp8_pred8x8_127_dc_8_msa (0: binary stride, 1: byte src),
	void ff_vp8_pred8x8_129_dc_8_msa (0: binary stride, 1: byte src),
	binary ff_h264qpel_init_mips (0: H264QpelContext c, 1: i32 bit_depth),
	void copy_block16_mmi (0: binary src, 1: i32 dstStride, 2: i32 h, 3: i32 srcStride, 4: byte dst),
	void copy_block4_mmi (0: binary src, 1: i32 dstStride, 2: i32 h, 3: i32 srcStride, 4: byte dst),
	void copy_block8_mmi (0: binary src, 1: i32 dstStride, 2: i32 h, 3: i32 srcStride, 4: byte dst),
	void ff_avg_h264_qpel16_mc00_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel16_mc01_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel16_mc02_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel16_mc03_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel16_mc10_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel16_mc11_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel16_mc12_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel16_mc13_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel16_mc20_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel16_mc21_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel16_mc22_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel16_mc23_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel16_mc30_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel16_mc31_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel16_mc32_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel16_mc33_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc00_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc01_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc02_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc03_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc10_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc11_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc12_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc13_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc20_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc21_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc22_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc23_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc30_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc31_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc32_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc33_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc00_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc01_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc02_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc03_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc10_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc11_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc12_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc13_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc20_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc21_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc22_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc23_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc30_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc31_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc32_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc33_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc00_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc01_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc02_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc03_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc10_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc11_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc12_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc13_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc20_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc21_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc22_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc23_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc30_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc31_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc32_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc33_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel4_mc00_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel4_mc01_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel4_mc02_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel4_mc03_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel4_mc10_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel4_mc11_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel4_mc12_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel4_mc13_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel4_mc20_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel4_mc21_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel4_mc22_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel4_mc23_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel4_mc30_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel4_mc31_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel4_mc32_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel4_mc33_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc00_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc01_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc02_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc03_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc10_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc11_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc12_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc13_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc20_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc21_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc22_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc23_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc30_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc31_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc32_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc33_mmi (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel16_mc00_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel16_mc01_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel16_mc02_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel16_mc03_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel16_mc10_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel16_mc11_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel16_mc12_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel16_mc13_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel16_mc20_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel16_mc21_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel16_mc22_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel16_mc23_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel16_mc30_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel16_mc31_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel16_mc32_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel16_mc33_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc00_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc01_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc02_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc03_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc10_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc11_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc12_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc13_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc20_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc21_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc22_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc23_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc30_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc31_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc32_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel4_mc33_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc00_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc01_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc02_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc03_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc10_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc11_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc12_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc13_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc20_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc21_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc22_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc23_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc30_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc31_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc32_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_h264_qpel8_mc33_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc00_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc01_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc02_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc03_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc10_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc11_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc12_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc13_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc20_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc21_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc22_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc23_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc30_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc31_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc32_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel16_mc33_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel4_mc01_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel4_mc02_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel4_mc03_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel4_mc10_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel4_mc11_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel4_mc12_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel4_mc13_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel4_mc20_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel4_mc21_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel4_mc22_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel4_mc23_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel4_mc30_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel4_mc31_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel4_mc32_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel4_mc33_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc00_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc01_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc02_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc03_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc10_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc11_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc12_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc13_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc20_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc21_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc22_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc23_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc30_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc31_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc32_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_h264_qpel8_mc33_msa (0: binary src, 1: binary stride, 2: byte dst),
	void ff_hevc_addblk_16x16_msa (0: i16 coeffs, 1: binary stride, 2: byte dst),
	void ff_hevc_addblk_32x32_msa (0: i16 coeffs, 1: binary stride, 2: byte dst),
	void ff_hevc_addblk_4x4_msa (0: i16 coeffs, 1: binary stride, 2: byte dst),
	void ff_hevc_addblk_8x8_msa (0: i16 coeffs, 1: binary stride, 2: byte dst),
	void ff_hevc_idct_16x16_msa (0: i16 coeffs, 1: i32 col_limit),
	void ff_hevc_idct_32x32_msa (0: i16 coeffs, 1: i32 col_limit),
	void ff_hevc_idct_4x4_msa (0: i16 coeffs, 1: i32 col_limit),
	void ff_hevc_idct_8x8_msa (0: i16 coeffs, 1: i32 col_limit),
	void ff_hevc_idct_dc_16x16_msa (0: i16 coeffs),
	void ff_hevc_idct_dc_32x32_msa (0: i16 coeffs),
	void ff_hevc_idct_dc_4x4_msa (0: i16 coeffs),
	void ff_hevc_idct_dc_8x8_msa (0: i16 coeffs),
	void ff_hevc_idct_luma_4x4_msa (0: i16 coeffs),
	void ff_hevc_loop_filter_chroma_h_8_msa (0: i32 tc, 1: binary src_stride, 2: byte no_p, 3: byte no_q, 4: byte src),
	void ff_hevc_loop_filter_chroma_v_8_msa (0: i32 tc, 1: binary src_stride, 2: byte no_p, 3: byte no_q, 4: byte src),
	void ff_hevc_loop_filter_luma_h_8_msa (0: i32 tc, 1: i32 beta, 2: binary src_stride, 3: byte no_p, 4: byte no_q, 5: byte src),
	void ff_hevc_loop_filter_luma_v_8_msa (0: i32 tc, 1: i32 beta, 2: binary src_stride, 3: byte no_p, 4: byte no_q, 5: byte src),
	void ff_hevc_sao_band_filter_0_8_msa (0: i16 sao_offset_val, 1: i32 height, 2: i32 sao_left_class, 3: i32 width, 4: binary stride_dst, 5: binary stride_src, 6: byte dst, 7: byte src),
	void ff_hevc_sao_edge_filter_8_msa (0: i16 sao_offset_val, 1: i32 eo, 2: i32 height, 3: i32 width, 4: binary stride_dst, 5: byte dst, 6: byte src),
	void ff_hevc_dsp_init_mips (0: HEVCDSPContext c, 1: binary bit_depth),
	void ff_hevc_pred_init_mips (0: HEVCPredContext c, 1: binary bit_depth),
	void ff_hevc_intra_pred_dc_msa (0: binary src_left, 1: binary src_top, 2: i32 c_idx, 3: i32 log2, 4: binary stride, 5: byte dst),
	void ff_hevc_intra_pred_planar_0_msa (0: binary src_left, 1: binary src_top, 2: binary stride, 3: byte dst),
	void ff_hevc_intra_pred_planar_1_msa (0: binary src_left, 1: binary src_top, 2: binary stride, 3: byte dst),
	void ff_hevc_intra_pred_planar_2_msa (0: binary src_left, 1: binary src_top, 2: binary stride, 3: byte dst),
	void ff_hevc_intra_pred_planar_3_msa (0: binary src_left, 1: binary src_top, 2: binary stride, 3: byte dst),
	void ff_intra_pred_8_16x16_msa (0: HEVCContext s, 1: i32 c_idx, 2: i32 x0, 3: i32 y0),
	void ff_intra_pred_8_32x32_msa (0: HEVCContext s, 1: i32 c_idx, 2: i32 x0, 3: i32 y0),
	void ff_pred_intra_pred_angular_0_msa (0: binary src_left, 1: binary src_top, 2: i32 c_idx, 3: i32 mode, 4: binary stride, 5: byte dst),
	void ff_pred_intra_pred_angular_1_msa (0: binary src_left, 1: binary src_top, 2: i32 c_idx, 3: i32 mode, 4: binary stride, 5: byte dst),
	void ff_pred_intra_pred_angular_2_msa (0: binary src_left, 1: binary src_top, 2: i32 c_idx, 3: i32 mode, 4: binary stride, 5: byte dst),
	void ff_pred_intra_pred_angular_3_msa (0: binary src_left, 1: binary src_top, 2: i32 c_idx, 3: i32 mode, 4: binary stride, 5: byte dst),
	void ff_hpeldsp_init_mips (0: HpelDSPContext c, 1: i32 flags),
	void ff_avg_pixels16_8_mmi (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_avg_pixels16_l2_8_mmi (0: binary src1, 1: binary src2, 2: i32 dst_stride, 3: i32 h, 4: i32 src_stride1, 5: i32 src_stride2, 6: byte dst),
	void ff_avg_pixels16_x2_8_mmi (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_avg_pixels16_xy2_8_mmi (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_avg_pixels16_y2_8_mmi (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_avg_pixels4_8_mmi (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_avg_pixels4_l2_8_mmi (0: binary src1, 1: binary src2, 2: i32 dst_stride, 3: i32 h, 4: i32 src_stride1, 5: i32 src_stride2, 6: byte dst),
	void ff_avg_pixels4_x2_8_mmi (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_avg_pixels4_xy2_8_mmi (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_avg_pixels4_y2_8_mmi (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_avg_pixels8_8_mmi (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_avg_pixels8_l2_8_mmi (0: binary src1, 1: binary src2, 2: i32 dst_stride, 3: i32 h, 4: i32 src_stride1, 5: i32 src_stride2, 6: byte dst),
	void ff_avg_pixels8_x2_8_mmi (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_avg_pixels8_xy2_8_mmi (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_avg_pixels8_y2_8_mmi (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_no_rnd_pixels16_x2_8_mmi (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_no_rnd_pixels16_xy2_8_mmi (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_no_rnd_pixels16_y2_8_mmi (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_no_rnd_pixels8_l2_8_mmi (0: binary src1, 1: binary src2, 2: i32 dst_stride, 3: i32 h, 4: i32 src_stride1, 5: i32 src_stride2, 6: byte dst),
	void ff_put_no_rnd_pixels8_x2_8_mmi (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_no_rnd_pixels8_xy2_8_mmi (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_no_rnd_pixels8_y2_8_mmi (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_pixels16_8_mmi (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_pixels16_l2_8_mmi (0: binary src1, 1: binary src2, 2: i32 dst_stride, 3: i32 h, 4: i32 src_stride1, 5: i32 src_stride2, 6: byte dst),
	void ff_put_pixels16_x2_8_mmi (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_pixels16_xy2_8_mmi (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_pixels16_y2_8_mmi (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_pixels4_8_mmi (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_pixels4_l2_8_mmi (0: binary src1, 1: binary src2, 2: i32 dst_stride, 3: i32 h, 4: i32 src_stride1, 5: i32 src_stride2, 6: byte dst),
	void ff_put_pixels4_x2_8_mmi (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_pixels4_xy2_8_mmi (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_pixels4_y2_8_mmi (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_pixels8_8_mmi (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_pixels8_l2_8_mmi (0: binary src1, 1: binary src2, 2: i32 dst_stride, 3: i32 h, 4: i32 src_stride1, 5: i32 src_stride2, 6: byte dst),
	void ff_put_pixels8_x2_8_mmi (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_pixels8_xy2_8_mmi (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_pixels8_y2_8_mmi (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_avg_pixels16_msa (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_avg_pixels16_x2_msa (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_avg_pixels16_xy2_msa (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_avg_pixels16_y2_msa (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_avg_pixels4_msa (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_avg_pixels4_x2_msa (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_avg_pixels4_xy2_msa (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_avg_pixels4_y2_msa (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_avg_pixels8_msa (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_avg_pixels8_x2_msa (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_avg_pixels8_xy2_msa (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_avg_pixels8_y2_msa (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_no_rnd_pixels16_x2_msa (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_no_rnd_pixels16_xy2_msa (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_no_rnd_pixels16_y2_msa (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_no_rnd_pixels8_x2_msa (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_no_rnd_pixels8_xy2_msa (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_no_rnd_pixels8_y2_msa (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_pixels16_msa (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_pixels16_x2_msa (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_pixels16_xy2_msa (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_pixels16_y2_msa (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_pixels4_x2_msa (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_pixels4_xy2_msa (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_pixels4_y2_msa (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_pixels8_msa (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_pixels8_x2_msa (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_pixels8_xy2_msa (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_pixels8_y2_msa (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	binary ff_idctdsp_init_mips (0: AVCodecContext avctx, 1: IDCTDSPContext c, 2: binary high_bit_depth),
	void ff_add_pixels_clamped_mmi (0: binary block, 1: binary line_size, 2: binary pixels),
	void ff_put_pixels_clamped_mmi (0: binary block, 1: binary line_size, 2: binary pixels),
	void ff_put_signed_pixels_clamped_mmi (0: binary block, 1: binary line_size, 2: binary pixels),
	void ff_add_pixels_clamped_msa (0: binary block, 1: binary line_size, 2: binary pixels),
	void ff_put_pixels_clamped_msa (0: binary block, 1: binary line_size, 2: binary pixels),
	void ff_put_signed_pixels_clamped_msa (0: binary block, 1: binary line_size, 2: binary pixels),
	void ff_iir_filter_init_mips (0: FFIIRFilterContext f),
	binary ff_lsp2polyf_mips (0: binary lsp, 1: double f, 2: i32 lp_half_order),
	binary MULH (0: i32 a, 1: i32 b),
	binary mid_pred (0: i32 a, 1: i32 b, 2: i32 c),
	binary ff_me_cmp_init_mips (0: AVCodecContext avctx, 1: MECmpContext c),
	i32 ff_hadamard8_diff8x8_msa (0: MpegEncContext s, 1: i32 h, 2: binary stride, 3: byte dst, 4: byte src),
	i32 ff_hadamard8_intra8x8_msa (0: MpegEncContext s, 1: i32 h, 2: binary stride, 3: byte dst, 4: byte src),
	i32 ff_pix_abs16_msa (0: MpegEncContext v, 1: i32 height, 2: binary stride, 3: byte ref, 4: byte src),
	i32 ff_pix_abs16_x2_msa (0: MpegEncContext v, 1: i32 h, 2: binary stride, 3: byte pix1, 4: byte pix2),
	i32 ff_pix_abs16_xy2_msa (0: MpegEncContext v, 1: i32 h, 2: binary stride, 3: byte pix1, 4: byte pix2),
	i32 ff_pix_abs16_y2_msa (0: MpegEncContext v, 1: i32 h, 2: binary stride, 3: byte pix1, 4: byte pix2),
	i32 ff_pix_abs8_msa (0: MpegEncContext v, 1: i32 height, 2: binary stride, 3: byte ref, 4: byte src),
	i32 ff_pix_abs8_x2_msa (0: MpegEncContext v, 1: i32 h, 2: binary stride, 3: byte pix1, 4: byte pix2),
	i32 ff_pix_abs8_xy2_msa (0: MpegEncContext v, 1: i32 h, 2: binary stride, 3: byte pix1, 4: byte pix2),
	i32 ff_pix_abs8_y2_msa (0: MpegEncContext v, 1: i32 h, 2: binary stride, 3: byte pix1, 4: byte pix2),
	i32 ff_sse16_msa (0: MpegEncContext v, 1: i32 height, 2: binary stride, 3: byte ref, 4: byte src),
	i32 ff_sse4_msa (0: MpegEncContext v, 1: i32 height, 2: binary stride, 3: byte ref, 4: byte src),
	i32 ff_sse8_msa (0: MpegEncContext v, 1: i32 height, 2: binary stride, 3: byte ref, 4: byte src),
	void ff_mpadsp_init_mipsdsp (0: MPADSPContext s),
	void ff_mpadsp_init_mipsfpu (0: MPADSPContext s),
	binary ff_mpv_common_init_mips (0: MpegEncContext s),
	void ff_dct_unquantize_h263_inter_mmi (0: MpegEncContext s, 1: i16 block, 2: i32 n, 3: i32 qscale),
	void ff_dct_unquantize_h263_intra_mmi (0: MpegEncContext s, 1: i16 block, 2: i32 n, 3: i32 qscale),
	void ff_dct_unquantize_mpeg1_inter_mmi (0: MpegEncContext s, 1: i16 block, 2: i32 n, 3: i32 qscale),
	void ff_dct_unquantize_mpeg1_intra_mmi (0: MpegEncContext s, 1: i16 block, 2: i32 n, 3: i32 qscale),
	void ff_dct_unquantize_mpeg2_intra_mmi (0: MpegEncContext s, 1: i16 block, 2: i32 n, 3: i32 qscale),
	void ff_denoise_dct_mmi (0: MpegEncContext s, 1: i16 block),
	void ff_dct_unquantize_h263_inter_msa (0: MpegEncContext s, 1: i16 block, 2: i32 index, 3: i32 qscale),
	void ff_dct_unquantize_h263_intra_msa (0: MpegEncContext s, 1: i16 block, 2: i32 index, 3: i32 qscale),
	void ff_dct_unquantize_mpeg2_inter_msa (0: MpegEncContext s, 1: i16 block, 2: i32 index, 3: i32 qscale),
	binary ff_mpegvideoencdsp_init_mips (0: AVCodecContext avctx, 1: MpegvideoEncDSPContext c),
	i32 ff_pix_sum_msa (0: i32 line_size, 1: byte pix),
	void ff_pixblockdsp_init_mips (0: AVCodecContext avctx, 1: PixblockDSPContext c, 2: binary high_bit_depth),
	void ff_diff_pixels_mmi (0: binary src1, 1: binary src2, 2: binary block, 3: binary stride),
	void ff_get_pixels_8_mmi (0: binary pixels, 1: binary block, 2: binary stride),
	void ff_diff_pixels_msa (0: binary src1, 1: binary src2, 2: binary block, 3: binary stride),
	void ff_get_pixels_16_msa (0: binary src, 1: binary dest, 2: binary stride),
	void ff_get_pixels_8_msa (0: binary src, 1: binary dest, 2: binary stride),
	void ff_qpeldsp_init_mips (0: QpelDSPContext c),
	void ff_avg_width16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_avg_width8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_copy_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_copy_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_horiz_mc_qpel_16width_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_horiz_mc_qpel_8width_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_horiz_mc_qpel_aver_src0_16width_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_horiz_mc_qpel_aver_src0_8width_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_horiz_mc_qpel_aver_src1_16width_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_horiz_mc_qpel_aver_src1_8width_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_horiz_mc_qpel_avg_dst_16width_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_horiz_mc_qpel_avg_dst_8width_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_horiz_mc_qpel_avg_dst_aver_src0_16width_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_horiz_mc_qpel_avg_dst_aver_src0_8width_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_horiz_mc_qpel_avg_dst_aver_src1_16width_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_horiz_mc_qpel_avg_dst_aver_src1_8width_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_horiz_mc_qpel_no_rnd_16width_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_horiz_mc_qpel_no_rnd_8width_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_horiz_mc_qpel_no_rnd_aver_src0_16width_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_horiz_mc_qpel_no_rnd_aver_src0_8width_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_horiz_mc_qpel_no_rnd_aver_src1_16width_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_horiz_mc_qpel_no_rnd_aver_src1_8width_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_aver_h_src0_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_aver_h_src0_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_aver_h_src1_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_aver_h_src1_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_aver_hv_src00_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_aver_hv_src00_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_aver_hv_src01_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_aver_hv_src01_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_aver_hv_src10_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_aver_hv_src10_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_aver_hv_src11_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_aver_hv_src11_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_aver_v_src0_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_aver_v_src0_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_aver_v_src1_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_aver_v_src1_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_avg_dst_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_avg_dst_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_avg_dst_aver_h_src0_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_avg_dst_aver_h_src0_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_avg_dst_aver_h_src1_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_avg_dst_aver_h_src1_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_avg_dst_aver_hv_src00_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_avg_dst_aver_hv_src00_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_avg_dst_aver_hv_src01_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_avg_dst_aver_hv_src01_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_avg_dst_aver_hv_src10_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_avg_dst_aver_hv_src10_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_avg_dst_aver_hv_src11_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_avg_dst_aver_hv_src11_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_avg_dst_aver_v_src0_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_avg_dst_aver_v_src0_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_avg_dst_aver_v_src1_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_avg_dst_aver_v_src1_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_no_rnd_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_no_rnd_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_no_rnd_aver_h_src0_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_no_rnd_aver_h_src0_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_no_rnd_aver_h_src1_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_no_rnd_aver_h_src1_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_no_rnd_aver_hv_src00_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_no_rnd_aver_hv_src00_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_no_rnd_aver_hv_src01_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_no_rnd_aver_hv_src01_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_no_rnd_aver_hv_src10_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_no_rnd_aver_hv_src10_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_no_rnd_aver_hv_src11_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_no_rnd_aver_hv_src11_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_no_rnd_aver_v_src0_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_no_rnd_aver_v_src0_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_no_rnd_aver_v_src1_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_hv_mc_qpel_no_rnd_aver_v_src1_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_vert_mc_qpel_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_vert_mc_qpel_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_vert_mc_qpel_aver_src0_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_vert_mc_qpel_aver_src0_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_vert_mc_qpel_aver_src1_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_vert_mc_qpel_aver_src1_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_vert_mc_qpel_avg_dst_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_vert_mc_qpel_avg_dst_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_vert_mc_qpel_avg_dst_aver_src0_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_vert_mc_qpel_avg_dst_aver_src0_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_vert_mc_qpel_avg_dst_aver_src1_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_vert_mc_qpel_avg_dst_aver_src1_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_vert_mc_qpel_no_rnd_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_vert_mc_qpel_no_rnd_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_vert_mc_qpel_no_rnd_aver_src0_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_vert_mc_qpel_no_rnd_aver_src0_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_vert_mc_qpel_no_rnd_aver_src1_16x16_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_vert_mc_qpel_no_rnd_aver_src1_8x8_msa (0: binary src, 1: binary stride, 2: byte dest),
	void ff_sbrdsp_init_mips (0: SBRDSPContext s),
	void ff_simple_idct_8_mmi (0: i16 block),
	void ff_simple_idct_add_8_mmi (0: i16 block, 1: binary line_size, 2: byte dest),
	void ff_simple_idct_put_8_mmi (0: i16 block, 1: binary line_size, 2: byte dest),
	void ff_simple_idct_add_msa (0: i16 block, 1: binary dst_stride, 2: byte dst),
	void ff_simple_idct_msa (0: i16 block),
	void ff_simple_idct_put_msa (0: i16 block, 1: binary dst_stride, 2: byte dst),
	binary ff_vc1dsp_init_mips (0: VC1DSPContext dsp),
	binary VC1_MSPEL_MC (),
	void ff_avg_no_rnd_vc1_chroma_mc4_mmi (0: i32 h, 1: i32 stride, 2: i32 x, 3: i32 y, 4: byte dst, 5: byte src),
	void ff_avg_no_rnd_vc1_chroma_mc8_mmi (0: i32 h, 1: i32 stride, 2: i32 x, 3: i32 y, 4: byte dst, 5: byte src),
	void ff_avg_vc1_mspel_mc00_16_mmi (0: binary src, 1: i32 rnd, 2: binary stride, 3: byte dst),
	void ff_avg_vc1_mspel_mc00_mmi (0: binary src, 1: i32 rnd, 2: binary stride, 3: byte dst),
	void ff_put_no_rnd_vc1_chroma_mc4_mmi (0: i32 h, 1: i32 stride, 2: i32 x, 3: i32 y, 4: byte dst, 5: byte src),
	void ff_put_vc1_mspel_mc00_16_mmi (0: binary src, 1: i32 rnd, 2: binary stride, 3: byte dst),
	void ff_put_vc1_mspel_mc00_mmi (0: binary src, 1: i32 rnd, 2: binary stride, 3: byte dst),
	void ff_vc1_h_loop_filter16_mmi (0: i32 pq, 1: i32 stride, 2: byte src),
	void ff_vc1_h_loop_filter4_mmi (0: i32 pq, 1: i32 stride, 2: byte src),
	void ff_vc1_h_loop_filter8_mmi (0: i32 pq, 1: i32 stride, 2: byte src),
	void ff_vc1_h_overlap_mmi (0: i32 stride, 1: byte src),
	void ff_vc1_h_s_overlap_mmi (0: i16 left, 1: i16 right, 2: i32 flags, 3: i32 left_stride, 4: i32 right_stride),
	void ff_vc1_inv_trans_4x4_dc_mmi (0: i16 block, 1: binary linesize, 2: byte dest),
	void ff_vc1_inv_trans_4x4_mmi (0: i16 block, 1: binary linesize, 2: byte dest),
	void ff_vc1_inv_trans_4x8_dc_mmi (0: i16 block, 1: binary linesize, 2: byte dest),
	void ff_vc1_inv_trans_4x8_mmi (0: i16 block, 1: binary linesize, 2: byte dest),
	void ff_vc1_inv_trans_8x4_dc_mmi (0: i16 block, 1: binary linesize, 2: byte dest),
	void ff_vc1_inv_trans_8x4_mmi (0: i16 block, 1: binary linesize, 2: byte dest),
	void ff_vc1_inv_trans_8x8_dc_mmi (0: i16 block, 1: binary linesize, 2: byte dest),
	void ff_vc1_inv_trans_8x8_mmi (0: binary block),
	void ff_vc1_v_loop_filter16_mmi (0: i32 pq, 1: i32 stride, 2: byte src),
	void ff_vc1_v_loop_filter4_mmi (0: i32 pq, 1: i32 stride, 2: byte src),
	void ff_vc1_v_loop_filter8_mmi (0: i32 pq, 1: i32 stride, 2: byte src),
	void ff_vc1_v_overlap_mmi (0: i32 stride, 1: byte src),
	void ff_vc1_v_s_overlap_mmi (0: i16 bottom, 1: i16 top),
	void vc1_loop_filter (0: i32 len, 1: i32 pq, 2: i32 step, 3: i32 stride, 4: byte src),
	binary ff_videodsp_init_mips (0: VideoDSPContext ctx, 1: i32 bpc),
	void ff_put_no_rnd_pixels_l2_mmi (0: binary src1, 1: binary src2, 2: i32 h, 3: binary stride, 4: byte dst),
	void ff_vp3_idct_add_mmi (0: i16 block, 1: binary line_size, 2: byte dest),
	void ff_vp3_idct_dc_add_mmi (0: i16 block, 1: binary line_size, 2: byte dest),
	void ff_vp3_idct_put_mmi (0: i16 block, 1: binary line_size, 2: byte dest),
	void ff_put_no_rnd_pixels_l2_msa (0: binary src1, 1: binary src2, 2: i32 h, 3: binary stride, 4: byte dst),
	void ff_vp3_h_loop_filter_msa (0: i32 bounding_values, 1: binary stride, 2: byte first_pixel),
	void ff_vp3_idct_add_msa (0: i16 block, 1: binary line_size, 2: byte dest),
	void ff_vp3_idct_dc_add_msa (0: i16 block, 1: binary line_size, 2: byte dest),
	void ff_vp3_idct_put_msa (0: i16 block, 1: binary line_size, 2: byte dest),
	void ff_vp3_v_loop_filter_msa (0: i32 bounding_values, 1: binary stride, 2: byte first_pixel),
	binary ff_vp3dsp_init_mips (0: VP3DSPContext c, 1: i32 flags),
	void ff_vp8_idct_add_msa (0: binary input, 1: binary stride, 2: byte dst),
	void ff_vp8_idct_dc_add4uv_msa (0: binary stride, 1: byte dst),
	void ff_vp8_idct_dc_add4y_msa (0: binary stride, 1: byte dst),
	void ff_vp8_idct_dc_add_msa (0: binary in_dc, 1: binary stride, 2: byte dst),
	void ff_vp8_luma_dc_wht_msa (0: binary input),
	void ff_vp8_h_loop_filter16_inner_msa (0: i32 e, 1: i32 h, 2: i32 i, 3: binary pitch, 4: byte src),
	void ff_vp8_h_loop_filter16_msa (0: i32 b_limit_in, 1: i32 limit_in, 2: i32 thresh_in, 3: binary pitch, 4: byte src),
	void ff_vp8_h_loop_filter8uv_inner_msa (0: i32 b_limit_in, 1: i32 limit_in, 2: i32 thresh_in, 3: binary pitch, 4: byte src_u, 5: byte src_v),
	void ff_vp8_h_loop_filter8uv_msa (0: i32 b_limit_in, 1: i32 limit_in, 2: i32 thresh_in, 3: binary pitch, 4: byte src_u, 5: byte src_v),
	void ff_vp8_h_loop_filter_simple_msa (0: i32 b_limit_ptr, 1: binary pitch, 2: byte src),
	void ff_vp8_v_loop_filter16_inner_msa (0: i32 e, 1: i32 h, 2: i32 i, 3: binary pitch, 4: byte src),
	void ff_vp8_v_loop_filter16_msa (0: i32 b_limit_in, 1: i32 limit_in, 2: i32 thresh_in, 3: binary pitch, 4: byte src),
	void ff_vp8_v_loop_filter8uv_inner_msa (0: i32 b_limit_in, 1: i32 limit_in, 2: i32 thresh_in, 3: binary pitch, 4: byte src_u, 5: byte src_v),
	void ff_vp8_v_loop_filter8uv_msa (0: i32 b_limit_in, 1: i32 limit_in, 2: i32 thresh_in, 3: binary pitch, 4: byte src_u, 5: byte src_v),
	void ff_vp8_v_loop_filter_simple_msa (0: i32 b_limit_ptr, 1: binary pitch, 2: byte src),
	void ff_put_vp8_bilinear16_h_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_bilinear16_hv_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_bilinear16_v_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_bilinear4_h_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_bilinear4_hv_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_bilinear4_v_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_bilinear8_h_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_bilinear8_hv_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_bilinear8_v_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel16_h4_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel16_h4v4_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel16_h4v6_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel16_h6_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel16_h6v4_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel16_h6v6_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel16_v4_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel16_v6_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel4_h4_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel4_h4v4_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel4_h4v6_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel4_h6_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel4_h6v4_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel4_h6v6_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel4_v4_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel4_v6_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel8_h4_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel8_h4v4_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel8_h4v6_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel8_h6_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel8_h6v4_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel8_h6v6_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel8_v4_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel8_v6_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_pixels16_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	void ff_put_vp8_pixels8_msa (0: i32 height, 1: i32 mx, 2: i32 my, 3: binary dst_stride, 4: binary src_stride, 5: byte dst, 6: byte src),
	binary ff_vp8dsp_init_mips (0: VP8DSPContext dsp),
	void ff_put_vp8_bilinear16_h_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dstride, 4: binary sstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_bilinear16_hv_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dstride, 4: binary sstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_bilinear16_v_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dstride, 4: binary sstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_bilinear4_h_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dstride, 4: binary sstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_bilinear4_hv_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dstride, 4: binary sstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_bilinear4_v_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dstride, 4: binary sstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_bilinear8_h_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dstride, 4: binary sstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_bilinear8_hv_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dstride, 4: binary sstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_bilinear8_v_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dstride, 4: binary sstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel16_h4_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dststride, 4: binary srcstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel16_h4v4_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dststride, 4: binary srcstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel16_h4v6_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dststride, 4: binary srcstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel16_h6_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dststride, 4: binary srcstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel16_h6v4_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dststride, 4: binary srcstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel16_h6v6_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dststride, 4: binary srcstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel16_v4_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dststride, 4: binary srcstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel16_v6_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dststride, 4: binary srcstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel4_h4_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dststride, 4: binary srcstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel4_h4v4_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dststride, 4: binary srcstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel4_h4v6_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dststride, 4: binary srcstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel4_h6_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dststride, 4: binary srcstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel4_h6v4_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dststride, 4: binary srcstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel4_h6v6_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dststride, 4: binary srcstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel4_v4_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dststride, 4: binary srcstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel4_v6_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dststride, 4: binary srcstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel8_h4_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dststride, 4: binary srcstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel8_h4v4_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dststride, 4: binary srcstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel8_h4v6_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dststride, 4: binary srcstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel8_h6_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dststride, 4: binary srcstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel8_h6v4_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dststride, 4: binary srcstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel8_h6v6_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dststride, 4: binary srcstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel8_v4_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dststride, 4: binary srcstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_epel8_v6_mmi (0: i32 h, 1: i32 mx, 2: i32 my, 3: binary dststride, 4: binary srcstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_pixels16_mmi (0: i32 h, 1: i32 x, 2: i32 y, 3: binary dststride, 4: binary srcstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_pixels4_mmi (0: i32 h, 1: i32 x, 2: i32 y, 3: binary dststride, 4: binary srcstride, 5: byte dst, 6: byte src),
	void ff_put_vp8_pixels8_mmi (0: i32 h, 1: i32 x, 2: i32 y, 3: binary dststride, 4: binary srcstride, 5: byte dst, 6: byte src),
	void ff_vp8_h_loop_filter16_inner_mmi (0: i32 flim_E, 1: i32 flim_I, 2: i32 hev_thresh, 3: binary stride, 4: byte dst),
	void ff_vp8_h_loop_filter16_mmi (0: i32 flim_E, 1: i32 flim_I, 2: i32 hev_thresh, 3: binary stride, 4: byte dst),
	void ff_vp8_h_loop_filter8uv_inner_mmi (0: i32 flim_E, 1: i32 flim_I, 2: i32 hev_thresh, 3: binary stride, 4: byte dstU, 5: byte dstV),
	void ff_vp8_h_loop_filter8uv_mmi (0: i32 flim_E, 1: i32 flim_I, 2: i32 hev_thresh, 3: binary stride, 4: byte dstU, 5: byte dstV),
	void ff_vp8_h_loop_filter_simple_mmi (0: i32 flim, 1: binary stride, 2: byte dst),
	void ff_vp8_idct_add_mmi (0: binary block, 1: binary stride, 2: byte dst),
	void ff_vp8_idct_dc_add4uv_mmi (0: binary stride, 1: byte dst),
	void ff_vp8_idct_dc_add4y_mmi (0: binary stride, 1: byte dst),
	void ff_vp8_idct_dc_add_mmi (0: binary block, 1: binary stride, 2: byte dst),
	void ff_vp8_luma_dc_wht_dc_mmi (0: binary dc),
	void ff_vp8_luma_dc_wht_mmi (0: binary dc),
	void ff_vp8_v_loop_filter16_inner_mmi (0: i32 flim_E, 1: i32 flim_I, 2: i32 hev_thresh, 3: binary stride, 4: byte dst),
	void ff_vp8_v_loop_filter16_mmi (0: i32 flim_E, 1: i32 flim_I, 2: i32 hev_thresh, 3: binary stride, 4: byte dst),
	void ff_vp8_v_loop_filter8uv_inner_mmi (0: i32 flim_E, 1: i32 flim_I, 2: i32 hev_thresh, 3: binary stride, 4: byte dstU, 5: byte dstV),
	void ff_vp8_v_loop_filter8uv_mmi (0: i32 flim_E, 1: i32 flim_I, 2: i32 hev_thresh, 3: binary stride, 4: byte dstU, 5: byte dstV),
	void ff_vp8_v_loop_filter_simple_mmi (0: i32 flim, 1: binary stride, 2: byte dst),
	void ff_iadst_iadst_16x16_add_msa (0: i16 block, 1: i32 eob, 2: binary stride, 3: byte dst),
	void ff_iadst_iadst_4x4_add_msa (0: i16 block, 1: i32 eob, 2: binary stride, 3: byte dst),
	void ff_iadst_iadst_8x8_add_msa (0: i16 block, 1: i32 eob, 2: binary stride, 3: byte dst),
	void ff_iadst_idct_16x16_add_msa (0: i16 block, 1: i32 eob, 2: binary stride, 3: byte dst),
	void ff_iadst_idct_4x4_add_msa (0: i16 block, 1: i32 eob, 2: binary stride, 3: byte dst),
	void ff_iadst_idct_8x8_add_msa (0: i16 block, 1: i32 eob, 2: binary stride, 3: byte dst),
	void ff_idct_iadst_16x16_add_msa (0: i16 block, 1: i32 eob, 2: binary stride, 3: byte dst),
	void ff_idct_iadst_4x4_add_msa (0: i16 block, 1: i32 eob, 2: binary stride, 3: byte dst),
	void ff_idct_iadst_8x8_add_msa (0: i16 block, 1: i32 eob, 2: binary stride, 3: byte dst),
	void ff_idct_idct_16x16_add_msa (0: i16 block, 1: i32 eob, 2: binary stride, 3: byte dst),
	void ff_idct_idct_32x32_add_msa (0: i16 block, 1: i32 eob, 2: binary stride, 3: byte dst),
	void ff_idct_idct_4x4_add_msa (0: i16 block, 1: i32 eob, 2: binary stride, 3: byte dst),
	void ff_idct_idct_8x8_add_msa (0: i16 block, 1: i32 eob, 2: binary stride, 3: byte dst),
	void ff_dc_16x16_msa (0: binary src_left, 1: binary src_top, 2: binary dst_stride, 3: byte dst),
	void ff_dc_32x32_msa (0: binary src_left, 1: binary src_top, 2: binary dst_stride, 3: byte dst),
	void ff_dc_4x4_msa (0: binary src_left, 1: binary src_top, 2: binary dst_stride, 3: byte dst),
	void ff_dc_8x8_msa (0: binary src_left, 1: binary src_top, 2: binary dst_stride, 3: byte dst),
	void ff_hor_16x16_msa (0: binary src, 1: binary top, 2: binary dst_stride, 3: byte dst),
	void ff_hor_32x32_msa (0: binary src, 1: binary top, 2: binary dst_stride, 3: byte dst),
	void ff_tm_16x16_msa (0: binary src_left, 1: binary src_top_ptr, 2: binary dst_stride, 3: byte dst),
	void ff_tm_32x32_msa (0: binary src_left, 1: binary src_top_ptr, 2: binary dst_stride, 3: byte dst),
	void ff_tm_4x4_msa (0: binary src_left, 1: binary src_top_ptr, 2: binary dst_stride, 3: byte dst),
	void ff_tm_8x8_msa (0: binary src_left, 1: binary src_top_ptr, 2: binary dst_stride, 3: byte dst),
	void ff_vert_16x16_msa (0: binary left, 1: binary src, 2: binary dst_stride, 3: byte dst),
	void ff_vert_32x32_msa (0: binary left, 1: binary src, 2: binary dst_stride, 3: byte dst),
	void ff_loop_filter_h_16_16_msa (0: i32 b_limit_ptr, 1: i32 limit_ptr, 2: i32 thresh_ptr, 3: binary pitch, 4: byte src),
	void ff_loop_filter_h_16_8_msa (0: i32 b_limit_ptr, 1: i32 limit_ptr, 2: i32 thresh_ptr, 3: binary pitch, 4: byte src),
	void ff_loop_filter_h_44_16_msa (0: i32 b_limit_ptr, 1: i32 limit_ptr, 2: i32 thresh_ptr, 3: binary pitch, 4: byte src),
	void ff_loop_filter_h_48_16_msa (0: i32 b_limit_ptr, 1: i32 limit_ptr, 2: i32 thresh_ptr, 3: binary pitch, 4: byte src),
	void ff_loop_filter_h_4_8_msa (0: i32 b_limit_ptr, 1: i32 limit_ptr, 2: i32 thresh_ptr, 3: binary pitch, 4: byte src),
	void ff_loop_filter_h_84_16_msa (0: i32 b_limit_ptr, 1: i32 limit_ptr, 2: i32 thresh_ptr, 3: binary pitch, 4: byte src),
	void ff_loop_filter_h_88_16_msa (0: i32 b_limit_ptr, 1: i32 limit_ptr, 2: i32 thresh_ptr, 3: binary pitch, 4: byte src),
	void ff_loop_filter_h_8_8_msa (0: i32 b_limit_ptr, 1: i32 limit_ptr, 2: i32 thresh_ptr, 3: binary pitch, 4: byte src),
	void ff_loop_filter_v_16_16_msa (0: i32 b_limit_ptr, 1: i32 limit_ptr, 2: i32 thresh_ptr, 3: binary pitch, 4: byte src),
	void ff_loop_filter_v_16_8_msa (0: i32 b_limit_ptr, 1: i32 limit_ptr, 2: i32 thresh_ptr, 3: binary pitch, 4: byte src),
	void ff_loop_filter_v_44_16_msa (0: i32 b_limit_ptr, 1: i32 limit_ptr, 2: i32 thresh_ptr, 3: binary pitch, 4: byte src),
	void ff_loop_filter_v_48_16_msa (0: i32 b_limit_ptr, 1: i32 limit_ptr, 2: i32 thresh_ptr, 3: binary pitch, 4: byte src),
	void ff_loop_filter_v_4_8_msa (0: i32 b_limit_ptr, 1: i32 limit_ptr, 2: i32 thresh_ptr, 3: binary pitch, 4: byte src),
	void ff_loop_filter_v_84_16_msa (0: i32 b_limit_ptr, 1: i32 limit_ptr, 2: i32 thresh_ptr, 3: binary pitch, 4: byte src),
	void ff_loop_filter_v_88_16_msa (0: i32 b_limit_ptr, 1: i32 limit_ptr, 2: i32 thresh_ptr, 3: binary pitch, 4: byte src),
	void ff_loop_filter_v_8_8_msa (0: i32 b_limit_ptr, 1: i32 limit_ptr, 2: i32 thresh_ptr, 3: binary pitch, 4: byte src),
	void ff_avg_bilin_16h_msa (0: binary src, 1: i32 height, 2: i32 mx, 3: i32 my, 4: binary dst_stride, 5: binary src_stride, 6: byte dst),
	void ff_avg_bilin_16hv_msa (0: binary src, 1: i32 height, 2: i32 mx, 3: i32 my, 4: binary dst_stride, 5: binary src_stride, 6: byte dst),
	void ff_avg_bilin_16v_msa (0: binary src, 1: i32 height, 2: i32 mx, 3: i32 my, 4: binary dst_stride, 5: binary src_stride, 6: byte dst),
	void ff_avg_bilin_32h_msa (0: binary src, 1: i32 height, 2: i32 mx, 3: i32 my, 4: binary dst_stride, 5: binary src_stride, 6: byte dst),
	void ff_avg_bilin_32hv_msa (0: binary src, 1: i32 height, 2: i32 mx, 3: i32 my, 4: binary dst_stride, 5: binary src_stride, 6: byte dst),
	void ff_avg_bilin_32v_msa (0: binary src, 1: i32 height, 2: i32 mx, 3: i32 my, 4: binary dst_stride, 5: binary src_stride, 6: byte dst),
	void ff_avg_bilin_4h_msa (0: binary src, 1: i32 height, 2: i32 mx, 3: i32 my, 4: binary dst_stride, 5: binary src_stride, 6: byte dst),
	void ff_avg_bilin_4hv_msa (0: binary src, 1: i32 height, 2: i32 mx, 3: i32 my, 4: binary dst_stride, 5: binary src_stride, 6: byte dst),
	void ff_avg_bilin_4v_msa (0: binary src, 1: i32 height, 2: i32 mx, 3: i32 my, 4: binary dst_stride, 5: binary src_stride, 6: byte dst),
	void ff_avg_bilin_64h_msa (0: binary src, 1: i32 height, 2: i32 mx, 3: i32 my, 4: binary dst_stride, 5: binary src_stride, 6: byte dst),
	void ff_avg_bilin_64hv_msa (0: binary src, 1: i32 height, 2: i32 mx, 3: i32 my, 4: binary dst_stride, 5: binary src_stride, 6: byte dst),
	void ff_avg_bilin_64v_msa (0: binary src, 1: i32 height, 2: i32 mx, 3: i32 my, 4: binary dst_stride, 5: binary src_stride, 6: byte dst),
	void ff_avg_bilin_8h_msa (0: binary src, 1: i32 height, 2: i32 mx, 3: i32 my, 4: binary dst_stride, 5: binary src_stride, 6: byte dst),
	void ff_avg_bilin_8hv_msa (0: binary src, 1: i32 height, 2: i32 mx, 3: i32 my, 4: binary dst_stride, 5: binary src_stride, 6: byte dst),
	void ff_avg_bilin_8v_msa (0: binary src, 1: i32 height, 2: i32 mx, 3: i32 my, 4: binary dst_stride, 5: binary src_stride, 6: byte dst),
	void ff_put_bilin_16h_msa (0: binary src, 1: i32 height, 2: i32 mx, 3: i32 my, 4: binary dst_stride, 5: binary src_stride, 6: byte dst),
	void ff_put_bilin_16hv_msa (0: binary src, 1: i32 height, 2: i32 mx, 3: i32 my, 4: binary dst_stride, 5: binary src_stride, 6: byte dst),
	void ff_put_bilin_16v_msa (0: binary src, 1: i32 height, 2: i32 mx, 3: i32 my, 4: binary dst_stride, 5: binary src_stride, 6: byte dst),
	void ff_put_bilin_32h_msa (0: binary src, 1: i32 height, 2: i32 mx, 3: i32 my, 4: binary dst_stride, 5: binary src_stride, 6: byte dst),
	void ff_put_bilin_32hv_msa (0: binary src, 1: i32 height, 2: i32 mx, 3: i32 my, 4: binary dst_stride, 5: binary src_stride, 6: byte dst),
	void ff_put_bilin_32v_msa (0: binary src, 1: i32 height, 2: i32 mx, 3: i32 my, 4: binary dst_stride, 5: binary src_stride, 6: byte dst),
	void ff_put_bilin_4h_msa (0: binary src, 1: i32 height, 2: i32 mx, 3: i32 my, 4: binary dst_stride, 5: binary src_stride, 6: byte dst),
	void ff_put_bilin_4hv_msa (0: binary src, 1: i32 height, 2: i32 mx, 3: i32 my, 4: binary dst_stride, 5: binary src_stride, 6: byte dst),
	void ff_put_bilin_4v_msa (0: binary src, 1: i32 height, 2: i32 mx, 3: i32 my, 4: binary dst_stride, 5: binary src_stride, 6: byte dst),
	void ff_put_bilin_64h_msa (0: binary src, 1: i32 height, 2: i32 mx, 3: i32 my, 4: binary dst_stride, 5: binary src_stride, 6: byte dst),
	void ff_put_bilin_64hv_msa (0: binary src, 1: i32 height, 2: i32 mx, 3: i32 my, 4: binary dst_stride, 5: binary src_stride, 6: byte dst),
	void ff_put_bilin_64v_msa (0: binary src, 1: i32 height, 2: i32 mx, 3: i32 my, 4: binary dst_stride, 5: binary src_stride, 6: byte dst),
	void ff_put_bilin_8h_msa (0: binary src, 1: i32 height, 2: i32 mx, 3: i32 my, 4: binary dst_stride, 5: binary src_stride, 6: byte dst),
	void ff_put_bilin_8hv_msa (0: binary src, 1: i32 height, 2: i32 mx, 3: i32 my, 4: binary dst_stride, 5: binary src_stride, 6: byte dst),
	void ff_put_bilin_8v_msa (0: binary src, 1: i32 height, 2: i32 mx, 3: i32 my, 4: binary dst_stride, 5: binary src_stride, 6: byte dst),
	binary ff_vp9dsp_init_mips (0: VP9DSPContext dsp, 1: i32 bpp),
	binary ff_wmv2dsp_init_mips (0: WMV2DSPContext c),
	void ff_wmv2_idct_add_mmi (0: i16 block, 1: i32 line_size, 2: byte dest),
	void ff_wmv2_idct_put_mmi (0: i16 block, 1: i32 line_size, 2: byte dest),
	void ff_xvid_idct_add_mmi (0: i16 block, 1: i32 line_size, 2: byte dest),
	void ff_xvid_idct_mmi (0: i16 block),
	void ff_xvid_idct_put_mmi (0: i16 block, 1: i32 line_size, 2: byte dest),
	binary ff_xvid_idct_init_mips (0: AVCodecContext avctx, 1: IDCTDSPContext c, 2: binary high_bit_depth),
	binary ff_mjpeg_decode_end (0: AVCodecContext avctx),
	binary ff_mjpeg_decode_init (0: AVCodecContext avctx),
	i32 ff_mjpeg_decode_dht (0: MJpegDecodeContext s),
	i32 ff_mjpeg_decode_dqt (0: MJpegDecodeContext s),
	i32 ff_mjpeg_decode_frame (0: AVCodecContext avctx, 1: AVPacket avpkt, 2: i32 got_frame, 3: void data),
	i32 ff_mjpeg_decode_sof (0: MJpegDecodeContext s),
	i32 ff_mjpeg_decode_sos (0: MJpegDecodeContext s, 1: binary reference, 2: binary mb_bitmask, 3: i32 mb_bitmask_size),
	i32 ff_mjpeg_find_marker (0: MJpegDecodeContext s, 1: binary buf_ptr, 2: binary unescaped_buf_ptr, 3: binary buf_end, 4: i32 unescaped_buf_size),
	i32 mjpeg_decode_dc (0: MJpegDecodeContext s, 1: i32 dc_index),
	binary ff_mjpeg_encode_init (0: MpegEncContext s),
	binary ff_mjpeg_encode_close (0: MpegEncContext s),
	void ff_mjpeg_encode_code (0: MJpegContext s, 1: i32 code, 2: byte table_id),
	void ff_mjpeg_encode_mb (0: MpegEncContext s),
	void put_marker (0: binary code, 1: PutBitContext p),
	binary ff_init_uni_ac_vlc (0: binary huff_size_ac, 1: byte uni_ac_vlc_len),
	i32 ff_mjpeg_encode_stuffing (0: MpegEncContext s),
	void ff_mjpeg_encode_dc (0: PutBitContext pb, 1: i32 val, 2: i16 huff_code, 3: byte huff_size),
	void ff_mjpeg_encode_picture_frame (0: MpegEncContext s),
	void ff_mjpeg_encode_picture_header (0: AVCodecContext avctx, 1: PutBitContext pb, 2: ScanTable intra_scantable, 3: i32 pred, 4: binary chroma_intra_matrix, 5: binary luma_intra_matrix),
	void ff_mjpeg_encode_picture_trailer (0: PutBitContext pb, 1: i32 header_bits),
	void ff_mjpeg_escape_FF (0: PutBitContext pb, 1: i32 start),
	void ff_mjpeg_init_hvsample (0: AVCodecContext avctx, 1: binary hsample, 2: binary vsample),
	void ff_mjpeg_encode_huffman_close (0: MJpegEncHuffmanContext s, 1: i32 max_nval, 2: binary bits, 3: binary val),
	void ff_mjpeg_encode_huffman_init (0: MJpegEncHuffmanContext s),
	void ff_mjpegenc_huffman_compute_bits (0: HuffTable distincts, 1: PTable prob_table, 2: i32 max_length, 3: i32 size),
	void ff_mjpeg_encode_huffman_increment (0: MJpegEncHuffmanContext s, 1: byte val),
	binary ff_mlp_init_crc (),
	i16 ff_mlp_checksum16 (0: binary buf, 1: binary buf_size),
	byte ff_mlp_calculate_parity (0: binary buf, 1: binary buf_size),
	byte ff_mlp_checksum8 (0: binary buf, 1: binary buf_size),
	byte ff_mlp_restart_checksum (0: binary buf, 1: binary bit_size),
	byte xor_32_to_8 (0: i32 value),
	i32 ff_mlp_read_major_sync (0: GetBitContext gb, 1: MLPHeaderInfo mh, 2: void log),
	i64 ff_truehd_layout (0: i32 chanmap),
	i32 calculate_sign_huff (0: MLPDecodeContext m, 1: binary ch, 2: binary substr),
	i32 read_huff_channels (0: GetBitContext gbp, 1: MLPDecodeContext m, 2: binary pos, 3: binary substr),
	binary ff_mlpdsp_init (0: MLPDSPContext c),
	i32 ff_mlp_pack_output (0: binary sample_buffer, 1: i32 lossless_check_data, 2: byte output_shift, 3: i32 is32, 4: i16 blockpos, 5: byte ch_assign, 6: byte max_matrix_channel, 7: void data),
	void ff_mlp_rematrix_channel (0: binary coeffs, 1: binary noise_buffer, 2: binary bypassed_lsbs, 3: i32 samples, 4: i32 mask, 5: i32 access_unit_size_pow2, 6: i32 index, 7: i32 matrix_noise_shift, 8: i16 blockpos, 9: binary dest_ch, 10: binary maxchan),
	i32 number_sbits (0: i32 number),
	void codebook_bits_offset (0: BestOffset bo, 1: MLPEncodeContext ctx, 2: i16 offset, 3: i32 sample_max, 4: i32 sample_min, 5: i32 codebook, 6: binary channel),
	void codebook_bits (0: BestOffset bo, 1: MLPEncodeContext ctx, 2: i32 max, 3: i32 min, 4: i32 codebook, 5: i32 direction, 6: i32 offset, 7: binary channel),
	binary ff_mlz_flush_dict (0: MLZ mlz),
	binary ff_mlz_init_dict (0: MLZ mlz, 1: void context),
	i32 ff_mlz_decompression (0: GetBitContext gb, 1: MLZ mlz, 2: i32 size, 3: binary buff),
	i32 bidir_refine (0: MpegEncContext s, 1: i32 mb_x, 2: i32 mb_y),
	i32 check_bidir_mv (0: MpegEncContext s, 1: i32 h, 2: i32 motion_bx, 3: i32 motion_by, 4: i32 motion_fx, 5: i32 motion_fy, 6: i32 pred_bx, 7: i32 pred_by, 8: i32 pred_fx, 9: i32 pred_fy, 10: i32 size),
	i32 direct_search (0: MpegEncContext s, 1: i32 mb_x, 2: i32 mb_y),
	i32 ff_get_best_fcode (0: MpegEncContext s, 1: binary mv_table, 2: i32 type),
	i32 ff_init_me (0: MpegEncContext s),
	i32 ff_pre_estimate_p_frame_motion (0: MpegEncContext s, 1: i32 mb_x, 2: i32 mb_y),
	i32 get_penalty_factor (0: i32 lambda2, 1: i32 lambda, 2: i32 type),
	i32 h263_mv4_search (0: MpegEncContext s, 1: i32 mx, 2: i32 my, 3: i32 shift),
	binary update_map_generation (0: MotionEstContext c),
	void ff_estimate_b_frame_motion (0: MpegEncContext s, 1: i32 mb_x, 2: i32 mb_y),
	void ff_estimate_p_frame_motion (0: MpegEncContext s, 1: i32 mb_x, 2: i32 mb_y),
	void ff_fix_long_mvs (0: MpegEncContext s, 1: binary mv_table, 2: i32 f_code, 3: i32 field_select, 4: i32 truncate, 5: i32 type, 6: byte field_select_table),
	void ff_fix_long_p_mvs (0: MpegEncContext s),
	void get_limits (0: MpegEncContext s, 1: i32 x, 2: i32 y),
	void init_interlaced_ref (0: MpegEncContext s, 1: i32 ref_index),
	void init_mv4_ref (0: MotionEstContext c),
	void init_ref (0: MotionEstContext c, 1: i32 ref_index, 2: i32 x, 3: i32 y, 4: binary ref2, 5: binary ref, 6: binary src),
	void set_p_mv_tables (0: MpegEncContext s, 1: i32 mv4, 2: i32 mx, 3: i32 my),
	i32 ff_h263_round_chroma (0: i32 x),
	i32 ff_epzs_motion_search (0: MpegEncContext s, 1: i32 mx_ptr, 2: i32 my_ptr, 3: binary last_mv, 4: i32 h, 5: i32 ref_index, 6: i32 ref_mv_scale, 7: i32 size, 8: i32 src_index),
	i32 ff_get_mb_score (0: MpegEncContext s, 1: i32 add_rate, 2: i32 h, 3: i32 mx, 4: i32 my, 5: i32 ref_index, 6: i32 size, 7: i32 src_index),
	i32 get_mb_score (0: MpegEncContext s, 1: i32 add_rate, 2: i32 h, 3: i32 mx, 4: i32 my, 5: i32 ref_index, 6: i32 size, 7: i32 src_index),
	i32 main (),
	binary motionpixels_tableinit (),
	binary mp_build_rgb_yuv_table (0: YuvPixel p),
	binary mp_set_zero_yuv (0: YuvPixel p),
	i32 mp_yuv_to_rgb (0: i32 clip_rgb, 1: i32 u, 2: i32 v, 3: i32 y),
	binary ff_mpc_init (),
	void ff_mpc_dequantize_and_synth (0: MPCContext c, 1: i16 out, 2: i32 channels, 3: i32 maxband),
	void idx_to_quant (0: GetBitContext gb, 1: MPCContext c, 2: i32 dst, 3: i32 idx),
	i32 mpc8_dec_base (0: GetBitContext gb, 1: i32 k, 2: i32 n),
	i32 mpc8_dec_enum (0: GetBitContext gb, 1: i32 k, 2: i32 n),
	i32 mpc8_get_mod_golomb (0: GetBitContext gb, 1: i32 m),
	binary ff_init_2d_vlc_rl (0: RLTable rl, 1: i32 flags, 2: binary static_size),
	binary ff_mpeg12_common_init (0: MpegEncContext s),
	binary ff_mpeg12_init_vlcs (),
	i32 ff_mpeg1_decode_block_intra (0: GetBitContext gb, 1: binary quant_matrix, 2: i16 block, 3: binary last_dc, 4: i32 index, 5: i32 qscale, 6: byte scantable),
	i32 ff_mpeg1_find_frame_end (0: AVCodecParserContext s, 1: ParseContext pc, 2: binary buf, 3: i32 buf_size),
	void ff_mpeg1_clean_buffers (0: MpegEncContext s),
	i32 decode_dc (0: GetBitContext gb, 1: i32 component),
	i32 get_dmv (0: MpegEncContext s),
	i32 mpeg1_decode_block_inter (0: MpegEncContext s, 1: i16 block, 2: i32 n),
	i32 mpeg1_fast_decode_block_inter (0: MpegEncContext s, 1: i16 block, 2: i32 n),
	i32 mpeg2_decode_block_intra (0: MpegEncContext s, 1: i16 block, 2: i32 n),
	i32 mpeg2_decode_block_non_intra (0: MpegEncContext s, 1: i16 block, 2: i32 n),
	i32 mpeg2_fast_decode_block_intra (0: MpegEncContext s, 1: i16 block, 2: i32 n),
	i32 mpeg2_fast_decode_block_non_intra (0: MpegEncContext s, 1: i16 block, 2: i32 n),
	binary ff_mpeg1_encode_init (0: MpegEncContext s),
	void encode_dc (0: MpegEncContext s, 1: i32 component, 2: i32 diff),
	void encode_mb_skip_run (0: MpegEncContext s, 1: i32 run),
	void ff_mpeg1_encode_mb (0: MpegEncContext s, 1: i32 motion_x, 2: i32 motion_y),
	void ff_mpeg1_encode_picture_header (0: MpegEncContext s, 1: i32 picture_number),
	void ff_mpeg1_encode_slice_header (0: MpegEncContext s),
	void put_mb_modes (0: MpegEncContext s, 1: i32 bits, 2: i32 field_motion, 3: i32 has_mv, 4: i32 n),
	void ff_mpeg12_find_best_frame_rate (0: AVRational frame_rate, 1: i32 code, 2: i32 ext_d, 3: i32 ext_n, 4: i32 nonstandard),
	i32 avpriv_mpeg4audio_get_config (0: MPEG4AudioConfig c, 1: binary buf, 2: i32 bit_size, 3: i32 sync_extension),
	i32 ff_mpeg4audio_get_config_gb (0: GetBitContext gb, 1: MPEG4AudioConfig c, 2: i32 sync_extension),
	i32 get_object_type (0: GetBitContext gb),
	i32 get_sample_rate (0: GetBitContext gb, 1: i32 index),
	binary ff_pce_copy_bits (0: GetBitContext gb, 1: PutBitContext pb, 2: i32 bits),
	i32 ff_copy_pce_data (0: GetBitContext gb, 1: PutBitContext pb),
	i32 ff_mpeg4_get_video_packet_prefix_length (0: MpegEncContext s),
	i32 ff_mpeg4_set_direct_mv (0: MpegEncContext s, 1: i32 mx, 2: i32 my),
	void ff_mpeg4_clean_buffers (0: MpegEncContext s),
	void ff_mpeg4_init_direct_mv (0: MpegEncContext s),
	void ff_mpeg4_set_one_direct_mv (0: MpegEncContext s, 1: i32 i, 2: i32 mx, 3: i32 my),
	i32 ff_mpeg4_pred_dc (0: MpegEncContext s, 1: i32 dir_ptr, 2: i32 encoding, 3: i32 level, 4: i32 n),
	i32 ff_mpeg4_find_frame_end (0: ParseContext pc, 1: binary buf, 2: i32 buf_size),
	binary ff_mpeg4videodec_static_init (),
	i32 ff_mpeg4_decode_partitions (0: Mpeg4DecContext ctx),
	i32 ff_mpeg4_decode_picture_header (0: GetBitContext gb, 1: Mpeg4DecContext ctx),
	i32 ff_mpeg4_decode_studio_slice_header (0: Mpeg4DecContext ctx),
	i32 ff_mpeg4_decode_video_packet_header (0: Mpeg4DecContext ctx),
	i32 ff_mpeg4_frame_end (0: AVCodecContext avctx, 1: binary buf, 2: i32 buf_size),
	i32 ff_mpeg4_workaround_bugs (0: AVCodecContext avctx),
	i32 get_amv (0: Mpeg4DecContext ctx, 1: i32 n),
	i32 mpeg4_decode_block (0: Mpeg4DecContext ctx, 1: i16 block, 2: i32 coded, 3: i32 intra, 4: i32 n, 5: i32 rvlc),
	i32 mpeg4_decode_dc (0: MpegEncContext s, 1: i32 dir_ptr, 2: i32 n),
	i32 mpeg4_is_resync (0: Mpeg4DecContext ctx),
	void ff_mpeg4_pred_ac (0: MpegEncContext s, 1: i16 block, 2: i32 dir, 3: i32 n),
	i32 decide_ac_pred (0: MpegEncContext s, 1: binary dir, 2: binary zigzag_last_index, 3: binary st),
	i32 ff_mpeg4_encode_picture_header (0: MpegEncContext s, 1: i32 picture_number),
	i32 get_b_cbp (0: MpegEncContext s, 1: i32 mb_type, 2: i32 motion_x, 3: i32 motion_y),
	i32 get_block_rate (0: MpegEncContext s, 1: binary block, 2: i32 block_last_index, 3: binary scantable),
	i32 mpeg4_get_dc_length (0: i32 level, 1: i32 n),
	void ff_clean_mpeg4_qscales (0: MpegEncContext s),
	void ff_mpeg4_encode_mb (0: MpegEncContext s, 1: i32 motion_x, 2: i32 motion_y),
	void ff_mpeg4_encode_video_packet_header (0: MpegEncContext s),
	void ff_mpeg4_init_partitions (0: MpegEncContext s),
	void ff_mpeg4_merge_partitions (0: MpegEncContext s),
	void ff_mpeg4_stuffing (0: PutBitContext pbc),
	void ff_set_mpeg4_time (0: MpegEncContext s),
	void mpeg4_encode_blocks (0: MpegEncContext s, 1: PutBitContext ac_pb, 2: PutBitContext dc_pb, 3: binary intra_dc, 4: byte scan_table),
	void mpeg4_encode_block (0: MpegEncContext s, 1: PutBitContext ac_pb, 2: PutBitContext dc_pb, 3: i16 block, 4: i32 intra_dc, 5: i32 n, 6: byte scan_table),
	void mpeg4_encode_dc (0: PutBitContext s, 1: i32 level, 2: i32 n),
	void restore_ac_coeffs (0: MpegEncContext s, 1: binary dir, 2: binary zigzag_last_index, 3: binary st),
	i32 ff_mpeg_er_init (0: MpegEncContext s),
	void ff_mpeg_er_frame_start (0: MpegEncContext s),
	i32 ff_mpa_l2_select_table (0: i32 bitrate, 1: i32 freq, 2: i32 lsf, 3: i32 nb_channels),
	i32 main (),
	binary mpegaudio_tableinit (),
	i32 l1_unscale (0: i32 mant, 1: i32 n, 2: i32 scale_factor),
	i32 l2_unscale_group (0: i32 mant, 1: i32 scale_factor, 2: i32 steps),
	i32 l3_unscale (0: i32 exponent, 1: i32 value),
	i32 avpriv_mpegaudio_decode_header (0: MPADecodeHeader s, 1: i32 header),
	i32 ff_mpa_decode_header (0: binary codec_id, 1: i32 bit_rate, 2: i32 channels, 3: i32 frame_size, 4: i32 sample_rate, 5: i32 head),
	i32 ff_mpa_check_header (0: i32 header),
	binary ff_mpadsp_init (0: MPADSPContext s),
	binary RENAME (),
	double round_sample (0: double sum, 1: i64 sum),
	i32 round_sample (0: double sum, 1: i64 sum),
	void RENAME (),
	i32 ff_alloc_picture (0: AVCodecContext avctx, 1: MotionEstContext me, 2: Picture pic, 3: ScratchpadContext sc, 4: i32 b8_stride, 5: i32 chroma_x_shift, 6: i32 chroma_y_shift, 7: i32 encoding, 8: i32 mb_height, 9: i32 mb_stride, 10: i32 mb_width, 11: i32 out_format, 12: i32 shared, 13: binary linesize, 14: binary uvlinesize),
	i32 ff_find_unused_picture (0: AVCodecContext avctx, 1: Picture picture, 2: i32 shared),
	i32 ff_mpeg_framesize_alloc (0: AVCodecContext avctx, 1: MotionEstContext me, 2: ScratchpadContext sc, 3: i32 linesize),
	i32 ff_mpeg_ref_picture (0: AVCodecContext avctx, 1: Picture dst, 2: Picture src),
	i32 ff_update_picture_tables (0: Picture dst, 1: Picture src),
	i32 pic_is_unused (0: Picture pic),
	void ff_free_picture_tables (0: Picture pic),
	void ff_mpeg_unref_picture (0: AVCodecContext avctx, 1: Picture pic),
	void ff_draw_horiz_band (0: AVCodecContext avctx, 1: AVFrame cur, 2: AVFrame last, 3: i32 first_field, 4: i32 h, 5: i32 low_delay, 6: i32 picture_structure, 7: i32 y),
	void ff_print_debug_info2 (0: AVCodecContext avctx, 1: AVFrame pict, 2: i32 low_delay, 3: binary motion_val, 4: byte qscale_table, 5: i32 mb_height, 6: i32 mb_stride, 7: i32 mb_width, 8: i32 quarter_sample, 9: i32 mbtype_table, 10: byte mbskip_table),
	binary ff_mpv_common_init (0: MpegEncContext s),
	binary ff_mpv_idct_init (0: MpegEncContext s),
	i32 ff_mpeg_update_thread_context (0: AVCodecContext dst, 1: binary src),
	i32 ff_mpv_common_frame_size_change (0: MpegEncContext s),
	i32 ff_mpv_export_qp_table (0: AVFrame f, 1: MpegEncContext s, 2: Picture p, 3: i32 qp_type),
	i32 ff_mpv_frame_start (0: AVCodecContext avctx, 1: MpegEncContext s),
	i32 ff_update_duplicate_context (0: MpegEncContext dst, 1: MpegEncContext src),
	i32 hpel_motion_lowres (0: MpegEncContext s, 1: h264_chroma_mc_func pix_op, 2: i32 field_based, 3: i32 field_select, 4: i32 h_edge_pos, 5: i32 height, 6: i32 h, 7: i32 motion_x, 8: i32 motion_y, 9: i32 src_x, 10: i32 src_y, 11: i32 v_edge_pos, 12: i32 width, 13: i32 w, 14: binary stride, 15: byte dest, 16: byte src),
	void MPV_motion_lowres (0: MpegEncContext s, 1: h264_chroma_mc_func pix_op, 2: i32 dir, 3: byte ref_picture, 4: byte dest_cb, 5: byte dest_cr, 6: byte dest_y),
	void add_dct (0: MpegEncContext s, 1: i16 block, 2: i32 i, 3: i32 line_size, 4: byte dest),
	void add_dequant_dct (0: MpegEncContext s, 1: i16 block, 2: i32 i, 3: i32 line_size, 4: i32 qscale, 5: byte dest),
	void chroma_4mv_motion_lowres (0: MpegEncContext s, 1: h264_chroma_mc_func pix_op, 2: i32 mx, 3: i32 my, 4: byte ref_picture, 5: byte dest_cb, 6: byte dest_cr),
	void ff_clean_intra_table_entries (0: MpegEncContext s),
	void ff_init_block_index (0: MpegEncContext s),
	void ff_mpeg_draw_horiz_band (0: MpegEncContext s, 1: i32 h, 2: i32 y),
	void ff_mpeg_flush (0: AVCodecContext avctx),
	void ff_mpv_common_defaults (0: MpegEncContext s),
	void ff_mpv_common_end (0: MpegEncContext s),
	void ff_mpv_decode_defaults (0: MpegEncContext s),
	void ff_mpv_decode_init (0: AVCodecContext avctx, 1: MpegEncContext s),
	void ff_mpv_frame_end (0: MpegEncContext s),
	void ff_mpv_reconstruct_mb (0: MpegEncContext s),
	void ff_mpv_report_decode_progress (0: MpegEncContext s),
	void ff_print_debug_info (0: AVFrame pict, 1: MpegEncContext s, 2: Picture p),
	void ff_set_qscale (0: MpegEncContext s, 1: i32 qscale),
	void put_dct (0: MpegEncContext s, 1: i16 block, 2: i32 i, 3: i32 line_size, 4: i32 qscale, 5: byte dest),
	i32 get_bits_diff (0: MpegEncContext s),
	i32 mpeg_get_qscale (0: MpegEncContext s),
	void ff_update_block_index (0: MpegEncContext s),
	binary ff_dct_encode_init (0: MpegEncContext s),
	binary ff_mpv_encode_end (0: AVCodecContext avctx),
	binary ff_mpv_encode_init (0: AVCodecContext avctx),
	i32 ff_dct_quantize_c (0: MpegEncContext s, 1: i32 overflow, 2: i16 block, 3: i32 n, 4: i32 qscale),
	i32 ff_mpv_encode_picture (0: AVCodecContext avctx, 1: AVPacket pkt, 2: binary pic_arg, 3: i32 got_packet),
	i32 ff_mpv_reallocate_putbitbuffer (0: MpegEncContext s, 1: i64 size_increase, 2: i64 threshold),
	void clip_coeffs (0: MpegEncContext s, 1: i16 block, 2: i32 last_index),
	void copy_context_after_encode (0: MpegEncContext d, 1: MpegEncContext s, 2: i32 type),
	void copy_context_before_encode (0: MpegEncContext d, 1: MpegEncContext s, 2: i32 type),
	void dct_single_coeff_elimination (0: MpegEncContext s, 1: i32 n, 2: i32 threshold),
	void encode_mb_hq (0: MpegEncContext backup, 1: MpegEncContext best, 2: MpegEncContext s, 3: binary pb2, 4: binary pb, 5: binary tex_pb, 6: i32 dmin, 7: i32 next_block, 8: i32 motion_x, 9: i32 motion_y, 10: i32 type),
	void ff_block_permute (0: binary scantable, 1: i16 block, 2: i32 last, 3: byte permutation),
	void ff_convert_matrix (0: MpegEncContext s, 1: binary quant_matrix, 2: binary qmat, 3: i32 bias, 4: i32 intra, 5: i32 qmax, 6: i32 qmin),
	void ff_init_qscale_tab (0: MpegEncContext s),
	void ff_write_quant_matrix (0: PutBitContext pb, 1: i16 matrix),
	void update_qscale (0: MpegEncContext s),
	i32 hpel_motion (0: MpegEncContext s, 1: i32 motion_x, 2: i32 motion_y, 3: i32 src_x, 4: i32 src_y, 5: op_pixels_func pix_op, 6: byte dest, 7: byte src),
	void apply_8x8 (0: MpegEncContext s, 1: i32 dir, 2: binary pix_op, 3: binary qpix_op, 4: byte ref_picture, 5: byte dest_cb, 6: byte dest_cr, 7: byte dest_y),
	void apply_obmc (0: MpegEncContext s, 1: binary pix_op, 2: byte ref_picture, 3: byte dest_cb, 4: byte dest_cr, 5: byte dest_y),
	void ff_mpv_motion (0: MpegEncContext s, 1: i32 dir, 2: binary pix_op, 3: binary qpix_op, 4: byte ref_picture, 5: byte dest_cb, 6: byte dest_cr, 7: byte dest_y),
	void obmc_motion (0: MpegEncContext s, 1: i32 src_x, 2: i32 src_y, 3: op_pixels_func pix_op, 4: byte dest, 5: byte src),
	void prefetch_motion (0: MpegEncContext s, 1: i32 dir, 2: byte pix),
	void put_obmc (0: i32 stride, 1: binary src, 2: byte dst),
	void qpel_motion (0: MpegEncContext s, 1: i32 bottom_field, 2: i32 field_based, 3: i32 field_select, 4: i32 h, 5: i32 motion_x, 6: i32 motion_y, 7: binary pix_op, 8: binary qpix_op, 9: byte ref_picture, 10: byte dest_cb, 11: byte dest_cr, 12: byte dest_y),
	void ff_xvmc_init_block (0: MpegEncContext s),
	void ff_xvmc_pack_pblocks (0: MpegEncContext s, 1: i32 cbp),
	binary ff_mpegvideodsp_init (0: MpegVideoDSPContext c),
	void ff_gmc_c (0: i32 dxx, 1: i32 dxy, 2: i32 dyx, 3: i32 dyy, 4: i32 height, 5: i32 h, 6: i32 ox, 7: i32 oy, 8: i32 r, 9: i32 shift, 10: i32 stride, 11: i32 width, 12: byte dst, 13: byte src),
	binary ff_mpegvideoencdsp_init (0: AVCodecContext avctx, 1: MpegvideoEncDSPContext c),
	binary ff_mqc_init_context_tables (),
	void ff_mqc_init_contexts (0: MqcState mqc),
	i32 ff_mqc_decode (0: MqcState mqc, 1: byte cxstate),
	void ff_mqc_initdec (0: MqcState mqc, 1: i32 raw, 2: i32 reset, 3: byte bp),
	i32 ff_mqc_flush_to (0: MqcState mqc, 1: i32 dst_len, 2: byte dst),
	i32 ff_mqc_flush (0: MqcState mqc),
	i32 ff_mqc_length (0: MqcState mqc),
	void ff_mqc_encode (0: MqcState mqc, 1: i32 d, 2: byte cxstate),
	void ff_mqc_initenc (0: MqcState mqc, 1: byte bp),
	i32 ff_msgsm_decode_block (0: AVCodecContext avctx, 1: binary buf, 2: i16 samples, 3: i32 mode),
	binary ff_msmpeg4_common_init (0: MpegEncContext s),
	i32 ff_msmpeg4_coded_block_pred (0: MpegEncContext s, 1: i32 n, 2: byte coded_block_ptr),
	i32 ff_msmpeg4_pred_dc (0: MpegEncContext s, 1: i32 dir_ptr, 2: i16 dc_val_ptr, 3: i32 n),
	binary ff_msmpeg4_decode_init (0: AVCodecContext avctx),
	i32 ff_msmpeg4_decode_block (0: MpegEncContext s, 1: binary scan_table, 2: i16 block, 3: i32 coded, 4: i32 n),
	i32 ff_msmpeg4_decode_ext_header (0: MpegEncContext s, 1: i32 buf_size),
	i32 ff_msmpeg4_decode_motion (0: MpegEncContext s, 1: i32 mx_ptr, 2: i32 my_ptr),
	i32 ff_msmpeg4_decode_picture_header (0: MpegEncContext s),
	i32 msmpeg4v1_pred_dc (0: MpegEncContext s, 1: i32 dc_val_ptr, 2: i32 n),
	binary ff_msmpeg4_encode_init (0: MpegEncContext s),
	void ff_msmpeg4_code012 (0: PutBitContext pb, 1: i32 n),
	void ff_msmpeg4_encode_block (0: MpegEncContext s, 1: i16 block, 2: i32 n),
	void ff_msmpeg4_encode_ext_header (0: MpegEncContext s),
	void ff_msmpeg4_encode_mb (0: MpegEncContext s, 1: i32 motion_x, 2: i32 motion_y),
	void ff_msmpeg4_encode_motion (0: MpegEncContext s, 1: i32 mx, 2: i32 my),
	void ff_msmpeg4_encode_picture_header (0: MpegEncContext s, 1: i32 picture_number),
	void ff_msmpeg4_handle_slices (0: MpegEncContext s),
	i32 ff_msrle_decode (0: AVCodecContext avctx, 1: AVFrame pic, 2: GetByteContext gb, 3: i32 depth),
	binary ff_mss12_decode_end (0: MSS12Context c),
	binary ff_mss12_decode_init (0: MSS12Context c, 1: SliceContext sc1, 2: SliceContext sc2, 3: i32 version),
	i32 ff_mss12_decode_rect (0: ArithCoder acoder, 1: SliceContext sc, 2: i32 height, 3: i32 width, 4: i32 x, 5: i32 y),
	void ff_mss12_model_update (0: Model m, 1: i32 val),
	void ff_mss12_slicecontext_reset (0: SliceContext sc),
	binary ff_mss2dsp_init (0: MSS2DSPContext dsp),
	void ff_mss34_dct_put (0: i32 block, 1: binary stride, 2: byte dst),
	void ff_mss34_gen_quant_mat (0: i32 luma, 1: i32 quality, 2: i16 qmat),
	i32 get_coeff (0: GetBitContext gb, 1: VLC vlc),
	void mss4_update_dc_cache (0: MSS4Context c, 1: i32 mb_x),
	i32 signed_shift (0: i32 i, 1: i32 shift),
	void ff_nelly_get_sample_bits (0: binary buf, 1: i32 bits),
	double distance (0: double x, 1: double y, 2: i32 band),
	binary ff_mpv_common_init_neon (0: MpegEncContext s),
	void ff_dct_unquantize_h263_neon (0: i16 block, 1: i32 nCoeffs, 2: i32 qadd, 3: i32 qscale),
	i32 ff_nvdec_decode_init (0: AVCodecContext avctx),
	i32 ff_nvdec_decode_uninit (0: AVCodecContext avctx),
	i32 ff_nvdec_end_frame (0: AVCodecContext avctx),
	i32 ff_nvdec_frame_params (0: AVBufferRef hw_frames_ctx, 1: AVCodecContext avctx, 2: i32 dpb_size, 3: i32 supports_444),
	i32 ff_nvdec_get_ref_idx (0: AVFrame frame),
	i32 ff_nvdec_simple_decode_slice (0: AVCodecContext avctx, 1: binary buffer, 2: i32 size),
	i32 ff_nvdec_simple_end_frame (0: AVCodecContext avctx),
	i32 ff_nvdec_start_frame (0: AVCodecContext avctx, 1: AVFrame frame),
	binary ff_nvenc_encode_close (0: AVCodecContext avctx),
	binary ff_nvenc_encode_init (0: AVCodecContext avctx),
	i64 timestamp_queue_dequeue (0: AVFifoBuffer queue),
	i32 ff_nvenc_encode_frame (0: AVCodecContext avctx, 1: AVPacket pkt, 2: binary frame, 3: i32 got_packet),
	i32 ff_nvenc_receive_packet (0: AVCodecContext avctx, 1: AVPacket pkt),
	i32 ff_nvenc_send_frame (0: AVCodecContext avctx, 1: binary frame),
	void timestamp_queue_enqueue (0: AVFifoBuffer queue, 1: i64 timestamp),
	double on2avc_scale (0: double scale, 1: i32 v),
	i32 get_egolomb (0: GetBitContext gb),
	AVCodecContext avcodec_alloc_context3 (0: binary codec),
	binary avcodec_get_class (),
	binary avcodec_get_frame_class (),
	binary avcodec_get_subtitle_rect_class (),
	i32 avcodec_copy_context (0: AVCodecContext dest, 1: binary src),
	i32 avcodec_get_context_defaults3 (0: AVCodecContext s, 1: binary codec),
	i32 main (),
	void avcodec_free_context (0: AVCodecContext pavctx),
	binary ff_opus_parse_extradata (0: AVCodecContext avctx, 1: OpusContext s),
	i32 ff_opus_parse_packet (0: OpusPacket pkt, 1: binary buf, 2: i32 buf_size, 3: i32 self_delimiting),
	i32 xiph_lacing_16bit (0: binary ptr, 1: binary end),
	i32 xiph_lacing_full (0: binary ptr, 1: binary end),
	void ff_celt_bitalloc (0: CeltFrame f, 1: OpusRangeCoder rc, 2: i32 encode),
	void ff_celt_quant_bands (0: CeltFrame f, 1: OpusRangeCoder rc),
	i32 ff_celt_decode_frame (0: CeltFrame f, 1: OpusRangeCoder rc, 2: double output, 3: i32 channels, 4: i32 end_band, 5: i32 frame_size, 6: i32 start_band),
	i32 ff_celt_init (0: AVCodecContext avctx, 1: CeltFrame f, 2: i32 apply_phase_inv, 3: i32 output_channels),
	void ff_celt_flush (0: CeltFrame f),
	void ff_celt_free (0: CeltFrame f),
	binary celt_rng (0: CeltFrame f),
	binary celt_renormalize_vector (0: double X, 1: double gain, 2: i32 N),
	double celt_decode_pulses (0: OpusRangeCoder rc, 1: i32 y, 2: i32 K, 3: i32 N),
	binary ff_celt_pvq_init (0: CeltPVQ pvq, 1: i32 encode),
	i16 celt_cos (0: i16 x),
	i32 celt_bits2pulses (0: binary cache, 1: i32 bits),
	i32 celt_compute_qn (0: i32 N, 1: i32 b, 2: i32 offset, 3: i32 pulse_cap, 4: i32 stereo),
	i32 celt_log2tan (0: i32 icos, 1: i32 isin),
	i32 celt_pulses2bits (0: binary cache, 1: i32 pulses),
	i32 celt_extract_collapse_mask (0: binary iy, 1: i32 B, 2: i32 N),
	i32 celt_icwrsi (0: binary y, 1: i32 K, 2: i32 N),
	i64 celt_cwrsi (0: i32 y, 1: i32 K, 2: i32 N, 3: i32 i),
	binary ff_celt_pvq_uninit (0: CeltPVQ pvq),
	void celt_encode_pulses (0: OpusRangeCoder rc, 1: i32 y, 2: i32 K, 3: i32 N),
	void celt_exp_rotation (0: binary spread, 1: binary encode, 2: double X, 3: i32 K, 4: i32 len, 5: i32 stride),
	void celt_normalize_residual (0: binary iy, 1: binary X, 2: double g, 3: i32 N),
	void celt_stereo_merge (0: double X, 1: double Y, 2: double mid, 3: i32 N),
	i32 ff_opus_rc_dec_init (0: OpusRangeCoder rc, 1: binary data, 2: i32 size),
	i32 ff_opus_rc_dec_laplace (0: OpusRangeCoder rc, 1: i32 decay, 2: i32 symbol),
	i32 ff_opus_rc_dec_cdf (0: OpusRangeCoder rc, 1: binary cdf),
	i32 ff_opus_rc_dec_log (0: OpusRangeCoder rc, 1: i32 bits),
	i32 ff_opus_rc_dec_uint_step (0: OpusRangeCoder rc, 1: i32 k0),
	i32 ff_opus_rc_dec_uint_tri (0: OpusRangeCoder rc, 1: i32 qn),
	i32 ff_opus_rc_dec_uint (0: OpusRangeCoder rc, 1: i32 size),
	i32 ff_opus_rc_get_raw (0: OpusRangeCoder rc, 1: i32 count),
	void ff_opus_rc_dec_raw_init (0: OpusRangeCoder rc, 1: binary rightend, 2: i32 bytes),
	void ff_opus_rc_enc_cdf (0: OpusRangeCoder rc, 1: binary cdf, 2: i32 val),
	void ff_opus_rc_enc_end (0: OpusRangeCoder rc, 1: i32 size, 2: byte dst),
	void ff_opus_rc_enc_init (0: OpusRangeCoder rc),
	void ff_opus_rc_enc_laplace (0: OpusRangeCoder rc, 1: i32 value, 2: i32 decay, 3: i32 symbol),
	void ff_opus_rc_enc_log (0: OpusRangeCoder rc, 1: i32 val, 2: i32 bits),
	void ff_opus_rc_enc_uint_step (0: OpusRangeCoder rc, 1: i32 k0, 2: i32 val),
	void ff_opus_rc_enc_uint_tri (0: OpusRangeCoder rc, 1: i32 qn, 2: i32 k),
	void ff_opus_rc_enc_uint (0: OpusRangeCoder rc, 1: i32 size, 2: i32 val),
	void ff_opus_rc_put_raw (0: OpusRangeCoder rc, 1: i32 count, 2: i32 val),
	binary opus_rc_tell_frac (0: binary rc),
	binary opus_rc_tell (0: binary rc),
	i32 ff_silk_decode_superframe (0: binary bandwidth, 1: OpusRangeCoder rc, 2: SilkContext s, 3: binary output, 4: i32 coded_channels, 5: i32 duration_ms),
	i32 ff_silk_init (0: AVCodecContext avctx, 1: SilkContext ps, 2: i32 output_channels),
	i32 silk_is_lpc_stable (0: binary lpc, 1: i32 order),
	void ff_silk_flush (0: SilkContext s),
	void ff_silk_free (0: SilkContext ps),
	void silk_count_children (0: OpusRangeCoder rc, 1: binary child, 2: i32 total, 3: i32 model),
	void silk_decode_excitation (0: OpusRangeCoder rc, 1: SilkContext s, 2: double excitationf, 3: i32 active, 4: i32 qoffset_high, 5: i32 voiced),
	void silk_decode_lpc (0: OpusRangeCoder rc, 1: SilkContext s, 2: SilkFrame frame, 3: binary lpc_leadin, 4: binary lpc, 5: i32 has_lpc_leadin, 6: i32 lpc_order, 7: i32 voiced),
	void silk_stabilize_lsf (0: binary min_delta, 1: binary nlsf, 2: i32 order),
	i32 write_opuslacing (0: i32 v, 1: byte dst),
	binary ff_opus_psy_end (0: OpusPsyContext s),
	binary ff_opus_psy_init (0: binary bufqueue, 1: AVCodecContext avctx, 2: OpusEncOptions options, 3: OpusPsyContext s),
	i32 ff_opus_psy_celt_frame_process (0: CeltFrame f, 1: OpusPsyContext s, 2: i32 index),
	i32 ff_opus_psy_process (0: OpusPacketInfo p, 1: OpusPsyContext s),
	void ff_opus_psy_celt_frame_init (0: CeltFrame f, 1: OpusPsyContext s, 2: i32 index),
	void ff_opus_psy_postencode_update (0: CeltFrame f, 1: OpusPsyContext s, 2: OpusRangeCoder rc),
	void ff_opus_psy_signal_eof (0: OpusPsyContext s),
	double bessel_filter (0: FFBesselFilter s, 1: double x),
	i32 bessel_init (0: FFBesselFilter s, 1: double f0, 2: double fs, 3: double n, 4: i32 highpass),
	i32 bessel_reinit (0: FFBesselFilter s, 1: double f0, 2: double fs, 3: double n, 4: i32 highpass),
	AVCodecParserContext av_parser_init (0: i32 codec_id),
	i32 av_parser_change (0: AVCodecContext avctx, 1: AVCodecParserContext s, 2: binary buf, 3: i32 poutbuf_size, 4: i32 buf_size, 5: i32 keyframe, 6: byte poutbuf),
	i32 av_parser_parse2 (0: AVCodecContext avctx, 1: AVCodecParserContext s, 2: binary buf, 3: i32 poutbuf_size, 4: i64 dts, 5: i64 pos, 6: i64 pts, 7: i32 buf_size, 8: byte poutbuf),
	i32 ff_combine_frame (0: ParseContext pc, 1: binary buf, 2: i32 buf_size, 3: i32 next),
	i32 ff_mpeg4video_split (0: AVCodecContext avctx, 1: binary buf, 2: i32 buf_size),
	void av_parser_close (0: AVCodecParserContext s),
	void ff_fetch_timestamp (0: AVCodecParserContext s, 1: i32 fuzzy, 2: i32 off, 3: i32 remove),
	void ff_parse_close (0: AVCodecParserContext s),
	AVCodecParser av_parser_next (0: binary p),
	binary av_parser_iterate (0: void opaque),
	void av_register_codec_parser (0: AVCodecParser parser),
	i32 main (),
	binary alaw2linear (0: binary a_val),
	binary ulaw2linear (0: binary u_val),
	binary vidc2linear (0: binary u_val),
	binary build_xlaw_table (0: binary xlaw2linear, 1: i32 mask, 2: byte linear_to_xlaw),
	void pcm_alaw_tableinit (),
	void pcm_ulaw_tableinit (),
	void pcm_vidc_tableinit (),
	binary ff_pixblockdsp_init (0: AVCodecContext avctx, 1: PixblockDSPContext c),
	i32 ff_png_get_nb_channels (0: i32 color_type),
	i32 ff_png_pass_row_size (0: i32 bits_per_pixel, 1: i32 pass, 2: i32 width),
	void ff_png_zalloc (0: binary items, 1: binary size, 2: void opaque),
	void ff_png_zfree (0: void opaque, 1: void ptr),
	void ff_add_png_paeth_prediction (0: i32 bpp, 1: i32 w, 2: byte dst, 3: byte src, 4: byte top),
	binary ff_pngdsp_init (0: PNGDSPContext dsp),
	i32 ff_pnm_decode_header (0: AVCodecContext avctx, 1: PNMContext s),
	i32 pnm_space (0: i32 c),
	binary ff_audiodsp_init_ppc (0: AudioDSPContext c),
	binary ff_blockdsp_init_ppc (0: BlockDSPContext c),
	binary ff_fdctdsp_init_ppc (0: AVCodecContext avctx, 1: FDCTDSPContext c, 2: binary high_bit_depth),
	void ff_fdct_altivec (0: i16 block),
	binary ff_fft_init_ppc (0: FFTContext s),
	void ff_fft_calc_interleave_vsx (0: FFTComplex z, 1: FFTContext s),
	void ff_fft_calc_vsx (0: FFTComplex z, 1: FFTContext s),
	void fft16_vsx_interleave (0: FFTComplex z),
	void fft16_vsx (0: FFTComplex z),
	void fft2_vsx_interleave (0: FFTComplex z),
	void fft4_vsx_interleave (0: FFTComplex z),
	void fft4_vsx (0: FFTComplex z),
	void fft8_vsx_interleave (0: FFTComplex z),
	void fft8_vsx (0: FFTComplex z),
	void pass_vsx_interleave (0: FFTComplex z, 1: binary wre, 2: binary n),
	void pass_vsx (0: FFTComplex z, 1: binary wre, 2: binary n),
	binary ff_fmt_convert_init_ppc (0: AVCodecContext avctx, 1: FmtConvertContext c),
	binary ff_h264chroma_init_ppc (0: H264ChromaContext c, 1: i32 bit_depth),
	binary ff_h264dsp_init_ppc (0: H264DSPContext c, 1: binary bit_depth, 2: binary chroma_format_idc),
	vec_u8 diff_lt_altivec (0: binary a, 1: binary x, 2: binary y),
	vec_u8 h264_deblock_mask (0: binary alpha, 1: binary beta, 2: binary p0, 3: binary p1, 4: binary q0, 5: binary q1),
	vec_u8 h264_deblock_q1 (0: binary p0, 1: binary p1, 2: binary p2, 3: binary q0, 4: binary tc0),
	void write16x4 (0: i32 dst_stride, 1: binary r0, 2: binary r1, 3: binary r2, 4: binary r3, 5: byte dst),
	void avg_pixels16_l2_altivec (0: binary src1, 1: binary src2, 2: i32 dst_stride, 3: i32 h, 4: i32 src_stride1, 5: byte dst),
	void put_pixels16_l2_altivec (0: binary src1, 1: binary src2, 2: i32 dst_stride, 3: i32 h, 4: i32 src_stride1, 5: byte dst),
	binary ff_hevc_dsp_init_ppc (0: HEVCDSPContext c, 1: binary bit_depth),
	binary ff_hpeldsp_init_ppc (0: HpelDSPContext c, 1: i32 flags),
	void ff_avg_pixels16_altivec (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	void ff_put_pixels16_altivec (0: binary pixels, 1: i32 h, 2: binary line_size, 3: byte block),
	binary ff_idctdsp_init_ppc (0: AVCodecContext avctx, 1: IDCTDSPContext c, 2: binary high_bit_depth),
	binary ff_llauddsp_init_ppc (0: LLAudDSPContext c),
	binary ff_llviddsp_init_ppc (0: LLVidDSPContext c),
	binary MAC64 (0: i64 d, 1: i32 a, 2: i32 b),
	binary MLS64 (0: i64 d, 1: i32 a, 2: i32 b),
	binary MULH (0: i32 a, 1: i32 b),
	binary ff_me_cmp_init_ppc (0: AVCodecContext avctx, 1: MECmpContext c),
	binary ff_mpadsp_init_ppc (0: MPADSPContext s),
	binary ff_mpv_common_init_ppc (0: MpegEncContext s),
	binary ff_mpegvideodsp_init_ppc (0: MpegVideoDSPContext c),
	binary ff_mpegvideoencdsp_init_ppc (0: AVCodecContext avctx, 1: MpegvideoEncDSPContext c),
	binary ff_pixblockdsp_init_ppc (0: AVCodecContext avctx, 1: PixblockDSPContext c, 2: binary high_bit_depth),
	binary ff_svq1enc_init_ppc (0: SVQ1EncContext c),
	binary ff_vc1dsp_init_ppc (0: VC1DSPContext dsp),
	binary ff_videodsp_init_ppc (0: VideoDSPContext ctx, 1: i32 bpc),
	binary ff_vorbisdsp_init_ppc (0: VorbisDSPContext c),
	binary ff_vp3dsp_init_ppc (0: VP3DSPContext c, 1: i32 flags),
	vec_s16 M15 (0: vec_s16 C, 1: vec_s16 a),
	vec_s16 M16 (0: vec_s16 C, 1: vec_s16 a),
	binary ff_vp78dsp_init_ppc (0: VP8DSPContext c),
	void unpack_alpha (0: GetBitContext gb, 1: binary decode_precision, 2: binary num_bits, 3: i32 num_coeffs, 4: i16 dst),
	binary ff_proresdsp_init (0: AVCodecContext avctx, 1: ProresDSPContext dsp),
	void put_pixel (0: binary in, 1: i32 bits_per_raw_sample, 2: binary linesize, 3: i16 dst),
	void put_alpha_run (0: PutBitContext pb, 1: i32 run),
	void subimage_with_fill_template (0: i32 is_alpha_plane, 1: i32 is_interlaced, 2: i32 is_top_field, 3: i16 dst, 4: i16 src, 5: binary dst_height, 6: binary dst_width, 7: binary height, 8: binary stride, 9: binary width, 10: binary x, 11: binary y),
	i32 estimate_vlc (0: i32 val, 1: binary codebook),
	void encode_vlc_codeword (0: PutBitContext pb, 1: i32 val, 2: binary codebook),
	FFPsyChannelGroup ff_psy_find_group (0: FFPsyContext ctx, 1: i32 channel),
	binary ff_psy_init (0: AVCodecContext avctx, 1: FFPsyContext ctx, 2: binary num_bands, 3: binary bands, 4: binary group_map, 5: i32 num_groups, 6: i32 num_lens),
	binary ff_psy_preprocess_init (0: AVCodecContext avctx),
	binary ff_psy_end (0: FFPsyContext ctx),
	binary ff_psy_preprocess_end (0: binary ctx),
	void ff_psy_preprocess (0: binary ctx, 1: double audio, 2: i32 channels),
	i32 ff_thread_init (0: AVCodecContext avctx),
	void ff_thread_free (0: AVCodecContext avctx),
	binary ff_thread_get_format (0: AVCodecContext avctx, 1: binary fmt),
	i32 ff_frame_thread_init (0: AVCodecContext avctx),
	i32 ff_thread_can_start_frame (0: AVCodecContext avctx),
	i32 ff_thread_decode_frame (0: AVCodecContext avctx, 1: AVFrame picture, 2: AVPacket avpkt, 3: i32 got_picture_ptr),
	i32 ff_thread_get_buffer (0: AVCodecContext avctx, 1: ThreadFrame f, 2: i32 flags),
	void ff_frame_thread_free (0: AVCodecContext avctx, 1: i32 thread_count),
	void ff_thread_await_progress (0: ThreadFrame f, 1: i32 field, 2: i32 n),
	void ff_thread_finish_setup (0: AVCodecContext avctx),
	void ff_thread_flush (0: AVCodecContext avctx),
	void ff_thread_release_buffer (0: AVCodecContext avctx, 1: ThreadFrame f),
	void ff_thread_report_progress (0: ThreadFrame f, 1: i32 field, 2: i32 n),
	i32 ff_alloc_entries (0: AVCodecContext avctx, 1: i32 count),
	i32 ff_slice_thread_execute_with_mainfunc (0: AVCodecContext avctx, 1: action_func2 func2, 2: i32 ret, 3: i32 job_count, 4: main_func mainfunc, 5: void arg),
	i32 ff_slice_thread_init (0: AVCodecContext avctx),
	void ff_reset_entries (0: AVCodecContext avctx),
	void ff_slice_thread_free (0: AVCodecContext avctx),
	void ff_thread_await_progress2 (0: AVCodecContext avctx, 1: i32 field, 2: i32 shift, 3: i32 thread),
	void ff_thread_report_progress2 (0: AVCodecContext avctx, 1: i32 field, 2: i32 n, 3: i32 thread),
	i32 put_bits_count (0: PutBitContext s),
	i32 put_bits_left (0: PutBitContext s),
	byte put_bits_ptr (0: PutBitContext s),
	binary put_bits32 (0: PutBitContext s, 1: i32 value),
	void flush_put_bits_le (0: PutBitContext s),
	void flush_put_bits (0: PutBitContext s),
	void init_put_bits (0: PutBitContext s, 1: i32 buffer_size, 2: byte buffer),
	void put_bits64 (0: PutBitContext s, 1: i32 n, 2: i64 value),
	void put_bits_le (0: PutBitContext s, 1: i32 n, 2: binary value),
	void put_bits (0: PutBitContext s, 1: i32 n, 2: binary value),
	void put_sbits (0: PutBitContext pb, 1: i32 value, 2: i32 n),
	void rebase_put_bits (0: PutBitContext s, 1: i32 buffer_size, 2: byte buffer),
	void set_put_bits_buffer_size (0: PutBitContext s, 1: i32 size),
	void skip_put_bits (0: PutBitContext s, 1: i32 n),
	void skip_put_bytes (0: PutBitContext s, 1: i32 n),
	i32 main (),
	binary init_noise_samples (),
	binary qdm2_init_vlc (),
	binary rnd_table_init (),
	binary softclip_table_init (),
	binary DIRAC_MC (),
	void ff_avg_pixels16x16_c (0: binary src, 1: binary stride, 2: byte dst),
	void ff_avg_pixels8x8_c (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_pixels16x16_c (0: binary src, 1: binary stride, 2: byte dst),
	void ff_put_pixels8_l2_8 (0: binary src1, 1: binary src2, 2: i32 dst_stride, 3: i32 h, 4: i32 src_stride1, 5: i32 src_stride2, 6: byte dst),
	binary ff_qsv_map_pictype (0: i32 mfx_pic_type),
	i32 ff_qsv_codec_id_to_mfx (0: binary codec_id),
	i32 ff_qsv_find_surface_idx (0: QSVFrame frame, 1: QSVFramesContext ctx),
	i32 ff_qsv_init_internal_session (0: AVCodecContext avctx, 1: binary load_plugins, 2: binary session),
	i32 ff_qsv_init_session_device (0: AVBufferRef device_ref, 1: AVCodecContext avctx, 2: binary load_plugins, 3: binary psession),
	i32 ff_qsv_init_session_frames (0: AVCodecContext avctx, 1: QSVFramesContext qsv_frames_ctx, 2: binary load_plugins, 3: i32 opaque, 4: binary psession),
	i32 ff_qsv_map_error (0: binary desc, 1: binary mfx_err),
	i32 ff_qsv_map_pixfmt (0: binary format, 1: i32 fourcc),
	i32 ff_qsv_print_error (0: binary error_string, 1: binary err, 2: void log_ctx),
	i32 ff_qsv_print_warning (0: binary warning_string, 1: binary err, 2: void log_ctx),
	i32 ff_qsv_profile_to_mfx (0: binary codec_id, 1: i32 profile),
	binary av_qsv_alloc_context (),
	AVQSVContext av_qsv_alloc_context (),
	i32 ff_qsv_decode_close (0: QSVContext q),
	i32 ff_qsv_process_data (0: AVCodecContext avctx, 1: AVFrame frame, 2: AVPacket pkt, 3: QSVContext q, 4: i32 got_frame),
	binary qsv_fifo_item_size (),
	binary qsv_fifo_size (0: binary fifo),
	void ff_qsv_decode_flush (0: AVCodecContext avctx, 1: QSVContext q),
	i32 ff_qsv_enc_close (0: AVCodecContext avctx, 1: QSVEncContext q),
	i32 ff_qsv_enc_init (0: AVCodecContext avctx, 1: QSVEncContext q),
	i32 ff_qsv_encode (0: AVCodecContext avctx, 1: AVPacket pkt, 2: QSVEncContext q, 3: binary frame, 4: i32 got_packet),
	binary qsv_fifo_item_size (),
	binary qsv_fifo_size (0: binary fifo),
	void qtrle_decode_2n4bpp (0: QtrleContext s, 1: i32 bpp, 2: i32 lines_to_change, 3: i32 row_ptr),
	i32 ff_eval_refl (0: AVCodecContext avctx, 1: binary coefs, 2: i32 refl),
	i32 ff_interp (0: RA144Context ractx, 1: i16 out, 2: i32 a, 3: i32 copyold, 4: i32 energy),
	i32 ff_irms (0: AudioDSPContext adsp, 1: binary data),
	i32 ff_t_sqrt (0: binary x),
	binary ff_rescale_rms (0: binary energy, 1: binary rms),
	binary ff_rms (0: binary data),
	void ff_copy_and_dup (0: binary source, 1: i16 target, 2: i32 offset),
	void ff_eval_coefs (0: binary refl, 1: i32 coefs),
	void ff_int_to_int16 (0: binary inp, 1: i16 out),
	void ff_subblock_synthesis (0: RA144Context ractx, 1: binary lpc_coefs, 2: i32 cb1_idx, 3: i32 cb2_idx, 4: i32 cba_idx, 5: i32 gain, 6: i32 gval),
	i32 extend_code (0: GetBitContext gb, 1: i32 bits, 2: i32 range, 3: i32 val),
	binary ff_init_range_decoder (0: RangeCoder c, 1: binary buf, 2: i32 buf_size),
	binary ff_init_range_encoder (0: RangeCoder c, 1: i32 buf_size, 2: byte buf),
	i32 ff_rac_check_termination (0: RangeCoder c, 1: i32 version),
	i32 ff_rac_terminate (0: RangeCoder c, 1: i32 version),
	void ff_build_rac_states (0: RangeCoder c, 1: i32 factor, 2: i32 max_p),
	i32 get_rac_count (0: RangeCoder c),
	i32 get_rac (0: RangeCoder c, 1: byte state),
	void put_rac (0: RangeCoder c, 1: i32 bit, 2: byte state),
	void refill (0: RangeCoder c),
	void renorm_encoder (0: RangeCoder c),
	binary ff_rate_control_init (0: MpegEncContext s),
	binary ff_rate_control_uninit (0: MpegEncContext s),
	double bits2qp (0: RateControlEntry rce, 1: double bits),
	double qp2bits (0: RateControlEntry rce, 1: double qp),
	double ff_rate_estimate_qscale (0: MpegEncContext s, 1: i32 dry_run),
	i32 ff_vbv_update (0: MpegEncContext s, 1: i32 frame_size),
	void ff_get_2pass_fcode (0: MpegEncContext s),
	void ff_write_pass1_stats (0: MpegEncContext s),
	binary avpriv_get_raw_pix_fmt_tags (),
	binary avcodec_pix_fmt_to_codec_tag (0: binary fmt),
	binary ff_rdft_init (0: binary trans, 1: RDFTContext s, 2: i32 nbits),
	binary ff_rdft_end (0: RDFTContext s),
	binary fill_rectangle (0: i32 h, 1: i32 size, 2: i32 stride, 3: i32 w, 4: i32 val, 5: void vp),
	binary ff_rl_init (0: RLTable rl),
	binary ff_rl_init_vlc (0: RLTable rl, 1: binary static_size),
	void ff_rl_free (0: RLTable rl),
	i32 get_rl_index (0: binary rl, 1: i32 last, 2: i32 level, 3: i32 run),
	i32 ff_rle_count_pixels (0: binary start, 1: i32 bpp, 2: i32 len, 3: i32 same),
	i32 ff_rle_encode (0: binary ptr, 1: i32 add_raw, 2: i32 add_rep, 3: i32 bpp, 4: i32 out_size, 5: i32 w, 6: i32 xor_raw, 7: i32 xor_rep, 8: byte outbuf),
	i32 no_rnd_avg32 (0: i32 a, 1: i32 b),
	i32 rnd_avg32 (0: i32 a, 1: i32 b),
	i64 no_rnd_avg64 (0: i64 a, 1: i64 b),
	i64 rnd_avg64 (0: i64 a, 1: i64 b),
	void apply_motion_generic (0: RoqContext ri, 1: i32 deltax, 2: i32 deltay, 3: i32 sz, 4: i32 x, 5: i32 y),
	void block_copy (0: i32 instride, 1: i32 outstride, 2: i32 sz, 3: binary in, 4: binary out),
	void ff_apply_motion_4x4 (0: RoqContext ri, 1: i32 deltax, 2: i32 deltay, 3: i32 x, 4: i32 y),
	void ff_apply_motion_8x8 (0: RoqContext ri, 1: i32 deltax, 2: i32 deltay, 3: i32 x, 4: i32 y),
	void ff_apply_vector_2x2 (0: RoqContext ri, 1: i32 x, 2: i32 y, 3: roq_cell cell),
	void ff_apply_vector_4x4 (0: RoqContext ri, 1: i32 x, 2: i32 y, 3: roq_cell cell),
	i32 eval_sse (0: binary a, 1: binary b, 2: i32 count),
	i32 squared_diff_macroblock (0: i32 size, 1: binary a, 2: binary b),
	i32 square (0: i32 x),
	byte motion_arg (0: motion_vect mot),
	void frame_block_to_cell (0: binary stride, 1: i32 left, 2: i32 top, 3: byte data, 4: byte block),
	i32 ff_rtjpeg_decode_frame_yuv420 (0: AVFrame f, 1: RTJpegContext c, 2: binary buf, 3: i32 buf_size),
	i32 get_block (0: GetBitContext gb, 1: binary quant, 2: binary scan, 3: i16 block),
	void ff_rtjpeg_decode_init (0: RTJpegContext c, 1: binary cquant, 2: binary lquant, 3: i32 height, 4: i32 width),
	void ff_rtjpeg_init (0: AVCodecContext avctx, 1: RTJpegContext c),
	i32 ff_rv_decode_dc (0: MpegEncContext s, 1: i32 n),
	i32 ff_rv10_encode_picture_header (0: MpegEncContext s, 1: i32 picture_number),
	void ff_rv20_encode_picture_header (0: MpegEncContext s, 1: i32 picture_number),
	void rv30_weak_loop_filter (0: binary lim, 1: binary step, 2: binary stride, 3: byte src),
	binary RV30_LOWPASS (),
	RV34VLC choose_vlc_set (0: i32 mod, 1: i32 quant, 2: i32 type),
	binary ff_rv34_decode_end (0: AVCodecContext avctx),
	binary ff_rv34_decode_init (0: AVCodecContext avctx),
	i32 adjust_pred16 (0: i32 itype, 1: i32 left, 2: i32 up),
	i32 ff_rv34_decode_frame (0: AVCodecContext avctx, 1: AVPacket avpkt, 2: i32 got_picture_ptr, 3: void data),
	i32 ff_rv34_decode_init_thread_copy (0: AVCodecContext avctx),
	i32 ff_rv34_decode_update_thread_context (0: AVCodecContext dst, 1: binary src),
	i32 ff_rv34_get_start_offset (0: GetBitContext gb, 1: i32 mb_size),
	void ZERO8x2 (0: i32 stride, 1: void dst),
	void decode_coeff (0: GetBitContext gb, 1: VLC vlc, 2: i16 dst, 3: i32 coef, 4: i32 esc, 5: i32 q),
	void decode_subblock1 (0: GetBitContext gb, 1: VLC vlc, 2: i16 dst, 3: i32 code, 4: i32 q),
	void decode_subblock3 (0: GetBitContext gb, 1: VLC vlc, 2: i16 dst, 3: i32 code, 4: i32 q_ac1, 5: i32 q_ac2, 6: i32 q_dc),
	void decode_subblock (0: GetBitContext gb, 1: VLC vlc, 2: binary is_block2, 3: i16 dst, 4: i32 code, 5: i32 q),
	void rv34_mc (0: RV34DecContext r, 1: binary block_type, 2: binary height, 3: binary thirdpel, 4: binary width, 5: binary xoff, 6: binary yoff, 7: binary chroma_mc, 8: i32 dir, 9: i32 mv_off, 10: i32 weighted, 11: binary qpel_mc),
	void rv34_pred_b_vector (0: i32 mx, 1: i32 my, 2: binary A, 3: binary B, 4: binary C, 5: i32 A_avail, 6: i32 B_avail, 7: i32 C_avail),
	void rv34_process_block (0: RV34DecContext r, 1: i32 fc, 2: i32 q_ac, 3: i32 q_dc, 4: i32 sc, 5: i32 stride, 6: byte pdst),
	binary ff_rv34dsp_init (0: RV34DSPContext c),
	binary ff_rv40dsp_init (0: RV34DSPContext c),
	void codec37_mv (0: binary src, 1: i32 height, 2: i32 stride, 3: i32 x, 4: i32 y, 5: byte dst),
	byte ff_sbc_crc8 (0: binary ctx, 1: binary data, 2: i64 len),
	void ff_sbc_calculate_bits (0: binary frame, 1: binary bits),
	void sbc_synthesize_eight (0: binary state, 1: binary frame, 2: AVFrame output_frame, 3: i32 blk, 4: i32 ch),
	void sbc_synthesize_four (0: binary state, 1: binary frame, 2: AVFrame output_frame, 3: i32 blk, 4: i32 ch),
	binary ff_sbcdsp_init (0: SBCDSPContext s),
	void sbc_analyze_1b_8s_simd_even (0: SBCDSPContext s, 1: i16 x, 2: i32 out, 3: i32 out_stride),
	void sbc_analyze_1b_8s_simd_odd (0: SBCDSPContext s, 1: i16 x, 2: i32 out, 3: i32 out_stride),
	void sbc_analyze_4b_4s_simd (0: SBCDSPContext s, 1: i16 x, 2: i32 out, 3: i32 out_stride),
	void sbc_analyze_4b_8s_simd (0: SBCDSPContext s, 1: i16 x, 2: i32 out, 3: i32 out_stride),
	binary AAC_RENAME (),
	i32 decode_run_i (0: AVCodecContext avctx, 1: i32 cx1, 2: i32 cx, 3: i32 px, 4: i32 py, 5: i32 linesize, 6: i32 off, 7: i32 run, 8: i32 dst, 9: i32 plx, 10: i32 ply, 11: i32 backstep, 12: i32 clr, 13: i32 ptype),
	i32 decode_run_p (0: AVCodecContext avctx, 1: i32 cx1, 2: i32 cx, 3: i32 linesize, 4: i32 plinesize, 5: i32 run, 6: i32 sx1, 7: i32 sx2, 8: i32 x, 9: i32 y, 10: i32 bx, 11: i32 by, 12: i32 dst, 13: i32 prev, 14: i32 backstep, 15: i32 clr, 16: i32 ptype),
	binary get_uint (0: ShortenContext s, 1: i32 k),
	void ff_prores_idct_10 (0: binary qmat, 1: i16 block),
	void ff_prores_idct_12 (0: binary qmat, 1: i16 block),
	void ff_simple_idct248_put (0: i16 block, 1: binary line_size, 2: byte dest),
	void ff_simple_idct44_add (0: i16 block, 1: binary line_size, 2: byte dest),
	void ff_simple_idct48_add (0: i16 block, 1: binary line_size, 2: byte dest),
	void ff_simple_idct84_add (0: i16 block, 1: binary line_size, 2: byte dest),
	void idct4col_add (0: binary col, 1: binary line_size, 2: byte dest),
	void idct4col_put (0: binary col, 1: binary line_size, 2: byte dest),
	void idct4row (0: i16 row),
	void FUNC6 (),
	void FUNC (),
	binary AAC_RENAME (),
	i32 main (),
	binary ff_sipr_init_16k (0: SiprContext ctx),
	void ff_sipr_decode_frame_16k (0: SiprContext ctx, 1: SiprParameters params, 2: double out_data),
	void smv_img_pnt_plane (0: i32 height, 1: i32 nlines, 2: i32 src_linesize, 3: byte dst, 4: byte src),
	void smv_img_pnt (0: binary pix_fmt, 1: binary src_linesizes, 2: i32 height, 3: i32 nlines, 4: i32 width, 5: binary dst_data, 6: binary src_data),
	i64 ff_snappy_peek_uncompressed_length (0: GetByteContext gb),
	i32 ff_snappy_uncompress (0: GetByteContext gb, 1: i64 size, 2: byte buf),
	binary ff_snow_common_init (0: AVCodecContext avctx),
	binary ff_snow_common_end (0: SnowContext s),
	i32 ff_snow_alloc_blocks (0: SnowContext s),
	i32 ff_snow_common_init_after_header (0: AVCodecContext avctx),
	i32 ff_snow_frame_start (0: SnowContext s),
	i32 ff_snow_get_buffer (0: AVFrame frame, 1: SnowContext s),
	void ff_snow_inner_add_yblock (0: binary obmc_stride, 1: binary obmc, 2: i32 add, 3: i32 b_h, 4: i32 b_w, 5: i32 src_stride, 6: i32 src_x, 7: i32 src_y, 8: slice_buffer sb, 9: byte block, 10: byte dst8),
	void ff_snow_pred_block (0: SnowContext s, 1: binary block, 2: i32 b_h, 3: i32 b_w, 4: i32 h, 5: i32 plane_index, 6: i32 sx, 7: i32 sy, 8: i32 w, 9: binary stride, 10: byte dst, 11: byte tmp),
	void ff_snow_release_buffer (0: AVCodecContext avctx),
	void ff_snow_reset_contexts (0: SnowContext s),
	binary same_block (0: BlockNode a, 1: BlockNode b),
	binary add_yblock (0: IDWTELEM dst, 1: SnowContext s, 2: binary obmc, 3: i32 add, 4: i32 b_h, 5: i32 b_w, 6: i32 b_x, 7: i32 b_y, 8: i32 dst_stride, 9: i32 h, 10: i32 obmc_stride, 11: i32 offset_dst, 12: i32 plane_index, 13: i32 sliced, 14: i32 src_stride, 15: i32 src_x, 16: i32 src_y, 17: i32 w, 18: slice_buffer sb, 19: byte dst8),
	binary predict_plane (0: IDWTELEM buf, 1: SnowContext s, 2: i32 add, 3: i32 plane_index),
	binary predict_slice (0: IDWTELEM buf, 1: SnowContext s, 2: i32 add, 3: i32 mb_y, 4: i32 plane_index),
	binary snow_horizontal_compose_liftS_lead_out (0: IDWTELEM dst, 1: IDWTELEM ref, 2: IDWTELEM src, 3: i32 i, 4: i32 width, 5: i32 w),
	binary snow_horizontal_compose_lift_lead_out (0: IDWTELEM dst, 1: IDWTELEM ref, 2: IDWTELEM src, 3: i32 add, 4: i32 i, 5: i32 lift_high, 6: i32 mul, 7: i32 shift, 8: i32 width, 9: i32 w),
	binary snow_interleave_line_footer (0: IDWTELEM high, 1: IDWTELEM low, 2: i32 i),
	binary snow_interleave_line_header (0: IDWTELEM high, 1: IDWTELEM low, 2: i32 i, 3: i32 width),
	i32 get_symbol2 (0: RangeCoder c, 1: i32 log2, 2: byte state),
	i32 get_symbol (0: RangeCoder c, 1: i32 is_signed, 2: byte state),
	void init_ref (0: MotionEstContext c, 1: i32 ref_index, 2: i32 x, 3: i32 y, 4: binary ref2, 5: binary ref, 6: binary src),
	void pred_mv (0: SnowContext s, 1: binary left, 2: binary top, 3: binary tr, 4: i32 mx, 5: i32 my, 6: i32 ref),
	void put_symbol2 (0: RangeCoder c, 1: i32 log2, 2: i32 v, 3: byte state),
	void put_symbol (0: RangeCoder c, 1: i32 is_signed, 2: i32 v, 3: byte state),
	void set_blocks (0: SnowContext s, 1: i32 cb, 2: i32 cr, 3: i32 level, 4: i32 l, 5: i32 mx, 6: i32 my, 7: i32 ref, 8: i32 type, 9: i32 x, 10: i32 y),
	void unpack_coeffs (0: SnowContext s, 1: SubBand b, 2: SubBand parent, 3: i32 orientation),
	IDWTELEM ff_slice_buffer_load_line (0: i32 line, 1: slice_buffer buf),
	binary ff_dsputil_init_dwt (0: MECmpContext c),
	binary ff_dwt_init (0: SnowDWTContext c),
	i32 ff_slice_buffer_init (0: IDWTELEM base_buffer, 1: i32 line_count, 2: i32 line_width, 3: i32 max_allocated_lines, 4: slice_buffer buf),
	i32 ff_w53_32_c (0: binary v, 1: i32 h, 2: binary line_size, 3: byte pix1, 4: byte pix2),
	i32 ff_w97_32_c (0: binary v, 1: i32 h, 2: binary line_size, 3: byte pix1, 4: byte pix2),
	i32 w_c (0: binary v, 1: i32 h, 2: i32 type, 3: i32 w, 4: binary line_size, 5: byte pix1, 6: byte pix2),
	void ff_slice_buffer_destroy (0: slice_buffer buf),
	void ff_slice_buffer_flush (0: slice_buffer buf),
	void ff_slice_buffer_release (0: i32 line, 1: slice_buffer buf),
	void ff_snow_horizontal_compose97i (0: IDWTELEM b, 1: IDWTELEM temp, 2: i32 width),
	void ff_snow_vertical_compose97i (0: IDWTELEM b0, 1: IDWTELEM b1, 2: IDWTELEM b2, 3: IDWTELEM b3, 4: IDWTELEM b4, 5: IDWTELEM b5, 6: i32 width),
	void ff_spatial_dwt (0: DWTELEM buffer, 1: DWTELEM temp, 2: i32 decomposition_count, 3: i32 height, 4: i32 stride, 5: i32 type, 6: i32 width),
	void ff_spatial_idwt_buffered_init (0: DWTCompose cs, 1: i32 decomposition_count, 2: i32 height, 3: i32 stride_line, 4: i32 type, 5: i32 width, 6: slice_buffer sb),
	void ff_spatial_idwt_buffered_slice (0: DWTCompose cs, 1: IDWTELEM temp, 2: SnowDWTContext dsp, 3: i32 decomposition_count, 4: i32 height, 5: i32 stride_line, 6: i32 type, 7: i32 width, 8: i32 y, 9: slice_buffer slice_buf),
	void ff_spatial_idwt (0: IDWTELEM buffer, 1: IDWTELEM temp, 2: i32 decomposition_count, 3: i32 height, 4: i32 stride, 5: i32 type, 6: i32 width),
	void decode_subband_slice_buffered (0: SnowContext s, 1: SubBand b, 2: binary save_state, 3: i32 h, 4: i32 start_y, 5: slice_buffer sb),
	i32 get_block_bits (0: SnowContext s, 1: i32 w, 2: i32 x, 3: i32 y),
	i32 get_penalty_factor (0: i32 lambda2, 1: i32 lambda, 2: i32 type),
	binary get_symbol (0: RangeCoder c, 1: i32 is_signed, 2: byte state),
	i32 code_samplerate (0: i32 samplerate),
	i32 intlist_read (0: GetBitContext gb, 1: RangeCoder c, 2: i32 buf, 3: i32 base_2_part, 4: i32 entries, 5: byte state),
	i32 intlist_write (0: PutBitContext pb, 1: RangeCoder c, 2: i32 buf, 3: i32 base_2_part, 4: i32 entries, 5: byte state),
	i32 shift_down (0: i32 a, 1: i32 b),
	i32 shift (0: i32 a, 1: i32 b),
	i32 decode_alpha_block (0: GetBitContext gb, 1: binary s, 2: i32 linesize, 3: byte dest, 4: binary last_alpha),
	i32 decode_dc_le (0: GetBitContext gb, 1: i32 component),
	i32 decode_dct_block (0: GetBitContext gb, 1: binary s, 2: binary last_dc, 3: i32 component, 4: i32 linesize, 5: byte dest),
	i32 ff_startcode_find_candidate_c (0: binary buf, 1: i32 size),
	i16 ff_svq1_packet_checksum (0: binary length, 1: binary data, 2: i32 value),
	i32 svq3_decode_block (0: GetBitContext gb, 1: binary type, 2: i16 block, 3: i32 index),
	i32 svq3_mc_dir (0: SVQ3Context s, 1: i32 avg, 2: i32 dir, 3: i32 mode, 4: i32 size),
	void svq3_mc_dir_part (0: SVQ3Context s, 1: i32 avg, 2: i32 dir, 3: i32 dxy, 4: i32 height, 5: i32 mx, 6: i32 my, 7: i32 thirdpel, 8: i32 width, 9: i32 x, 10: i32 y),
	binary ff_synth_filter_init (0: SynthFilterContext c),
	binary WRITE_2D_FUNC (),
	void write_VLC_TYPE_array (0: binary p, 1: i32 s),
	i32 avpriv_tak_parse_streaminfo (0: TAKStreamInfo s, 1: binary buf, 2: i32 size),
	i32 ff_tak_check_crc (0: binary buf, 1: binary buf_size),
	i32 ff_tak_decode_frame_header (0: AVCodecContext avctx, 1: GetBitContext gb, 2: TAKStreamInfo ti, 3: i32 log_level_offset),
	void ff_tak_parse_streaminfo (0: GetBitContext gb, 1: TAKStreamInfo s),
	binary ff_takdsp_init (0: TAKDSPContext c),
	void tdsc_yuv2rgb (0: i32 U, 1: i32 V, 2: i32 Y, 3: byte out),
	i32 main (),
	i32 main (),
	void put_cabac_bit (0: CABACContext c, 1: i32 b),
	void renorm_cabac_encoder (0: CABACContext c),
	i32 main (),
	void IsAlmostEqual (0: double A, 1: double B, 2: double epsilon),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	void dct_calc (0: DCTContext d, 1: FFTSample data),
	void dct_end (0: DCTContext d),
	void dct_init (0: binary trans, 1: DCTContext d, 2: i32 nbits),
	void fft_calc (0: FFTComplex z, 1: FFTContext s),
	void fft_end (0: FFTContext s),
	void fft_init (0: FFTContext s, 1: i32 inverse, 2: i32 nbits),
	void fft_permute (0: FFTComplex z, 1: FFTContext s),
	void imdct_calc (0: binary s, 1: FFTSample output, 2: binary input),
	void mdct_calc (0: FFTContext s, 1: FFTSample output, 2: binary input),
	void mdct_end (0: FFTContext s),
	void mdct_init (0: FFTContext s, 1: double scale, 2: i32 inverse, 3: i32 nbits),
	void rdft_calc (0: FFTSample tab, 1: RDFTContext r),
	void rdft_end (0: RDFTContext r),
	void rdft_init (0: binary trans, 1: RDFTContext r, 2: i32 nbits),
	i32 main (),
	i32 main (),
	i32 main (),
	i32 main (),
	binary main (),
	i32 main (),
	i32 main (),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (),
	i32 main (),
	i32 main (),
	i32 main (),
	i32 main (),
	binary ff_texturedsp_init (0: TextureDSPContext c),
	void dxt1_block_internal (0: binary block, 1: binary stride, 2: byte dst, 3: byte alpha),
	void dxt3_block_internal (0: binary block, 1: binary stride, 2: byte dst),
	void dxt5_block_internal (0: binary block, 1: binary stride, 2: byte dst),
	void rgtc1_block_internal (0: binary block, 1: i32 mono, 2: i32 offset, 3: i32 pix_size, 4: i32 sign, 5: binary stride, 6: byte dst),
	void rgtc2_block_internal (0: binary block, 1: i32 sign, 2: binary stride, 3: byte dst),
	void rgtc_block_internal (0: binary color_tab, 1: binary block, 2: i32 mono, 3: i32 offset, 4: i32 pix_size, 5: binary stride, 6: byte dst),
	binary ff_texturedspenc_init (0: TextureDSPContext c),
	void lerp13rgb (0: byte out, 1: byte p1, 2: byte p2),
	void rgb5652rgb (0: i16 v, 1: byte out),
	double ff_tget_double (0: GetByteContext gb, 1: i32 le),
	i32 ff_tadd_bytes_metadata (0: AVDictionary metadata, 1: GetByteContext gb, 2: binary name, 3: binary sep, 4: i32 count, 5: i32 is_signed, 6: i32 le),
	i32 ff_tadd_doubles_metadata (0: AVDictionary metadata, 1: GetByteContext gb, 2: binary name, 3: binary sep, 4: i32 count, 5: i32 le),
	i32 ff_tadd_long_metadata (0: AVDictionary metadata, 1: GetByteContext gb, 2: binary name, 3: binary sep, 4: i32 count, 5: i32 le),
	i32 ff_tadd_rational_metadata (0: AVDictionary metadata, 1: GetByteContext gb, 2: binary name, 3: binary sep, 4: i32 count, 5: i32 le),
	i32 ff_tadd_shorts_metadata (0: AVDictionary metadata, 1: GetByteContext gb, 2: binary name, 3: binary sep, 4: i32 count, 5: i32 is_signed, 6: i32 le),
	i32 ff_tadd_string_metadata (0: AVDictionary metadata, 1: GetByteContext gb, 2: binary name, 3: i32 count, 4: i32 le),
	i32 ff_tdecode_header (0: GetByteContext gb, 1: i32 ifd_offset, 2: i32 le),
	i32 ff_tis_ifd (0: binary tag),
	i32 ff_tread_tag (0: GetByteContext gb, 1: i32 next, 2: i32 le, 3: binary count, 4: binary tag, 5: binary type),
	binary ff_tget_long (0: GetByteContext gb, 1: i32 le),
	binary ff_tget_short (0: GetByteContext gb, 1: i32 le),
	binary ff_tget (0: GetByteContext gb, 1: i32 le, 2: i32 type),
	i32 check_size (0: TiffEncoderContext s, 1: i64 need),
	binary ff_tpeldsp_init (0: TpelDSPContext c),
	void avg_tpel_pixels_mc00_c (0: binary src, 1: i32 height, 2: i32 stride, 3: i32 width, 4: byte dst),
	void avg_tpel_pixels_mc01_c (0: binary src, 1: i32 height, 2: i32 stride, 3: i32 width, 4: byte dst),
	void avg_tpel_pixels_mc02_c (0: binary src, 1: i32 height, 2: i32 stride, 3: i32 width, 4: byte dst),
	void avg_tpel_pixels_mc10_c (0: binary src, 1: i32 height, 2: i32 stride, 3: i32 width, 4: byte dst),
	void avg_tpel_pixels_mc11_c (0: binary src, 1: i32 height, 2: i32 stride, 3: i32 width, 4: byte dst),
	void avg_tpel_pixels_mc12_c (0: binary src, 1: i32 height, 2: i32 stride, 3: i32 width, 4: byte dst),
	void avg_tpel_pixels_mc20_c (0: binary src, 1: i32 height, 2: i32 stride, 3: i32 width, 4: byte dst),
	void avg_tpel_pixels_mc21_c (0: binary src, 1: i32 height, 2: i32 stride, 3: i32 width, 4: byte dst),
	void avg_tpel_pixels_mc22_c (0: binary src, 1: i32 height, 2: i32 stride, 3: i32 width, 4: byte dst),
	void put_tpel_pixels_mc00_c (0: binary src, 1: i32 height, 2: i32 stride, 3: i32 width, 4: byte dst),
	void put_tpel_pixels_mc01_c (0: binary src, 1: i32 height, 2: i32 stride, 3: i32 width, 4: byte dst),
	void put_tpel_pixels_mc02_c (0: binary src, 1: i32 height, 2: i32 stride, 3: i32 width, 4: byte dst),
	void put_tpel_pixels_mc10_c (0: binary src, 1: i32 height, 2: i32 stride, 3: i32 width, 4: byte dst),
	void put_tpel_pixels_mc11_c (0: binary src, 1: i32 height, 2: i32 stride, 3: i32 width, 4: byte dst),
	void put_tpel_pixels_mc12_c (0: binary src, 1: i32 height, 2: i32 stride, 3: i32 width, 4: byte dst),
	void put_tpel_pixels_mc20_c (0: binary src, 1: i32 height, 2: i32 stride, 3: i32 width, 4: byte dst),
	void put_tpel_pixels_mc21_c (0: binary src, 1: i32 height, 2: i32 stride, 3: i32 width, 4: byte dst),
	void put_tpel_pixels_mc22_c (0: binary src, 1: i32 height, 2: i32 stride, 3: i32 width, 4: byte dst),
	i32 GET_TOK (0: TM2Context ctx, 1: i32 type),
	i32 tm2_get_token (0: GetBitContext gb, 1: TM2Codes code),
	i32 tm2_read_header (0: TM2Context ctx, 1: binary buf),
	void tm2_apply_deltas (0: TM2Context ctx, 1: i32 Y, 2: i32 deltas, 3: i32 last, 4: i32 stride),
	void tm2_hi_res_block (0: AVFrame pic, 1: TM2Context ctx, 2: i32 bx, 3: i32 by),
	void tm2_high_chroma (0: i32 data, 1: i32 deltas, 2: i32 last, 3: i32 stride, 4: binary CD),
	void tm2_low_chroma (0: i32 clast, 1: i32 data, 2: i32 deltas, 3: i32 bx, 4: i32 stride, 5: binary CD),
	void tm2_low_res_block (0: AVFrame pic, 1: TM2Context ctx, 2: i32 bx, 3: i32 by),
	void tm2_med_res_block (0: AVFrame pic, 1: TM2Context ctx, 2: i32 bx, 3: i32 by),
	void tm2_motion_block (0: AVFrame pic, 1: TM2Context ctx, 2: i32 bx, 3: i32 by),
	void tm2_null_res_block (0: AVFrame pic, 1: TM2Context ctx, 2: i32 bx, 3: i32 by),
	void tm2_still_block (0: AVFrame pic, 1: TM2Context ctx, 2: i32 bx, 3: i32 by),
	void tm2_update_block (0: AVFrame pic, 1: TM2Context ctx, 2: i32 bx, 3: i32 by),
	void ff_tta_filter_init (0: TTAFilter c, 1: i32 shift),
	void ff_tta_rice_init (0: TTARice c, 1: i32 k0, 2: i32 k1),
	binary ff_ttadsp_init (0: TTADSPContext c),
	binary ff_ttaencdsp_init (0: TTAEncDSPContext c),
	binary ff_twinvq_decode_close (0: AVCodecContext avctx),
	binary ff_twinvq_decode_init (0: AVCodecContext avctx),
	double get_cos (0: binary cos_tab, 1: i32 idx, 2: i32 part, 3: i32 size),
	i32 ff_twinvq_decode_frame (0: AVCodecContext avctx, 1: AVPacket avpkt, 2: i32 got_frame_ptr, 3: void data),
	void eval_lpcenv_or_interp (0: binary ftype, 1: TwinVQContext tctx, 2: binary in, 3: double out, 4: i32 part, 5: i32 size, 6: i32 step),
	double twinvq_mulawinv (0: double clip, 1: double mu, 2: double y),
	void twinvq_memset_float (0: double buf, 1: double val, 2: i32 size),
	i32 get_unary_0_33 (0: GetBitContext gb),
	i32 get_unary_0_9 (0: GetBitContext gb),
	i32 get_unary (0: GetBitContext gb, 1: i32 len, 2: i32 stop),
	binary MAKE_ACCESSORS (),
	binary avcodec_chroma_pos_to_enum (0: i32 xpos, 1: i32 ypos),
	binary av_get_pcm_codec (0: binary fmt, 1: i32 be),
	binary avpriv_find_pix_fmt (0: binary tags, 1: binary fourcc),
	binary ff_thread_get_format (0: AVCodecContext avctx, 1: binary fmt),
	AVCPBProperties av_cpb_properties_alloc (0: i64 size),
	AVCPBProperties ff_add_cpb_side_data (0: AVCodecContext avctx),
	AVCodecParameters avcodec_parameters_alloc (),
	AVHWAccel av_hwaccel_next (0: binary hwaccel),
	binary avcodec_close (0: AVCodecContext avctx),
	binary avcodec_get_hw_config (0: binary codec, 1: i32 index),
	binary av_get_profile_name (0: binary codec, 1: i32 profile),
	binary avcodec_configuration (),
	binary avcodec_get_name (0: binary id),
	binary avcodec_license (),
	binary avcodec_profile_name (0: binary codec_id, 1: i32 profile),
	binary avpriv_find_start_code (0: binary p, 1: binary end, 2: binary state),
	binary avcodec_open2 (0: AVCodecContext avctx, 1: AVDictionary options, 2: binary codec),
	binary ff_codec_open2_recursive (0: AVCodecContext avctx, 1: AVDictionary options, 2: binary codec),
	i64 ff_guess_coded_bitrate (0: AVCodecContext avctx),
	i32 av_codec_get_max_lowres (0: binary codec),
	i32 av_codec_is_decoder (0: binary codec),
	i32 av_codec_is_encoder (0: binary codec),
	i32 av_get_audio_frame_duration2 (0: AVCodecParameters par, 1: i32 frame_bytes),
	i32 av_get_audio_frame_duration (0: AVCodecContext avctx, 1: i32 frame_bytes),
	i32 av_get_bits_per_sample (0: binary codec_id),
	i32 av_get_exact_bits_per_sample (0: binary codec_id),
	i32 av_lockmgr_register (0: binary cb),
	i32 avcodec_default_execute2 (0: AVCodecContext c, 1: binary func, 2: i32 ret, 3: i32 count, 4: void arg),
	i32 avcodec_default_execute (0: AVCodecContext c, 1: binary func, 2: i32 ret, 3: i32 count, 4: i32 size, 5: void arg),
	i32 avcodec_enum_to_chroma_pos (0: binary pos, 1: i32 xpos, 2: i32 ypos),
	i32 avcodec_fill_audio_frame (0: binary sample_fmt, 1: AVFrame frame, 2: binary buf, 3: i32 align, 4: i32 buf_size, 5: i32 nb_channels),
	i32 avcodec_is_open (0: AVCodecContext s),
	i32 avcodec_parameters_copy (0: AVCodecParameters dst, 1: binary src),
	i32 avcodec_parameters_from_context (0: AVCodecParameters par, 1: binary codec),
	i32 avcodec_parameters_to_context (0: AVCodecContext codec, 1: binary par),
	i32 avpriv_bprint_to_extradata (0: binary buf, 1: AVCodecContext avctx),
	i32 avpriv_codec_get_cap_skip_frame_fill_param (0: binary codec),
	i32 ff_alloc_a53_sei (0: binary frame, 1: i64 sei_size, 2: i64 prefix_len, 3: void data),
	i32 ff_alloc_entries (0: AVCodecContext avctx, 1: i32 count),
	i32 ff_int_from_list_or_default (0: binary val_name, 1: binary array_valid_values, 2: i32 default_value, 3: i32 val, 4: void ctx),
	i32 ff_match_2uint16 (0: binary tab, 1: i32 a, 2: i32 b, 3: i32 size),
	i32 ff_set_dimensions (0: AVCodecContext s, 1: i32 height, 2: i32 width),
	i32 ff_set_sar (0: AVCodecContext avctx, 1: AVRational sar),
	i32 ff_side_data_update_matrix_encoding (0: binary matrix_encoding, 1: AVFrame frame),
	i32 ff_thread_can_start_frame (0: AVCodecContext avctx),
	i32 ff_thread_get_buffer (0: AVCodecContext avctx, 1: ThreadFrame f, 2: i32 flags),
	i32 ff_thread_init (0: AVCodecContext s),
	i32 ff_thread_ref_frame (0: ThreadFrame dst, 1: ThreadFrame src),
	i64 av_get_codec_tag_string (0: byte buf, 1: i64 buf_size, 2: binary codec_tag),
	binary av_xiphlacing (0: binary s, 1: binary v),
	binary avpriv_toupper4 (0: binary x),
	binary avcodec_version (),
	void av_fast_padded_mallocz (0: i64 min_size, 1: binary size, 2: void ptr),
	void av_fast_padded_malloc (0: i64 min_size, 1: binary size, 2: void ptr),
	void av_register_hwaccel (0: AVHWAccel hwaccel),
	void avcodec_align_dimensions2 (0: AVCodecContext s, 1: i32 height, 2: i32 width, 3: binary linesize_align),
	void avcodec_align_dimensions (0: AVCodecContext s, 1: i32 height, 2: i32 width),
	void avcodec_parameters_free (0: AVCodecParameters ppar),
	void avcodec_string (0: AVCodecContext enc, 1: byte buf, 2: i32 buf_size, 3: i32 encode),
	void avsubtitle_free (0: AVSubtitle sub),
	void ff_color_frame (0: AVFrame frame, 1: binary c),
	void ff_reset_entries (0: AVCodecContext avctx),
	void ff_thread_await_progress2 (0: AVCodecContext avctx, 1: i32 field, 2: i32 shift, 3: i32 thread),
	void ff_thread_await_progress (0: ThreadFrame f, 1: i32 field, 2: i32 progress),
	void ff_thread_finish_setup (0: AVCodecContext avctx),
	void ff_thread_release_buffer (0: AVCodecContext avctx, 1: ThreadFrame f),
	void ff_thread_report_progress2 (0: AVCodecContext avctx, 1: i32 field, 2: i32 n, 3: i32 thread),
	void ff_thread_report_progress (0: ThreadFrame f, 1: i32 field, 2: i32 progress),
	i32 ff_ut10_huff_cmp_len (0: binary a, 1: binary b),
	i32 ff_ut_huff_cmp_len (0: binary a, 1: binary b),
	binary ff_utvideodsp_init (0: UTVideoDSPContext c),
	binary ff_v210enc_init (0: V210EncContext s),
	AVCodecContext logger (0: V4L2Buffer buf),
	V4L2m2mContext buf_to_m2mctx (0: V4L2Buffer buf),
	i32 ff_v4l2_buffer_avframe_to_buf (0: V4L2Buffer out, 1: binary frame),
	i32 ff_v4l2_buffer_avpkt_to_buf (0: V4L2Buffer out, 1: binary pkt),
	i32 ff_v4l2_buffer_buf_to_avframe (0: AVFrame frame, 1: V4L2Buffer avbuf),
	i32 ff_v4l2_buffer_buf_to_avpkt (0: AVPacket pkt, 1: V4L2Buffer avbuf),
	i32 ff_v4l2_buffer_enqueue (0: V4L2Buffer avbuf),
	i32 ff_v4l2_buffer_initialize (0: V4L2Buffer avbuf, 1: i32 index),
	i64 v4l2_get_pts (0: V4L2Buffer avbuf),
	void v4l2_set_pts (0: V4L2Buffer out, 1: i64 pts),
	AVCodecContext logger (0: V4L2Context ctx),
	V4L2m2mContext ctx_to_m2mctx (0: V4L2Context ctx),
	i32 ff_v4l2_context_dequeue_frame (0: AVFrame frame, 1: V4L2Context ctx),
	i32 ff_v4l2_context_dequeue_packet (0: AVPacket pkt, 1: V4L2Context ctx),
	i32 ff_v4l2_context_enqueue_frame (0: V4L2Context ctx, 1: binary frame),
	i32 ff_v4l2_context_enqueue_packet (0: V4L2Context ctx, 1: binary pkt),
	i32 ff_v4l2_context_get_format (0: V4L2Context ctx),
	i32 ff_v4l2_context_init (0: V4L2Context ctx),
	i32 ff_v4l2_context_set_format (0: V4L2Context ctx),
	i32 ff_v4l2_context_set_status (0: V4L2Context ctx, 1: i32 cmd),
	i32 v4l2_get_framesize_compressed (0: V4L2Context ctx, 1: i32 height, 2: i32 width),
	i32 v4l2_try_raw_format (0: binary pixfmt, 1: V4L2Context ctx),
	i32 v4l2_type_supported (0: V4L2Context ctx),
	binary v4l2_get_height (0: binary fmt),
	binary v4l2_get_width (0: binary fmt),
	binary v4l2_resolution_changed (0: binary fmt2, 1: V4L2Context ctx),
	void ff_v4l2_context_release (0: V4L2Context ctx),
	void v4l2_save_to_context (0: binary fmt, 1: V4L2Context ctx),
	binary ff_v4l2_format_v4l2_to_avfmt (0: binary avcodec, 1: i32 v4l2_fmt),
	i32 ff_v4l2_format_avcodec_to_v4l2 (0: binary avcodec),
	i32 ff_v4l2_format_avfmt_to_v4l2 (0: binary avfmt),
	i32 ff_v4l2_m2m_codec_end (0: AVCodecContext avctx),
	i32 ff_v4l2_m2m_codec_full_reinit (0: V4L2m2mContext s),
	i32 ff_v4l2_m2m_codec_init (0: AVCodecContext avctx),
	i32 ff_v4l2_m2m_codec_reinit (0: V4L2m2mContext s),
	i32 ff_v4l2_m2m_create_context (0: AVCodecContext avctx, 1: V4L2m2mContext s),
	i32 v4l2_mplane_video (0: binary cap),
	i32 v4l2_splane_video (0: binary cap),
	i32 v4l2_get_ext_ctrl (0: V4L2m2mContext s, 1: binary name, 2: binary value, 3: binary id),
	i32 v4l2_mpeg4_profile_from_ff (0: i32 p),
	binary v4l2_h264_profile_from_ff (0: i32 p),
	void v4l2_set_ext_ctrl (0: V4L2m2mContext s, 1: binary name, 2: binary value, 3: binary id),
	void v4l2_set_timeperframe (0: V4L2m2mContext s, 1: binary den, 2: binary num),
	i32 ff_vaapi_common_frame_params (0: AVBufferRef hw_frames_ctx, 1: AVCodecContext avctx),
	i32 ff_vaapi_decode_cancel (0: AVCodecContext avctx, 1: VAAPIDecodePicture pic),
	i32 ff_vaapi_decode_init (0: AVCodecContext avctx),
	i32 ff_vaapi_decode_issue (0: AVCodecContext avctx, 1: VAAPIDecodePicture pic),
	i32 ff_vaapi_decode_make_param_buffer (0: AVCodecContext avctx, 1: VAAPIDecodePicture pic, 2: binary data, 3: i32 type, 4: i64 size),
	i32 ff_vaapi_decode_make_slice_buffer (0: AVCodecContext avctx, 1: VAAPIDecodePicture pic, 2: binary params_data, 3: binary slice_data, 4: i64 params_size, 5: i64 slice_size),
	i32 ff_vaapi_decode_uninit (0: AVCodecContext avctx),
	binary ff_vaapi_get_surface_id (0: AVFrame pic),
	binary ff_vaapi_encode_close (0: AVCodecContext avctx),
	binary ff_vaapi_encode_init (0: AVCodecContext avctx),
	i32 ff_vaapi_encode2 (0: AVCodecContext avctx, 1: AVPacket pkt, 2: binary input_image, 3: i32 got_packet),
	i32 ff_vaapi_encode_receive_packet (0: AVCodecContext avctx, 1: AVPacket pkt),
	i32 ff_vaapi_encode_send_frame (0: AVCodecContext avctx, 1: binary frame),
	i32 mpeg2_get_f_code (0: binary s),
	i32 mpeg2_get_is_frame_start (0: binary s),
	binary vc1_get_MVMODE2 (0: binary v),
	binary vc1_get_MVMODE (0: binary v),
	binary vc1_get_INTCOMPFIELD (0: binary v),
	binary vc1_get_LUMSCALE2 (0: binary v),
	binary vc1_get_LUMSHIFT2 (0: binary v),
	i32 vc1_get_LUMSCALE (0: binary v),
	i32 vc1_get_LUMSHIFT (0: binary v),
	i32 vc1_get_TTFRM (0: binary v),
	i32 vc1_has_ACPRED_bitplane (0: binary v),
	i32 vc1_has_DIRECTMB_bitplane (0: binary v),
	i32 vc1_has_FIELDTX_bitplane (0: binary v),
	i32 vc1_has_FORWARDMB_bitplane (0: binary v),
	i32 vc1_has_MVTYPEMB_bitplane (0: binary v),
	i32 vc1_has_OVERFLAGS_bitplane (0: binary v),
	i32 vc1_has_SKIPMB_bitplane (0: binary v),
	void vc1_pack_bitplanes (0: binary ff_bp, 1: i32 n, 2: i32 stride, 3: i32 x, 4: i32 y, 5: byte bitplane),
	i32 check_line (0: byte buf, 1: byte end, 2: byte start),
	i32 check_pixel (0: byte buf, 1: byte end, 2: byte start),
	binary ff_vc1_init_common (0: VC1Context v),
	i32 ff_vc1_decode_entry_point (0: AVCodecContext avctx, 1: GetBitContext gb, 2: VC1Context v),
	i32 ff_vc1_decode_sequence_header (0: AVCodecContext avctx, 1: GetBitContext gb, 2: VC1Context v),
	i32 ff_vc1_parse_frame_header_adv (0: GetBitContext gb, 1: VC1Context v),
	i32 ff_vc1_parse_frame_header (0: GetBitContext gb, 1: VC1Context v),
	i32 ff_vc1_pred_dc (0: MpegEncContext s, 1: i32 dir_ptr, 2: i16 dc_val_ptr, 3: i32 a_avail, 4: i32 c_avail, 5: i32 n, 6: i32 overlap, 7: i32 pq),
	i32 vc1_coded_block_pred (0: MpegEncContext s, 1: i32 n, 2: byte coded_block_ptr),
	i32 vc1_i_pred_dc (0: MpegEncContext s, 1: i32 dir_ptr, 2: i16 dc_val_ptr, 3: i32 n, 4: i32 overlap, 5: i32 pq),
	void ff_vc1_decode_blocks (0: VC1Context v),
	void init_block_index (0: VC1Context v),
	void vc1_b_mc (0: VC1Context v, 1: binary dmv_x, 2: binary dmv_y, 3: i32 direct, 4: i32 mode),
	binary find_next_marker (0: binary end, 1: binary src),
	binary vc1_unescape_buffer (0: binary src, 1: i32 size, 2: byte dst),
	void ff_vc1_b_intfi_loop_filter (0: VC1Context v),
	void ff_vc1_i_loop_filter (0: VC1Context v),
	void ff_vc1_i_overlap_filter (0: VC1Context v),
	void ff_vc1_p_intfr_loop_filter (0: VC1Context v),
	void ff_vc1_p_loop_filter (0: VC1Context v),
	void ff_vc1_p_overlap_filter (0: VC1Context v),
	void ff_vc1_interp_mc (0: VC1Context v),
	void ff_vc1_mc_1mv (0: VC1Context v, 1: i32 dir),
	void ff_vc1_mc_4mv_chroma4 (0: VC1Context v, 1: i32 avg, 2: i32 dir2, 3: i32 dir),
	void ff_vc1_mc_4mv_chroma (0: VC1Context v, 1: i32 dir),
	void ff_vc1_mc_4mv_luma (0: VC1Context v, 1: i32 avg, 2: i32 dir, 3: i32 n),
	void ff_vc1_pred_b_mv_intfi (0: VC1Context v, 1: i32 dmv_x, 2: i32 dmv_y, 3: i32 pred_flag, 4: i32 mv1, 5: i32 n),
	void ff_vc1_pred_b_mv (0: VC1Context v, 1: binary dmv_x, 2: binary dmv_y, 3: i32 direct, 4: i32 mvtype),
	void ff_vc1_pred_mv_intfr (0: VC1Context v, 1: i32 dir, 2: i32 dmv_x, 3: i32 dmv_y, 4: i32 mvn, 5: i32 n, 6: i32 r_x, 7: i32 r_y, 8: byte is_intra),
	void ff_vc1_pred_mv (0: VC1Context v, 1: i32 dir, 2: i32 dmv_x, 3: i32 dmv_y, 4: i32 mv1, 5: i32 n, 6: i32 pred_flag, 7: i32 r_x, 8: i32 r_y, 9: byte is_intra),
	binary scale_mv (0: i32 bfrac, 1: i32 inv, 2: i32 qs, 3: i32 value),
	binary ff_vc1_decode_end (0: AVCodecContext avctx),
	binary ff_vc1_decode_init_alloc_tables (0: VC1Context v),
	binary ff_vc1_init_transposed_scantables (0: VC1Context v),
	i32 get_fp_val (0: GetBitContext gb),
	binary ff_vc1dsp_init (0: VC1DSPContext dsp),
	void vc1_loop_filter (0: i32 len, 1: i32 pq, 2: i32 step, 3: i32 stride, 4: byte src),
	binary ff_vc2enc_init_transforms (0: VC2TransformContext s, 1: i32 p_height, 2: i32 p_stride, 3: i32 slice_h, 4: i32 slice_w),
	binary ff_vc2enc_free_transforms (0: VC2TransformContext s),
	binary MAKE_ACCESSORS (),
	AVVDPAUContext av_alloc_vdpaucontext (),
	AVVDPAUContext av_vdpau_alloc_context (),
	i32 av_vdpau_bind_context (0: AVCodecContext avctx, 1: binary device, 2: binary get_proc, 3: binary flags),
	i32 av_vdpau_get_profile (0: AVCodecContext avctx, 1: binary profile),
	i32 ff_vdpau_add_buffer (0: binary pic_ctx, 1: binary buf, 2: i32 size),
	i32 ff_vdpau_common_end_frame (0: binary pic_ctx, 1: AVCodecContext avctx, 2: AVFrame frame),
	i32 ff_vdpau_common_frame_params (0: AVBufferRef hw_frames_ctx, 1: AVCodecContext avctx),
	i32 ff_vdpau_common_init (0: AVCodecContext avctx, 1: binary profile, 2: i32 level),
	i32 ff_vdpau_common_start_frame (0: binary pic_ctx, 1: binary buffer, 2: binary size),
	i32 ff_vdpau_common_uninit (0: AVCodecContext avctx),
	i32 ff_vdpau_mpeg_end_frame (0: AVCodecContext avctx),
	binary ff_vdpau_get_surface_id (0: AVFrame pic),
	binary ff_videodsp_init (0: VideoDSPContext ctx, 1: i32 bpc),
	void FUNC (),
	AVVideotoolboxContext av_videotoolbox_alloc_context (),
	binary ff_videotoolbox_avcc_extradata_create (0: AVCodecContext avctx),
	binary ff_videotoolbox_hvcc_extradata_create (0: AVCodecContext avctx),
	i32 av_videotoolbox_default_init2 (0: AVCodecContext avctx, 1: AVVideotoolboxContext vtctx),
	i32 av_videotoolbox_default_init (0: AVCodecContext avctx),
	i32 ff_videotoolbox_alloc_frame (0: AVCodecContext avctx, 1: AVFrame frame),
	i32 ff_videotoolbox_h264_decode_slice (0: AVCodecContext avctx, 1: binary buffer, 2: i32 size),
	i32 ff_videotoolbox_h264_start_frame (0: AVCodecContext avctx, 1: binary buffer, 2: i32 size),
	i32 ff_videotoolbox_uninit (0: AVCodecContext avctx),
	void av_videotoolbox_default_free (0: AVCodecContext avctx),
	i32 ff_vorbis_len2vlc (0: i32 codes, 1: byte bits, 2: binary num),
	i32 ff_vorbis_ready_floor1_list (0: AVCodecContext avctx, 1: i32 values, 2: vorbis_floor1_entry list),
	binary ff_vorbis_nth_root (0: binary n, 1: binary x),
	void ff_vorbis_floor1_render_list (0: double out, 1: i32 flag, 2: i32 multiplier, 3: i32 samples, 4: i32 values, 5: i16 y_list, 6: vorbis_floor1_entry list),
	void render_line_unrolled (0: double buf, 1: binary sy, 2: binary x, 3: i32 adx, 4: i32 ady, 5: i32 x1, 6: i32 y),
	AVVorbisParseContext av_vorbis_parse_init (0: binary extradata, 1: i32 extradata_size),
	i32 av_vorbis_parse_frame_flags (0: AVVorbisParseContext s, 1: binary buf, 2: i32 flags, 3: i32 buf_size),
	i32 av_vorbis_parse_frame (0: AVVorbisParseContext s, 1: binary buf, 2: i32 buf_size),
	void av_vorbis_parse_free (0: AVVorbisParseContext s),
	void av_vorbis_parse_reset (0: AVVorbisParseContext s),
	i32 vorbis_residue_decode (0: double vec, 1: byte do_not_decode, 2: binary ch_left, 3: binary ch, 4: binary vlen, 5: vorbis_context vc, 6: vorbis_residue vr),
	void ff_vorbis_inverse_coupling (0: double ang, 1: double mag, 2: binary blocksize),
	binary ff_vorbisdsp_init (0: VorbisDSPContext dsp),
	i32 put_codeword (0: PutBitContext pb, 1: i32 entry, 2: vorbis_enc_codebook cb),
	i32 vp3_dequant (0: Vp3DecodeContext s, 1: Vp3Fragment frag, 2: binary block, 3: i32 inter, 4: i32 plane),
	binary ff_vp3dsp_init (0: VP3DSPContext c, 1: i32 flags),
	void ff_vp3dsp_idct10_add (0: i16 block, 1: binary stride, 2: byte dest),
	void ff_vp3dsp_idct10_put (0: i16 block, 1: binary stride, 2: byte dest),
	void ff_vp3dsp_set_bounding_values (0: i32 bounding_values_array, 1: i32 filter_limit),
	binary ff_vp56_free_context (0: VP56Context s),
	binary ff_vp56_free (0: AVCodecContext avctx),
	binary ff_vp56_init_context (0: AVCodecContext avctx, 1: VP56Context s, 2: i32 flip, 3: i32 has_alpha),
	binary ff_vp56_init (0: AVCodecContext avctx, 1: i32 flip, 2: i32 has_alpha),
	i32 ff_vp56_decode_frame (0: AVCodecContext avctx, 1: AVPacket avpkt, 2: i32 got_frame, 3: void data),
	void ff_vp56_init_dequant (0: VP56Context s, 1: i32 quantizer),
	binary vp56_rac_get_prob_branchy (0: VP56RangeCoder c, 1: i32 prob),
	binary vp56_rac_get_prob (0: VP56RangeCoder c, 1: byte prob),
	binary vp56_rac_get_tree (0: VP56RangeCoder c, 1: binary tree, 2: binary probs),
	binary vp56_rac_get (0: VP56RangeCoder c),
	binary vp8_rac_get_coeff (0: VP56RangeCoder c, 1: binary prob),
	binary vp8_rac_get_tree (0: VP56RangeCoder c, 1: binary tree, 2: binary probs),
	binary vp8_rac_get (0: VP56RangeCoder c),
	binary vpX_rac_is_end (0: VP56RangeCoder c),
	binary vp56_rac_renorm (0: VP56RangeCoder c),
	binary vp56_rac_gets_nn (0: VP56RangeCoder c, 1: i32 bits),
	binary vp8_rac_get_nn (0: VP56RangeCoder c),
	binary vp8_rac_get_sint (0: VP56RangeCoder c, 1: i32 bits),
	i32 vp56_rac_gets (0: VP56RangeCoder c, 1: i32 bits),
	i32 vp8_rac_get_uint (0: VP56RangeCoder c, 1: i32 bits),
	binary ff_vp6dsp_init (0: VP56DSPContext s),
	i32 ff_vp56_init_range_decoder (0: VP56RangeCoder c, 1: binary buf, 2: i32 buf_size),
	void ff_vp6_filter_diag4_c (0: binary h_weights, 1: binary v_weights, 2: binary stride, 3: byte dst, 4: byte src),
	binary ff_vp8_decode_free (0: AVCodecContext avctx),
	binary ff_vp8_decode_init (0: AVCodecContext avctx),
	i32 ff_vp8_decode_frame (0: AVCodecContext avctx, 1: AVPacket avpkt, 2: i32 got_frame, 3: void data),
	binary LOOP_FILTERS (),
	binary ff_vp78dsp_init (0: VP8DSPContext dsp),
	void ff_vp9_decode_block (0: binary bl, 1: binary bp, 2: VP9Filter lflvl, 3: VP9TileData td, 4: i32 col, 5: i32 row, 6: binary uvoff, 7: binary yoff),
	binary ff_vp9dsp_init (0: VP9DSPContext dsp, 1: i32 bitexact, 2: i32 bpp),
	binary FUNC (),
	void memset_bpc (0: i32 len, 1: i32 val, 2: i16 dst),
	void ff_vp9_loopfilter_sb (0: AVCodecContext avctx, 1: VP9Filter lflvl, 2: i32 col, 3: i32 row, 4: binary uvoff, 5: binary yoff),
	void ff_vp9_fill_mv (0: VP56mv mv, 1: VP9TileData td, 2: i32 mode, 3: i32 sb),
	void ff_vp9_adapt_probs (0: VP9Context s),
	void ff_vp9_inter_recon_16bpp (0: VP9TileData td),
	void ff_vp9_inter_recon_8bpp (0: VP9TileData td),
	void ff_vp9_intra_recon_16bpp (0: VP9TileData td, 1: binary uv_off, 2: binary y_off),
	void ff_vp9_intra_recon_8bpp (0: VP9TileData td, 1: binary uv_off, 2: binary y_off),
	i32 wv_check_crc (0: WavpackFrameContext s, 1: i32 crc_extra_bits, 2: i32 crc),
	i32 wv_get_value_integer (0: WavpackFrameContext s, 1: i32 crc, 2: binary S),
	i32 wv_unpack_mono (0: GetBitContext gb, 1: WavpackFrameContext s, 2: binary type, 3: void dst),
	i32 wv_unpack_stereo (0: GetBitContext gb, 1: WavpackFrameContext s, 2: binary type, 3: void dst_l, 4: void dst_r),
	binary wp_exp2 (0: i16 val),
	binary wp_log2 (0: i32 val),
	binary ff_wma_init (0: AVCodecContext avctx, 1: i32 flags2),
	i32 ff_wma_end (0: AVCodecContext avctx),
	i32 ff_wma_run_level_decode (0: AVCodecContext avctx, 1: GetBitContext gb, 2: VLC vlc, 3: WMACoef ptr, 4: binary level_table, 5: binary run_table, 6: i32 block_len, 7: i32 coef_nb_bits, 8: i32 frame_len_bits, 9: i32 num_coefs, 10: i32 offset, 11: i32 version),
	i32 ff_wma_total_gain_to_bits (0: i32 total_gain),
	binary ff_wma_get_large_val (0: GetBitContext gb),
	binary ff_wma_get_frame_len_bits (0: i32 sample_rate, 1: i32 version, 2: binary decode_flags),
	double pow_m1_4 (0: WMACodecContext s, 1: double x),
	binary ff_wmv2_common_init (0: Wmv2Context w),
	void ff_mspel_motion (0: MpegEncContext s, 1: i32 h, 2: i32 motion_x, 3: i32 motion_y, 4: binary pix_op, 5: byte ref_picture, 6: byte dest_cb, 7: byte dest_cr, 8: byte dest_y),
	void ff_wmv2_add_mb (0: MpegEncContext s, 1: byte dest_cb, 2: byte dest_cr, 3: byte dest_y),
	binary wmv2_get_cbp_table_index (0: MpegEncContext s, 1: i32 cbp_index),
	i32 ff_wmv2_decode_mb (0: MpegEncContext s),
	i32 ff_wmv2_decode_picture_header (0: MpegEncContext s),
	i32 ff_wmv2_decode_secondary_picture_header (0: MpegEncContext s),
	i32 wmv2_decode_inter_block (0: Wmv2Context w, 1: i16 block, 2: i32 cbp, 3: i32 n),
	i32 wmv2_decode_motion (0: Wmv2Context w, 1: i32 mx_ptr, 2: i32 my_ptr),
	binary ff_wmv2dsp_init (0: WMV2DSPContext c),
	i32 ff_wmv2_encode_picture_header (0: MpegEncContext s, 1: i32 picture_number),
	void ff_wmv2_encode_mb (0: MpegEncContext s, 1: i32 motion_x, 2: i32 motion_y),
	i32 wnv1_get_code (0: WNV1Context w, 1: i32 base_value),
	binary ff_aac_dsp_init_x86 (0: AACEncContext s),
	binary ff_psdsp_init_x86 (0: PSDSPContext s),
	binary ff_ac3dsp_init_x86 (0: AC3DSPContext c, 1: i32 bit_exact),
	binary DOWNMIX_FUNCS (),
	binary ff_alacdsp_init_x86 (0: ALACDSPContext c),
	binary ff_audiodsp_init_x86 (0: AudioDSPContext c),
	binary ff_blockdsp_init_x86 (0: AVCodecContext avctx, 1: BlockDSPContext c),
	binary ff_bswapdsp_init_x86 (0: BswapDSPContext c),
	binary get_cabac_bypass_sign_x86 (0: CABACContext c, 1: i32 val),
	binary get_cabac_bypass_x86 (0: CABACContext c),
	binary get_cabac_inline_x86 (0: CABACContext c, 1: byte state),
	binary ff_cavsdsp_init_x86 (0: AVCodecContext avctx, 1: CAVSDSPContext c),
	binary LFE_FIR_FLOAT_FUNC (),
	binary ff_dct_init_x86 (0: DCTContext s),
	void ff_spatial_idwt_init_x86 (0: binary type, 1: DWTContext d),
	binary DIRAC_PIXOP (),
	void ff_avg_dirac_pixels16_sse2 (0: binary src, 1: i32 h, 2: i32 stride, 3: byte dst),
	void ff_avg_dirac_pixels32_sse2 (0: binary src, 1: i32 h, 2: i32 stride, 3: byte dst),
	void ff_put_dirac_pixels32_sse2 (0: binary src, 1: i32 h, 2: i32 stride, 3: byte dst),
	binary ff_dnxhdenc_init_x86 (0: DNXHDEncContext ctx),
	binary ff_exrdsp_init_x86 (0: ExrDSPContext dsp),
	void ff_fdct_mmxext (0: i16 block),
	void ff_fdct_mmx (0: i16 block),
	void ff_fdct_sse2 (0: i16 block),
	binary ff_fdctdsp_init_x86 (0: AVCodecContext avctx, 1: FDCTDSPContext c, 2: binary high_bit_depth),
	binary ff_fft_init_x86 (0: FFTContext s),
	binary ff_flacdsp_init_x86 (0: binary fmt, 1: FLACDSPContext c, 2: i32 bps, 3: i32 channels),
	binary ff_fmt_convert_init_x86 (0: AVCodecContext avctx, 1: FmtConvertContext c),
	binary ff_g722dsp_init_x86 (0: G722DSPContext dsp),
	binary ff_h263dsp_init_x86 (0: H263DSPContext c),
	binary QPEL_H264 (),
	binary IDCT_FUNCS (),
	binary ff_hpeldsp_init_x86 (0: HpelDSPContext c, 1: i32 flags),
	binary ff_hpeldsp_vp3_init_x86 (0: HpelDSPContext c, 1: i32 cpu_flags, 2: i32 flags),
	binary ff_huffyuvdsp_init_x86 (0: binary pix_fmt, 1: HuffYUVDSPContext c),
	binary ff_huffyuvencdsp_init_x86 (0: AVCodecContext avctx, 1: HuffYUVEncDSPContext c),
	binary ff_init_scantable_permutation_x86 (0: binary perm_type, 1: byte idct_permutation),
	binary ff_idctdsp_init_x86 (0: AVCodecContext avctx, 1: IDCTDSPContext c, 2: binary high_bit_depth),
	binary ff_jpeg2000dsp_init_x86 (0: Jpeg2000DSPContext c),
	binary ff_llauddsp_init_x86 (0: LLAudDSPContext c),
	void ff_llviddsp_init_x86 (0: LLVidDSPContext c),
	binary ff_llvidencdsp_init_x86 (0: LLVidEncDSPContext c),
	binary ff_lpc_init_x86 (0: LPCContext c),
	binary MUL64 (0: i32 a, 1: i32 b),
	binary MULH (0: i32 a, 1: i32 b),
	binary MULL (0: i32 a, 1: i32 b, 2: binary shift),
	binary mid_pred (0: i32 a, 1: i32 b, 2: i32 c),
	i32 NEG_SSR32 (0: i32 a, 1: byte s),
	i32 NEG_USR32 (0: byte s, 1: i32 a),
	binary ff_mdct15_init_x86 (0: MDCT15Context s),
	binary PIX_SAD (),
	i32 sum_mmx (),
	void sad8_1_mmx (0: i32 h, 1: binary stride, 2: byte blk1, 3: byte blk2),
	void sad8_2_mmx (0: i32 h, 1: binary stride, 2: byte blk1a, 3: byte blk1b, 4: byte blk2),
	void sad8_4_mmx (0: i32 h, 1: binary stride, 2: byte blk1, 3: byte blk2),
	void sad8_x2a_mmx (0: i32 h, 1: binary stride, 2: byte blk1, 3: byte blk2),
	void sad8_y2a_mmx (0: i32 h, 1: binary stride, 2: byte blk1, 3: byte blk2),
	binary ff_mlpdsp_init_x86 (0: MLPDSPContext c),
	binary DECL_IMDCT_BLOCKS (),
	binary ff_mpv_common_init_x86 (0: MpegEncContext s),
	binary ff_mpegvideodsp_init_x86 (0: MpegVideoDSPContext c),
	binary ff_dct_encode_init_x86 (0: MpegEncContext s),
	binary ff_mpegvideoencdsp_init_x86 (0: AVCodecContext avctx, 1: MpegvideoEncDSPContext c),
	binary ff_opus_dsp_init_x86 (0: CeltPVQ s),
	binary ff_pixblockdsp_init_x86 (0: AVCodecContext avctx, 1: PixblockDSPContext c, 2: binary high_bit_depth),
	binary ff_pngdsp_init_x86 (0: PNGDSPContext dsp),
	binary ff_proresdsp_init_x86 (0: AVCodecContext avctx, 1: ProresDSPContext dsp),
	binary QPEL_OP (),
	binary DEF (),
	binary ff_rv34dsp_init_x86 (0: RV34DSPContext c),
	binary DECLARE_WEIGHT (),
	binary ff_sbcdsp_init_x86 (0: SBCDSPContext s),
	binary ff_sbrdsp_init_x86 (0: SBRDSPContext s),
	binary ff_dwt_init_x86 (0: SnowDWTContext c),
	binary ff_svq1enc_init_x86 (0: SVQ1EncContext c),
	binary SYNTH_FILTER_FUNC (),
	binary ff_takdsp_init_x86 (0: TAKDSPContext c),
	binary ff_ttadsp_init_x86 (0: TTADSPContext c),
	binary ff_ttaencdsp_init_x86 (0: TTAEncDSPContext c),
	binary ff_utvideodsp_init_x86 (0: UTVideoDSPContext c),
	binary ff_v210_x86_init (0: V210DecContext s),
	binary ff_v210enc_init_x86 (0: V210EncContext s),
	binary ff_vc1dsp_init_x86 (0: VC1DSPContext dsp),
	binary VC1_MSPEL_MC (),
	binary ff_vc1dsp_init_mmxext (0: VC1DSPContext dsp),
	binary ff_videodsp_init_x86 (0: VideoDSPContext ctx, 1: i32 bpc),
	binary ff_vorbisdsp_init_x86 (0: VorbisDSPContext dsp),
	binary ff_vp3dsp_init_x86 (0: VP3DSPContext c, 1: i32 flags),
	binary vp56_rac_get_prob (0: VP56RangeCoder c, 1: byte prob),
	binary ff_vp6dsp_init_x86 (0: VP56DSPContext c),
	binary ff_vp8dsp_init_x86 (0: VP8DSPContext c),
	binary DECLARE_LOOP_FILTER (),
	binary ff_vp9dsp_init_x86 (0: VP9DSPContext dsp, 1: i32 bitexact, 2: i32 bpp),
	binary ff_vp9dsp_init_16bpp_x86 (0: VP9DSPContext dsp),
	binary INIT_FUNC (0: VP9DSPContext dsp, 1: i32 bitexact),
	binary wrap (0: binary avpkt, 1: binary avpkt, 2: binary avpkt, 3: binary got_packet_ptr, 4: binary sub, 5: binary got_packet_ptr, 6: binary options, 7: binary frame, 8: binary avpkt, 9: binary frame, 10: binary avpkt),
	binary ff_xvid_idct_init_x86 (0: AVCodecContext avctx, 1: IDCTDSPContext c, 2: binary high_bit_depth),
	binary mul (0: binary a, 1: binary b),
	binary pow4 (0: binary a),
	binary pow5 (0: binary a),
	void xan_wc3_copy_pixel_run (0: AVFrame frame, 1: XanContext s, 2: i32 motion_x, 3: i32 motion_y, 4: i32 pixel_count, 5: i32 x, 6: i32 y),
	void xan_wc3_output_pixel_run (0: AVFrame frame, 1: XanContext s, 2: binary pixel_buffer, 3: i32 pixel_count, 4: i32 x, 5: i32 y),
	void ff_big_add (0: BigInt b, 1: byte a),
	void ff_big_div (0: BigInt b, 1: byte r, 2: byte a),
	void ff_big_mul (0: BigInt b, 1: byte a),
	void ff_xface_generate_face (0: byte src, 1: byte dst),
	i32 pq_push (0: ProbRangesQueue pq, 1: binary p),
	i32 avpriv_split_xiph_headers (0: binary header_start, 1: binary extradata, 2: binary header_len, 3: i32 extradata_size, 4: i32 first_header_size),
	binary ff_xvid_idct_init (0: AVCodecContext avctx, 1: IDCTDSPContext c),
	void ff_xvid_idct (0: i16 in),
	i32 block_cmp (0: ZmbvEncContext c, 1: i32 xored, 2: i32 bh, 3: i32 bw, 4: i32 stride2, 5: i32 stride, 6: byte src2, 7: byte src),
	void avdevice_register_all (),
	binary ff_alsa_close (0: AVFormatContext s1),
	binary ff_alsa_open (0: binary codec_id, 1: AVFormatContext ctx, 2: i32 channels, 3: binary mode, 4: binary sample_rate),
	i32 ff_alsa_extend_reorder_buf (0: AlsaData s, 1: i32 min_size),
	i32 ff_alsa_get_device_list (0: AVDeviceInfoList device_list, 1: binary stream_type),
	i32 ff_alsa_xrun_recover (0: AVFormatContext s1, 1: i32 err),
	AVInputFormat av_input_audio_device_next (0: AVInputFormat d),
	AVInputFormat av_input_video_device_next (0: AVInputFormat d),
	AVOutputFormat av_output_audio_device_next (0: AVOutputFormat d),
	AVOutputFormat av_output_video_device_next (0: AVOutputFormat d),
	binary avdevice_configuration (),
	binary avdevice_license (),
	i32 avdevice_app_to_dev_control_message (0: binary type, 1: binary s, 2: i64 data_size, 3: void data),
	i32 avdevice_capabilities_create (0: AVDeviceCapabilitiesQuery caps, 1: AVDictionary device_options, 2: AVFormatContext s),
	i32 avdevice_dev_to_app_control_message (0: binary type, 1: binary s, 2: i64 data_size, 3: void data),
	i32 avdevice_list_devices (0: AVDeviceInfoList device_list, 1: AVFormatContext s),
	i32 avdevice_list_input_sources (0: AVDeviceInfoList device_list, 1: AVDictionary device_options, 2: AVInputFormat device, 3: binary device_name),
	i32 avdevice_list_output_sinks (0: AVDeviceInfoList device_list, 1: AVDictionary device_options, 2: AVOutputFormat device, 3: binary device_name),
	binary avdevice_version (),
	void avdevice_capabilities_free (0: AVDeviceCapabilitiesQuery caps, 1: AVFormatContext s),
	void avdevice_free_list_devices (0: AVDeviceInfoList device_list),
	binary add_audio_device (),
	binary add_video_device (),
	binary avf_close (),
	binary avf_read_header (),
	binary avf_read_packet (),
	binary configure_video_device (),
	binary copy_cvpixelbuffer (),
	binary destroy_context (),
	binary get_audio_config (),
	binary get_video_config (),
	binary lock_frames (),
	binary parse_device_name (),
	binary unlock_frames (),
	DECKLINK_BOOL field_order_eq (0: binary field_order, 1: binary bmd_field_order),
	binary decklink_create_iterator (0: AVFormatContext avctx),
	i32 decklink_get_attr_string (0: binary cfg_id, 1: binary dl, 2: binary s),
	i32 decklink_select_input (0: AVFormatContext avctx, 1: binary cfg_id),
	i32 ff_decklink_init_device (0: AVFormatContext avctx, 1: binary name),
	i32 ff_decklink_list_devices (0: binary device_list, 1: AVFormatContext avctx, 2: i32 show_inputs, 3: i32 show_outputs),
	i32 ff_decklink_list_formats (0: AVFormatContext avctx, 1: decklink_direction_t direction),
	i32 ff_decklink_set_configs (0: AVFormatContext avctx, 1: decklink_direction_t direction),
	i32 ff_decklink_set_format (0: binary field_order, 1: AVFormatContext avctx, 2: decklink_direction_t direction, 3: i32 height, 4: i32 num, 5: i32 tb_den, 6: i32 tb_num, 7: i32 width),
	void ff_decklink_cleanup (0: AVFormatContext avctx),
	void ff_decklink_list_devices_legacy (0: AVFormatContext avctx, 1: i32 show_inputs, 2: i32 show_outputs),
	byte dup_cfstring_to_utf8 (0: binary w),
	byte dup_wchar_to_utf8 (0: binary w),
	binary decklink_allocator (),
	binary decklink_input_callback (),
	binary ~decklink_allocator (),
	binary ~decklink_input_callback (),
	binary AllocateBuffer (),
	binary Commit (),
	binary Decommit (),
	binary QueryInterface (),
	binary QueryInterface (),
	binary ReleaseBuffer (),
	HRESULT VideoInputFormatChanged (),
	HRESULT VideoInputFrameArrived (),
	binary AddRef (),
	binary Release (),
	ULONG AddRef (),
	ULONG Release (),
	binary ff_decklink_read_close (0: AVFormatContext avctx),
	binary ff_decklink_read_header (0: AVFormatContext avctx),
	i64 get_pkt_pts (0: AVRational time_base, 1: DecklinkPtsSource pts_src, 2: binary audioFrame, 3: binary videoFrame, 4: i64 initial_pts, 5: i64 abs_wallclock, 6: i64 wallclock, 7: i32 copyts),
	i32 avpacket_queue_get (0: AVPacket pkt, 1: AVPacketQueue q, 2: i32 block),
	i32 avpacket_queue_put (0: AVPacket pkt, 1: AVPacketQueue q),
	i32 check_vanc_parity_checksum (0: i32 len, 1: i16 buf, 2: i16 checksum),
	i32 decklink_autodetect (0: binary cctx),
	i32 ff_decklink_list_input_devices (0: binary device_list, 1: AVFormatContext avctx),
	i32 ff_decklink_read_packet (0: AVFormatContext avctx, 1: AVPacket pkt),
	i32 get_vanc_line_idx (0: binary mode),
	i32 linemask_matches (0: i64 mask, 1: i32 line),
	byte get_metadata (0: AVFormatContext avctx, 1: AVPacket pkt, 2: binary tgt_size, 3: binary width, 4: i16 buf, 5: byte tgt),
	byte teletext_data_unit_from_ancillary_packet (0: i64 wanted_lines, 1: i32 allow_multipacket, 2: i16 pend, 3: i16 py, 4: byte tgt),
	byte teletext_data_unit_from_op47_data (0: i64 wanted_lines, 1: i16 pend, 2: i16 py, 3: byte tgt),
	byte teletext_data_unit_from_op47_vbi_packet (0: i32 line, 1: i16 py, 2: byte tgt),
	byte teletext_data_unit_from_vbi_data_10bit (0: i32 line, 1: byte src, 2: byte tgt),
	byte teletext_data_unit_from_vbi_data (0: i32 line, 1: byte src, 2: byte tgt, 3: binary fmt),
	byte vanc_to_cc (0: AVFormatContext avctx, 1: binary words, 2: i16 buf, 3: binary cc_count),
	byte calc_parity_and_line_offset (0: i32 line),
	binary avpacket_queue_size (0: AVPacketQueue q),
	void avpacket_queue_end (0: AVPacketQueue q),
	void avpacket_queue_flush (0: AVPacketQueue q),
	void avpacket_queue_init (0: AVFormatContext avctx, 1: AVPacketQueue q),
	void clear_parity_bits (0: i32 len, 1: i16 buf),
	void decklink_object_free (0: byte data, 1: void opaque),
	void extract_luma_from_v210 (0: binary src, 1: i32 width, 2: i16 dst),
	void fill_data_unit_head (0: i32 line, 1: byte tgt),
	void unpack_v210 (0: binary src, 1: i32 width, 2: i16 dst),
	binary decklink_frame (),
	binary GetFlags (),
	binary GetPixelFormat (),
	binary GetAncillaryData (),
	binary GetBytes (),
	binary GetTimecode (),
	binary QueryInterface (),
	binary QueryInterface (),
	binary ScheduledFrameCompleted (),
	binary ScheduledPlaybackHasStopped (),
	binary SetAncillaryData (),
	binary AddRef (),
	binary AddRef (),
	binary Release (),
	binary Release (),
	binary ff_decklink_write_header (0: AVFormatContext avctx),
	binary ff_decklink_write_trailer (0: AVFormatContext avctx),
	i32 decklink_construct_vanc (0: binary ctx, 1: AVFormatContext avctx, 2: AVPacket pkt, 3: binary frame),
	i32 decklink_setup_audio (0: AVFormatContext avctx, 1: AVStream st),
	i32 decklink_setup_video (0: AVFormatContext avctx, 1: AVStream st),
	i32 decklink_write_audio_packet (0: AVFormatContext avctx, 1: AVPacket pkt),
	i32 decklink_write_video_packet (0: AVFormatContext avctx, 1: AVPacket pkt),
	i32 ff_decklink_list_output_devices (0: binary device_list, 1: AVFormatContext avctx),
	i32 ff_decklink_write_packet (0: AVFormatContext avctx, 1: AVPacket pkt),
	binary GetHeight (),
	binary GetRowBytes (),
	binary GetWidth (),
	void construct_cc (0: binary ctx, 1: binary vanc_lines, 2: AVFormatContext avctx, 3: AVPacket pkt),
	void dshow_show_filter_properties (0: AVFormatContext avctx, 1: binary device_filter),
	void nothing (0: void foo),
	i32 ff_copy_dshow_media_type (0: binary dst, 1: binary src),
	void ff_printGUID (0: binary g),
	void ff_print_AM_MEDIA_TYPE (0: binary type),
	void ff_print_AUDIO_STREAM_CONFIG_CAPS (0: binary caps),
	void ff_print_VIDEO_STREAM_CONFIG_CAPS (0: binary caps),
	HRESULT dshow_try_setup_crossbar_options (0: binary devtype, 1: AVFormatContext avctx, 2: binary device_filter, 3: binary graph_builder2),
	binary libAVEnumMediaTypes_Clone (0: libAVEnumMediaTypes enums, 1: libAVEnumMediaTypes this),
	binary libAVEnumMediaTypes_Reset (0: libAVEnumMediaTypes this),
	binary libAVEnumMediaTypes_Skip (0: libAVEnumMediaTypes this, 1: i32 n),
	binary libAVEnumPins_Clone (0: libAVEnumPins pins, 1: libAVEnumPins this),
	binary libAVEnumPins_Reset (0: libAVEnumPins this),
	binary libAVEnumPins_Skip (0: libAVEnumPins this, 1: i32 n),
	binary libAVFilter_EnumPins (0: binary enumpin, 1: libAVFilter this),
	binary libAVFilter_FindPin (0: binary pin, 1: binary id, 2: libAVFilter this),
	binary libAVFilter_GetState (0: DWORD ms, 1: binary state, 2: libAVFilter this),
	binary libAVFilter_GetSyncSource (0: binary clock, 1: libAVFilter this),
	binary libAVFilter_JoinFilterGraph (0: binary graph, 1: binary name, 2: libAVFilter this),
	binary libAVFilter_Pause (0: libAVFilter this),
	binary libAVFilter_QueryFilterInfo (0: binary info, 1: libAVFilter this),
	binary libAVFilter_QueryVendorInfo (0: libAVFilter this, 1: binary info),
	binary libAVFilter_Run (0: binary start, 1: libAVFilter this),
	binary libAVFilter_SetSyncSource (0: binary clock, 1: libAVFilter this),
	binary libAVFilter_Stop (0: libAVFilter this),
	binary DECLARE_CREATE (0: libAVFilter filter, 1: binary filter),
	binary libAVMemInputPin_GetAllocatorRequirements (0: binary props, 1: libAVMemInputPin this),
	binary libAVMemInputPin_GetAllocator (0: binary alloc, 1: libAVMemInputPin this),
	binary libAVMemInputPin_NotifyAllocator (0: BOOL rdwr, 1: binary alloc, 2: libAVMemInputPin this),
	binary libAVMemInputPin_ReceiveCanBlock (0: libAVMemInputPin this),
	binary libAVMemInputPin_ReceiveMultiple (0: binary samples, 1: libAVMemInputPin this, 2: i32 nproc, 3: i32 n),
	binary libAVMemInputPin_Receive (0: binary sample, 1: libAVMemInputPin this),
	binary libAVPin_BeginFlush (0: libAVPin this),
	binary libAVPin_ConnectedTo (0: binary pin, 1: libAVPin this),
	binary libAVPin_ConnectionMediaType (0: binary type, 1: libAVPin this),
	binary libAVPin_Disconnect (0: libAVPin this),
	binary libAVPin_EndFlush (0: libAVPin this),
	binary libAVPin_EndOfStream (0: libAVPin this),
	binary libAVPin_EnumMediaTypes (0: binary enumtypes, 1: libAVPin this),
	binary libAVPin_NewSegment (0: binary start, 1: binary stop, 2: double rate, 3: libAVPin this),
	binary libAVPin_QueryAccept (0: binary type, 1: libAVPin this),
	binary libAVPin_QueryDirection (0: binary dir, 1: libAVPin this),
	binary libAVPin_QueryId (0: libAVPin this, 1: binary id),
	binary libAVPin_QueryInternalConnections (0: binary pin, 1: libAVPin this, 2: i32 npin),
	binary libAVPin_QueryPinInfo (0: binary info, 1: libAVPin this),
	binary libAVPin_ReceiveConnection (0: binary pin, 1: binary type, 2: libAVPin this),
	binary libAVMemInputPin_AddRef (0: libAVMemInputPin this),
	binary libAVMemInputPin_Release (0: libAVMemInputPin this),
	void libAVMemInputPin_Destroy (0: libAVMemInputPin this),
	binary ff_get_pixfmt_from_fb_varinfo (0: binary varinfo),
	binary ff_fbdev_default_device (),
	i32 ff_fbdev_get_device_list (0: AVDeviceInfoList device_list),
	i32 dc1394_read_common (0: AVFormatContext c, 1: binary select_fmt, 2: binary select_fps),
	binary get_al_format_info (0: binary al_fmt),
	i32 al_get_error (0: binary device, 1: binary error_msg_ret),
	void print_al_capture_devices (0: void log_ctx),
	i32 ff_oss_audio_close (0: OSSAudioData s),
	i32 ff_oss_audio_open (0: AVFormatContext s1, 1: binary audio_device, 2: i32 is_output),
	i32 ff_pulse_audio_connect_context (0: binary description, 1: binary server, 2: binary pa_ctx, 3: binary pa_ml),
	i32 ff_pulse_audio_get_devices (0: AVDeviceInfoList devices, 1: binary server, 2: i32 output),
	binary ff_codec_id_to_pulse_format (0: binary codec_id),
	void ff_pulse_audio_disconnect_context (0: binary pa_ctx, 1: binary pa_ml),
	binary ff_sndio_open (0: AVFormatContext s1, 1: binary audio_device, 2: i32 is_output),
	i32 ff_sndio_close (0: SndioData s),
	void movecb (0: i32 delta, 1: void addr),
	i32 main (),
	TimeFilter ff_timefilter_new (0: double bandwidth, 1: double period, 2: double time_base),
	double ff_timefilter_eval (0: TimeFilter self, 1: double delta),
	double ff_timefilter_update (0: TimeFilter self, 1: double period, 2: double system_time),
	void ff_timefilter_destroy (0: TimeFilter self),
	void ff_timefilter_reset (0: TimeFilter self),
	i32 ff_alloc_input_device_context (0: AVFormatContext avctx, 1: AVInputFormat iformat, 2: binary format),
	binary ff_fmt_v4l2codec (0: i32 v4l2_fmt),
	binary ff_fmt_v4l2ff (0: binary codec_id, 1: i32 v4l2_fmt),
	i32 ff_fmt_ff2v4l (0: binary codec_id, 1: binary pix_fmt),
	binary ff_nlmeans_init_aarch64 (0: NLMeansDSPContext dsp),
	double factor (0: double aa1, 1: double aa, 2: double k, 3: double y),
	double biquad (0: BiquadD2 bq, 1: double in),
	void set_highshelf_rbj (0: BiquadD2 bq, 1: double freq, 2: double peak, 3: double q, 4: double sr),
	void set_lp_rbj (0: BiquadD2 bq, 1: double fc, 2: double gain, 3: double q, 4: double sr),
	double getimag (0: double ch, 1: double x, 2: void priv),
	double getreal (0: double ch, 1: double x, 2: void priv),
	void ff_afir_init (0: AudioFIRDSPContext dsp),
	void copy_samples (0: binary in, 1: i32 route, 2: i32 bps, 3: i32 nb_inputs, 4: i32 ns, 5: binary ins, 6: byte outs),
	double hz_2_rad (0: double fs, 1: double x),
	double section_process (0: FoSection S, 1: double in),
	void ff_anlmdn_init (0: AudioNLMDNDSPContext dsp),
	void update_stat (0: AudioStatsContext s, 1: ChannelStats p, 2: double d, 3: double nd, 4: i64 i),
	AudioFragment yae_curr_frag (0: ATempoContext atempo),
	AudioFragment yae_prev_frag (0: ATempoContext atempo),
	double bound (0: binary threshold, 1: binary val),
	double fade (0: binary fade_factors, 1: double next, 2: double prev, 3: i32 pos),
	double pow_2 (0: binary value),
	double update_value (0: double aggressiveness, 1: double new, 2: double old),
	i32 frame_size (0: i32 frame_len_msec, 1: i32 sample_rate),
	i16 scalarproduct (0: binary endin, 1: binary in, 2: i16 out),
	i32 frame_size (0: i32 frame_len_msec, 1: i32 sample_rate),
	void get_lfe (0: double lfe_mag, 1: double mag_total, 2: double highcut, 3: double lowcut, 4: i32 n, 5: i32 output_lfe),
	void scale_samples_s16_small (0: binary src, 1: i32 nb_samples, 2: i32 volume, 3: byte dst),
	void scale_samples_s16 (0: binary src, 1: i32 nb_samples, 2: i32 volume, 3: byte dst),
	void scale_samples_s32 (0: binary src, 1: i32 nb_samples, 2: i32 volume, 3: byte dst),
	void scale_samples_u8_small (0: binary src, 1: i32 nb_samples, 2: i32 volume, 3: byte dst),
	void scale_samples_u8 (0: binary src, 1: i32 nb_samples, 2: i32 volume, 3: byte dst),
	double logdb (0: i64 v),
	binary av_filter_iterate (0: void opaque),
	binary avfilter_get_by_name (0: binary name),
	binary avfilter_next (0: binary prev),
	i32 avfilter_register (0: AVFilter filter),
	void avfilter_register_all (),
	AVFrame ff_default_get_audio_buffer (0: AVFilterLink link, 1: i32 nb_samples),
	AVFrame ff_get_audio_buffer (0: AVFilterLink link, 1: i32 nb_samples),
	AVFrame ff_null_get_audio_buffer (0: AVFilterLink link, 1: i32 nb_samples),
	i32 get_x (0: double phase, 1: i32 w),
	void draw_dot (0: AVFrame out, 1: i32 x, 2: i32 y, 3: binary fg),
	void plot_freq (0: AVFilterLink outlink, 1: AVFrame out, 2: ShowFreqsContext s, 3: double a, 4: i32 prev_y, 5: i32 ch, 6: i32 f, 7: binary fg),
	i32 calc_max_draw (0: AVFilterLink outlink, 1: ShowVolumeContext s, 2: double max),
	void calc_persistent_max (0: ShowVolumeContext s, 1: double max, 2: i32 channel),
	void draw_max_line (0: ShowVolumeContext s, 1: i32 channel, 2: i32 max_draw),
	i32 push_frame (0: AVFilterLink outlink),
	binary avfilter_pad_get_type (0: binary pads, 1: i32 pad_idx),
	AVFilterContext ff_filter_alloc (0: binary filter, 1: binary inst_name),
	AVFrame ff_inlink_peek_frame (0: AVFilterLink link, 1: i64 idx),
	binary avfilter_get_class (),
	binary avfilter_configuration (),
	binary avfilter_license (),
	binary avfilter_pad_get_name (0: binary pads, 1: i32 pad_idx),
	i32 avfilter_config_links (0: AVFilterContext filter),
	i32 avfilter_init_dict (0: AVDictionary options, 1: AVFilterContext ctx),
	i32 avfilter_init_str (0: AVFilterContext filter, 1: binary args),
	i32 avfilter_insert_filter (0: AVFilterContext filt, 1: AVFilterLink link, 2: binary filt_dstpad_idx, 3: binary filt_srcpad_idx),
	i32 avfilter_link_get_channels (0: AVFilterLink link),
	i32 avfilter_link (0: AVFilterContext dst, 1: AVFilterContext src, 2: binary dstpad, 3: binary srcpad),
	i32 avfilter_pad_count (0: binary pads),
	i32 avfilter_process_command (0: AVFilterContext filter, 1: byte res, 2: binary arg, 3: binary cmd, 4: i32 flags, 5: i32 res_len),
	i32 ff_filter_activate (0: AVFilterContext filter),
	i32 ff_filter_frame (0: AVFilterLink link, 1: AVFrame frame),
	i32 ff_filter_get_nb_threads (0: AVFilterContext ctx),
	i32 ff_filter_init_hw_frames (0: AVFilterContext avctx, 1: AVFilterLink link, 2: i32 default_pool_size),
	i32 ff_inlink_acknowledge_status (0: AVFilterLink link, 1: i32 rstatus, 2: i64 rpts),
	i32 ff_inlink_check_available_frame (0: AVFilterLink link),
	i32 ff_inlink_check_available_samples (0: AVFilterLink link, 1: binary min),
	i32 ff_inlink_consume_frame (0: AVFilterLink link, 1: AVFrame rframe),
	i32 ff_inlink_consume_samples (0: AVFilterLink link, 1: AVFrame rframe, 2: binary max, 3: binary min),
	i32 ff_inlink_evaluate_timeline_at_frame (0: AVFilterLink link, 1: binary frame),
	i32 ff_inlink_make_frame_writable (0: AVFilterLink link, 1: AVFrame rframe),
	i32 ff_inlink_process_commands (0: AVFilterLink link, 1: binary frame),
	i32 ff_inlink_queued_samples (0: AVFilterLink link),
	i32 ff_insert_pad (0: AVFilterLink links, 1: AVFilterPad pads, 2: AVFilterPad newpad, 3: i64 padidx_off, 4: binary count, 5: binary idx),
	i32 ff_outlink_get_status (0: AVFilterLink link),
	i32 ff_poll_frame (0: AVFilterLink link),
	i32 ff_request_frame (0: AVFilterLink link),
	i64 ff_inlink_queued_frames (0: AVFilterLink link),
	binary avfilter_version (),
	void avfilter_free (0: AVFilterContext filter),
	void avfilter_link_free (0: AVFilterLink link),
	void avfilter_link_set_closed (0: AVFilterLink link, 1: i32 closed),
	void ff_avfilter_link_set_in_status (0: AVFilterLink link, 1: i64 pts, 2: i32 status),
	void ff_avfilter_link_set_out_status (0: AVFilterLink link, 1: i64 pts, 2: i32 status),
	void ff_command_queue_pop (0: AVFilterContext filter),
	void ff_filter_set_ready (0: AVFilterContext filter, 1: binary priority),
	void ff_inlink_request_frame (0: AVFilterLink link),
	void ff_inlink_set_status (0: AVFilterLink link, 1: i32 status),
	void ff_tlog_link (0: AVFilterLink link, 1: i32 end, 2: void ctx),
	void ff_tlog_ref (0: AVFrame ref, 1: i32 end, 2: void ctx),
	void ff_update_link_current_pts (0: AVFilterLink link, 1: i64 pts),
	AVFilterContext avfilter_graph_alloc_filter (0: AVFilterGraph graph, 1: binary filter, 2: binary name),
	AVFilterContext avfilter_graph_get_filter (0: AVFilterGraph graph, 1: binary name),
	AVFilterGraph avfilter_graph_alloc (),
	i32 avfilter_graph_config (0: AVFilterGraph graphctx, 1: void log_ctx),
	i32 avfilter_graph_create_filter (0: AVFilterContext filt_ctx, 1: AVFilterGraph graph_ctx, 2: binary filt, 3: binary args, 4: binary name, 5: void opaque),
	i32 avfilter_graph_queue_command (0: AVFilterGraph graph, 1: binary arg, 2: binary command, 3: binary target, 4: double ts, 5: i32 flags),
	i32 avfilter_graph_request_oldest (0: AVFilterGraph graph),
	i32 avfilter_graph_send_command (0: AVFilterGraph graph, 1: byte res, 2: binary arg, 3: binary cmd, 4: binary target, 5: i32 flags, 6: i32 res_len),
	i32 ff_filter_graph_run_once (0: AVFilterGraph graph),
	i32 ff_graph_thread_init (0: AVFilterGraph graph),
	void avfilter_graph_free (0: AVFilterGraph graph),
	void avfilter_graph_set_auto_convert (0: AVFilterGraph graph, 1: binary flags),
	void ff_avfilter_graph_update_heap (0: AVFilterGraph graph, 1: AVFilterLink link),
	void ff_filter_graph_remove_filter (0: AVFilterContext filter, 1: AVFilterGraph graph),
	void ff_graph_thread_free (0: AVFilterGraph graph),
	i32 ff_calculate_bounding_box (0: FFBoundingBox bbox, 1: binary data, 2: i32 h, 3: i32 linesize, 4: i32 min_val, 5: i32 w),
	i32 ff_boxblur_eval_filter_params (0: AVFilterLink inlink, 1: FilterParam alpha_param, 2: FilterParam chroma_param, 3: FilterParam luma_param),
	AVFrame ff_bufqueue_get (0: binary queue),
	AVFrame ff_bufqueue_peek (0: binary queue, 1: binary index),
	i32 ff_bufqueue_is_full (0: binary queue),
	void ff_bufqueue_add (0: binary queue, 1: AVFrame buf, 2: void log),
	void ff_bufqueue_discard_all (0: binary queue),
	AVABufferSinkParams av_abuffersink_params_alloc (),
	AVBufferSinkParams av_buffersink_params_alloc (),
	binary av_buffersink_get_frame_flags (0: AVFilterContext ctx, 1: AVFrame frame, 2: i32 flags),
	binary av_buffersink_get_frame (0: AVFilterContext ctx, 1: AVFrame frame),
	binary av_buffersink_get_samples (0: AVFilterContext ctx, 1: AVFrame frame, 2: i32 nb_samples),
	void av_buffersink_set_frame_size (0: AVFilterContext ctx, 1: binary frame_size),
	AVBufferSrcParameters av_buffersrc_parameters_alloc (),
	binary av_buffersrc_add_frame_flags (0: AVFilterContext ctx, 1: AVFrame frame, 2: i32 flags),
	binary av_buffersrc_add_frame (0: AVFilterContext ctx, 1: AVFrame frame),
	binary av_buffersrc_write_frame (0: AVFilterContext ctx, 1: binary frame),
	i32 av_buffersrc_close (0: AVFilterContext ctx, 1: i64 pts, 2: binary flags),
	i32 av_buffersrc_parameters_set (0: AVBufferSrcParameters param, 1: AVFilterContext ctx),
	binary av_buffersrc_get_nb_failed_requests (0: AVFilterContext buffer_src),
	double ff_determine_signal_peak (0: AVFrame in),
	void ff_fill_rgb2xyz_table (0: binary coeffs, 1: binary wp),
	void ff_matrix_invert_3x3 (),
	void ff_matrix_mul_3x3 (),
	void ff_update_hdr_metadata (0: AVFrame in, 1: double peak),
	void ff_colorspacedsp_init (0: ColorSpaceDSPContext dsp),
	DNNModel ff_dnn_load_model_native (0: binary model_filename),
	DNNReturnType ff_dnn_execute_model_native (0: binary model),
	void ff_dnn_free_model_native (0: DNNModel model),
	DNNModel ff_dnn_load_model_tf (0: binary model_filename),
	DNNReturnType ff_dnn_execute_model_tf (0: binary model),
	void ff_dnn_free_model_tf (0: DNNModel model),
	DNNModule ff_get_dnn_module (0: DNNBackendType backend_type),
	AVFilterFormats ff_draw_supported_pixel_formats (0: binary flags),
	i32 ff_draw_init (0: binary format, 1: FFDrawContext draw, 2: binary flags),
	i32 ff_draw_round_to_sub (0: FFDrawContext draw, 1: i32 round_dir, 2: i32 sub_dir, 3: i32 value),
	i32 ff_fill_line_with_color (0: binary pix_fmt, 1: i32 is_packed_rgba, 2: binary pixel_step, 3: i32 w, 4: binary line, 5: binary dst_color, 6: binary rgba_color, 7: binary rgba_map_ptr),
	i32 ff_fill_rgba_map (0: binary pix_fmt, 1: byte rgba_map),
	void ff_blend_mask (0: FFDrawColor color, 1: FFDrawContext draw, 2: binary mask, 3: binary dst_linesize, 4: i32 dst_h, 5: i32 dst_w, 6: i32 l2depth, 7: i32 mask_h, 8: i32 mask_linesize, 9: i32 mask_w, 10: i32 x0, 11: i32 y0, 12: binary dst, 13: binary endianness),
	void ff_blend_rectangle (0: FFDrawColor color, 1: FFDrawContext draw, 2: binary dst_linesize, 3: i32 dst_h, 4: i32 dst_w, 5: i32 h, 6: i32 w, 7: i32 x0, 8: i32 y0, 9: binary dst),
	void ff_copy_rectangle2 (0: FFDrawContext draw, 1: binary dst_linesize, 2: binary src_linesize, 3: i32 dst_x, 4: i32 dst_y, 5: i32 h, 6: i32 src_x, 7: i32 src_y, 8: i32 w, 9: binary dst, 10: binary src),
	void ff_copy_rectangle (0: binary dst_linesize, 1: binary pixelstep, 2: binary src_linesize, 3: i32 hsub, 4: i32 h, 5: i32 vsub, 6: i32 w, 7: i32 x, 8: i32 y2, 9: i32 y, 10: binary dst, 11: binary src),
	void ff_draw_color (0: FFDrawColor color, 1: FFDrawContext draw, 2: binary rgba),
	void ff_draw_rectangle (0: binary dst_linesize, 1: binary pixelstep, 2: i32 hsub, 3: i32 h, 4: i32 vsub, 5: i32 w, 6: i32 x, 7: i32 y, 8: binary dst, 9: binary src),
	void ff_fill_rectangle (0: FFDrawColor color, 1: FFDrawContext draw, 2: binary dst_linesize, 3: i32 dst_x, 4: i32 dst_y, 5: i32 h, 6: i32 w, 7: binary dst),
	FFEBUR128State ff_ebur128_init (0: i32 mode, 1: binary channels, 2: i32 samplerate, 3: i32 window),
	i32 ff_ebur128_loudness_global_multiple (0: FFEBUR128State sts, 1: double out, 2: i64 size),
	i32 ff_ebur128_loudness_global (0: FFEBUR128State st, 1: double out),
	i32 ff_ebur128_loudness_momentary (0: FFEBUR128State st, 1: double out),
	i32 ff_ebur128_loudness_range_multiple (0: FFEBUR128State sts, 1: double out, 2: i64 size),
	i32 ff_ebur128_loudness_range (0: FFEBUR128State st, 1: double out),
	i32 ff_ebur128_loudness_shortterm (0: FFEBUR128State st, 1: double out),
	i32 ff_ebur128_loudness_window (0: FFEBUR128State st, 1: double out, 2: i32 window),
	i32 ff_ebur128_relative_threshold (0: FFEBUR128State st, 1: double out),
	i32 ff_ebur128_sample_peak (0: FFEBUR128State st, 1: double out, 2: binary channel_number),
	i32 ff_ebur128_set_channel (0: FFEBUR128State st, 1: i32 value, 2: binary channel_number),
	void ff_ebur128_destroy (0: FFEBUR128State st),
	void init_histogram (),
	void draw_dot (0: AVFrame out, 1: i32 fg, 2: i32 x, 3: i32 y),
	i32 lu_to_y (0: binary ebur128, 1: double v),
	i32 push_frame (0: AVFilterContext ctx),
	byte make_command_flags_str (0: binary pbuf, 1: i32 flags),
	i32 ff_outlink_frame_wanted (0: AVFilterLink link),
	void ff_outlink_set_status (0: AVFilterLink link, 1: i64 pts, 2: i32 status),
	AVFilterChannelLayouts avfilter_make_format64_list (0: binary fmts),
	AVFilterChannelLayouts ff_all_channel_counts (),
	AVFilterChannelLayouts ff_all_channel_layouts (),
	AVFilterChannelLayouts ff_make_formatu64_list (0: binary fmts),
	AVFilterChannelLayouts ff_merge_channel_layouts (0: AVFilterChannelLayouts a, 1: AVFilterChannelLayouts b),
	AVFilterFormats ff_all_formats (0: binary type),
	AVFilterFormats ff_all_samplerates (),
	AVFilterFormats ff_make_format_list (0: binary fmts),
	AVFilterFormats ff_merge_formats (0: binary type, 1: AVFilterFormats a, 2: AVFilterFormats b),
	AVFilterFormats ff_merge_samplerates (0: AVFilterFormats a, 1: AVFilterFormats b),
	AVFilterFormats ff_planar_sample_fmts (),
	i32 ff_add_channel_layout (0: AVFilterChannelLayouts l, 1: i64 channel_layout),
	i32 ff_add_format (0: AVFilterFormats avff, 1: i64 fmt),
	i32 ff_channel_layouts_ref (0: AVFilterChannelLayouts ref, 1: AVFilterChannelLayouts f),
	i32 ff_default_query_formats (0: AVFilterContext ctx),
	i32 ff_fmt_is_in (0: binary fmts, 1: i32 fmt),
	i32 ff_formats_ref (0: AVFilterFormats ref, 1: AVFilterFormats f),
	i32 ff_parse_channel_layout (0: binary arg, 1: i32 nret, 2: i64 ret, 3: void log_ctx),
	i32 ff_parse_pixel_format (0: binary ret, 1: binary arg, 2: void log_ctx),
	i32 ff_parse_sample_format (0: binary arg, 1: i32 ret, 2: void log_ctx),
	i32 ff_parse_sample_rate (0: binary arg, 1: i32 ret, 2: void log_ctx),
	i32 ff_parse_time_base (0: AVRational ret, 1: binary arg, 2: void log_ctx),
	i32 ff_query_formats_all_layouts (0: AVFilterContext ctx),
	i32 ff_set_common_channel_layouts (0: AVFilterChannelLayouts layouts, 1: AVFilterContext ctx),
	i32 ff_set_common_formats (0: AVFilterContext ctx, 1: AVFilterFormats formats),
	i32 ff_set_common_samplerates (0: AVFilterContext ctx, 1: AVFilterFormats samplerates),
	void ff_channel_layouts_changeref (0: AVFilterChannelLayouts newref, 1: AVFilterChannelLayouts oldref),
	void ff_channel_layouts_unref (0: AVFilterChannelLayouts ref),
	void ff_formats_changeref (0: AVFilterFormats newref, 1: AVFilterFormats oldref),
	void ff_formats_unref (0: AVFilterFormats ref),
	AVFrame ff_frame_pool_get (0: FFFramePool pool),
	FFFramePool ff_frame_pool_audio_init (0: binary format, 1: binary alloc, 2: i32 align, 3: i32 channels, 4: i32 nb_samples),
	FFFramePool ff_frame_pool_video_init (0: binary format, 1: binary alloc, 2: i32 align, 3: i32 height, 4: i32 width),
	i32 ff_frame_pool_get_audio_config (0: binary format, 1: FFFramePool pool, 2: i32 align, 3: i32 channels, 4: i32 nb_samples),
	i32 ff_frame_pool_get_video_config (0: binary format, 1: FFFramePool pool, 2: i32 align, 3: i32 height, 4: i32 width),
	void ff_frame_pool_uninit (0: FFFramePool pool),
	AVFrame ff_framequeue_peek (0: FFFrameQueue fq, 1: i64 idx),
	AVFrame ff_framequeue_take (0: FFFrameQueue fq),
	FFFrameBucket bucket (0: FFFrameQueue fq, 1: i64 idx),
	i32 ff_framequeue_add (0: AVFrame frame, 1: FFFrameQueue fq),
	void ff_framequeue_free (0: FFFrameQueue fq),
	void ff_framequeue_global_init (0: FFFrameQueueGlobal fqg),
	void ff_framequeue_init (0: FFFrameQueue fq, 1: FFFrameQueueGlobal fqg),
	void ff_framequeue_skip_samples (0: AVRational time_base, 1: FFFrameQueue fq, 2: i64 samples),
	binary ff_framequeue_queued_frames (0: binary fq),
	i64 ff_framequeue_queued_samples (0: binary fq),
	void ff_framequeue_update_peeked (0: FFFrameQueue fq, 1: binary idx),
	binary ff_framesync_get_class (),
	i32 ff_framesync_activate (0: FFFrameSync fs),
	i32 ff_framesync_configure (0: FFFrameSync fs),
	i32 ff_framesync_dualinput_get_writable (0: AVFrame f0, 1: AVFrame f1, 2: FFFrameSync fs),
	i32 ff_framesync_dualinput_get (0: AVFrame f0, 1: AVFrame f1, 2: FFFrameSync fs),
	i32 ff_framesync_get_frame (0: AVFrame rframe, 1: FFFrameSync fs, 2: binary get, 3: binary in),
	i32 ff_framesync_init_dualinput (0: AVFilterContext parent, 1: FFFrameSync fs),
	i32 ff_framesync_init (0: AVFilterContext parent, 1: FFFrameSync fs, 2: binary nb_in),
	void ff_framesync_preinit (0: FFFrameSync fs),
	void ff_framesync_uninit (0: FFFrameSync fs),
	void ff_generate_wave_table (0: binary sample_fmt, 1: binary wave_type, 2: double max, 3: double min, 4: double phase, 5: i32 table_size, 6: void table),
	byte avfilter_graph_dump (0: AVFilterGraph graph, 1: binary options),
	AVFilterInOut avfilter_inout_alloc (),
	i32 avfilter_graph_parse2 (0: AVFilterGraph graph, 1: AVFilterInOut inputs, 2: AVFilterInOut outputs, 3: binary filters),
	i32 avfilter_graph_parse_ptr (0: AVFilterGraph graph, 1: AVFilterInOut open_inputs_ptr, 2: AVFilterInOut open_outputs_ptr, 3: binary filters, 4: void log_ctx),
	i32 avfilter_graph_parse (0: AVFilterGraph graph, 1: AVFilterInOut open_inputs, 2: AVFilterInOut open_outputs, 3: binary filters, 4: void log_ctx),
	void avfilter_inout_free (0: AVFilterInOut inout),
	double hermite_interpolation (0: double m0, 1: double m1, 2: double p0, 3: double p1, 4: double x0, 5: double x1, 6: double x),
	i32 ff_insert_inpad (0: AVFilterContext f, 1: AVFilterPad p, 2: binary index),
	i32 ff_insert_outpad (0: AVFilterContext f, 1: AVFilterPad p, 2: binary index),
	i32 ff_norm_qscale (0: i32 qscale, 1: i32 type),
	i32 ff_load_image (0: binary pix_fmt, 1: binary filename, 2: i32 h, 3: i32 w, 4: binary linesize, 5: binary data, 6: void log_ctx),
	i32 ff_scale_image (0: binary dst_pix_fmt, 1: binary src_pix_fmt, 2: binary dst_linesize, 3: binary src_linesize, 4: i32 dst_h, 5: i32 dst_w, 6: i32 src_h, 7: i32 src_w, 8: binary dst_data, 9: binary src_data, 10: void log_ctx),
	i64 ff_me_cmp_sad (0: AVMotionEstContext me_ctx, 1: i32 x_mb, 2: i32 x_mv, 3: i32 y_mb, 4: i32 y_mv),
	i64 ff_me_search_ds (0: AVMotionEstContext me_ctx, 1: i32 mv, 2: i32 x_mb, 3: i32 y_mb),
	i64 ff_me_search_epzs (0: AVMotionEstContext me_ctx, 1: i32 mv, 2: i32 x_mb, 3: i32 y_mb),
	i64 ff_me_search_esa (0: AVMotionEstContext me_ctx, 1: i32 mv, 2: i32 x_mb, 3: i32 y_mb),
	i64 ff_me_search_fss (0: AVMotionEstContext me_ctx, 1: i32 mv, 2: i32 x_mb, 3: i32 y_mb),
	i64 ff_me_search_hexbs (0: AVMotionEstContext me_ctx, 1: i32 mv, 2: i32 x_mb, 3: i32 y_mb),
	i64 ff_me_search_ntss (0: AVMotionEstContext me_ctx, 1: i32 mv, 2: i32 x_mb, 3: i32 y_mb),
	i64 ff_me_search_tdls (0: AVMotionEstContext me_ctx, 1: i32 mv, 2: i32 x_mb, 3: i32 y_mb),
	i64 ff_me_search_tss (0: AVMotionEstContext me_ctx, 1: i32 mv, 2: i32 x_mb, 3: i32 y_mb),
	i64 ff_me_search_umh (0: AVMotionEstContext me_ctx, 1: i32 mv, 2: i32 x_mb, 3: i32 y_mb),
	void ff_me_init_context (0: AVMotionEstContext me_ctx, 1: i32 height, 2: i32 mb_size, 3: i32 search_param, 4: i32 width, 5: i32 x_max, 6: i32 x_min, 7: i32 y_max, 8: i32 y_min),
	i32 ff_opencl_filter_config_input (0: AVFilterLink inlink),
	i32 ff_opencl_filter_config_output (0: AVFilterLink outlink),
	i32 ff_opencl_filter_init (0: AVFilterContext avctx),
	i32 ff_opencl_filter_load_program_from_file (0: AVFilterContext avctx, 1: binary filename),
	i32 ff_opencl_filter_load_program (0: AVFilterContext avctx, 1: binary program_source_array, 2: i32 nb_strings),
	i32 ff_opencl_filter_query_formats (0: AVFilterContext avctx),
	i32 ff_opencl_filter_work_size_from_image (0: AVFilterContext avctx, 1: AVFrame frame, 2: i32 block_alignment, 3: i32 plane, 4: i64 work_size),
	void ff_opencl_filter_uninit (0: AVFilterContext avctx),
	i32 ff_graph_thread_init (0: AVFilterGraph graph),
	void ff_graph_thread_free (0: AVFilterGraph graph),
	i32 ff_qsvvpp_create (0: AVFilterContext avctx, 1: QSVVPPContext vpp, 2: QSVVPPParam param),
	i32 ff_qsvvpp_filter_frame (0: AVFilterLink inlink, 1: AVFrame picref, 2: QSVVPPContext s),
	i32 ff_qsvvpp_free (0: QSVVPPContext vpp),
	i32 ff_scale_eval_dimensions (0: AVFilterLink inlink, 1: AVFilterLink outlink, 2: binary h_expr, 3: binary w_expr, 4: i32 ret_h, 5: i32 ret_w, 6: void log_ctx),
	ff_scene_sad_fn ff_scene_sad_get_fn (0: i32 depth),
	void ff_scene_sad16_c (),
	void ff_scene_sad_c (),
	byte double2int64str (0: byte buf, 1: double v),
	i32 main (),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (),
	i32 main (),
	binary INTERPOLATE_METHOD (),
	i32 avfilter_transform (0: binary fill, 1: binary interpolate, 2: binary matrix, 3: binary src, 4: i32 dst_stride, 5: i32 height, 6: i32 src_stride, 7: i32 width, 8: byte dst),
	void avfilter_add_matrix (0: binary m1, 1: binary m2, 2: double result),
	void avfilter_get_matrix (0: double matrix, 1: double angle, 2: double x_shift, 3: double y_shift, 4: double zoom),
	void avfilter_mul_matrix (0: binary m1, 1: double result, 2: double scalar),
	void avfilter_sub_matrix (0: binary m1, 1: binary m2, 2: double result),
	i32 ff_vaapi_vpp_colour_standard (0: binary av_cs),
	i32 ff_vaapi_vpp_config_input (0: AVFilterLink inlink),
	i32 ff_vaapi_vpp_config_output (0: AVFilterLink outlink),
	i32 ff_vaapi_vpp_make_param_buffers (0: AVFilterContext avctx, 1: binary data, 2: i32 count, 3: i32 type, 4: i64 size),
	i32 ff_vaapi_vpp_query_formats (0: AVFilterContext avctx),
	i32 ff_vaapi_vpp_render_picture (0: AVFilterContext avctx, 1: binary params, 2: binary output_surface),
	void ff_vaapi_vpp_ctx_init (0: AVFilterContext avctx),
	void ff_vaapi_vpp_ctx_uninit (0: AVFilterContext avctx),
	void ff_vaapi_vpp_pipeline_uninit (0: AVFilterContext avctx),
	void compute_dar (0: AVRational dar, 1: AVRational sar, 2: i32 h, 3: i32 w),
	void ff_blend_init (0: FilterParams param, 1: i32 depth),
	void blur_power (0: binary src, 1: i32 dst_step, 2: i32 len, 3: i32 pixsize, 4: i32 power, 5: i32 radius, 6: i32 src_step, 7: binary temp, 8: byte dst),
	binary AVFILTER_DEFINE_CLASS (),
	binary apply_filter (),
	binary config_input (),
	binary config_output (),
	binary create_filter (),
	binary filter_frame (),
	binary init_src (),
	binary init (),
	binary list_filters (),
	binary query_formats_src (),
	binary query_formats (),
	binary request_frame (),
	binary set_option (),
	binary uninit (),
	i32 normalize_double (0: double d, 1: i32 n),
	i32 interpolate (0: binary points, 1: i32 nbits, 2: i16 y, 3: void log_ctx),
	i32 get_avg (0: i32 ref0, 1: i32 ref1, 2: i32 ref2, 3: i32 ref3),
	i32 is_newline (0: i32 c),
	i32 set_param (0: AVExpr pexpr, 1: AVFilterContext ctx, 2: binary args, 3: binary cmd, 4: binary set_fn),
	double lum (0: double x, 1: double y, 2: i32 plane, 3: void priv),
	void ff_framerate_init (0: FrameRateContext s),
	double getpix (0: double x, 1: double y, 2: i32 plane, 3: void priv),
	void ff_gradfun_blur_line_c (0: binary buf1, 1: binary src, 2: i32 src_linesize, 3: i32 width, 4: i16 buf, 5: i16 dc),
	void ff_gradfun_filter_line_c (0: binary dc, 1: binary dithers, 2: binary src, 3: i32 thresh, 4: i32 width, 5: byte dst),
	i32 ff_hflip_init (0: FlipContext s, 1: binary step, 2: i32 nb_planes),
	void compute_sin_and_cos (0: HueContext hue),
	void create_chrominance_lut (0: HueContext h, 1: binary c, 2: binary s),
	void create_luma_lut (0: HueContext h),
	i32 ff_idet_filter_line_c_16bit (0: binary a, 1: binary b, 2: binary c, 3: i32 w),
	i32 ff_idet_filter_line_c (0: binary a, 1: binary b, 2: binary c, 3: i32 w),
	binary interp_nearest (0: binary lut3d, 1: binary s),
	binary interp_tetrahedral (0: binary lut3d, 1: binary s),
	binary interp_trilinear (0: binary lut3d, 1: binary s),
	binary lerp (0: binary v0, 1: binary v1, 2: double f),
	double interp_1d_cosine (0: binary lut1d, 1: binary s, 2: i32 idx),
	double interp_1d_cubic (0: binary lut1d, 1: binary s, 2: i32 idx),
	double interp_1d_linear (0: binary lut1d, 1: binary s, 2: i32 idx),
	double interp_1d_nearest (0: binary lut1d, 1: binary s, 2: i32 idx),
	double interp_1d_spline (0: binary lut1d, 1: binary s, 2: i32 idx),
	double lerpf (0: double f, 1: double v0, 2: double v1),
	void compute_unsafe_ssd_integral_image (0: binary src, 1: i32 h, 2: i32 offx, 3: i32 offy, 4: i32 r, 5: i32 sh, 6: i32 startx, 7: i32 starty, 8: i32 sw, 9: i32 w, 10: binary dst_linesize_32, 11: binary linesize, 12: i32 dst),
	void ff_nlmeans_init (0: NLMeansDSPContext dsp),
	void ff_line_noise_avg_c (0: binary shift, 1: binary src, 2: i32 len, 3: byte dst),
	void ff_line_noise_c (0: binary noise, 1: binary src, 2: i32 len, 3: i32 shift, 4: byte dst),
	i32 normalize_xy (0: double d, 1: i32 chroma_sub),
	void alpha_composite (0: binary dst, 1: binary src, 2: i32 dst_h, 3: i32 dst_w, 4: i32 jobnr, 5: i32 nb_jobs, 6: i32 src_h, 7: i32 src_w, 8: i32 x, 9: i32 y),
	void compose2D (0: binary src_h, 1: binary src_l, 2: double dst, 3: i32 h, 4: i32 step, 5: i32 w, 6: i32 xlinesize, 7: i32 ylinesize),
	void compose (0: binary src_h, 1: binary src_l, 2: double dst, 3: i32 linesize, 4: i32 w),
	void decompose2D (0: binary src, 1: double dst_h, 2: double dst_l, 3: i32 h, 4: i32 step, 5: i32 w, 6: i32 xlinesize, 7: i32 ylinesize),
	void decompose (0: binary src, 1: double dst_h, 2: double dst_l, 3: i32 linesize, 4: i32 w),
	binary color_hash (0: i32 color),
	double get_coeff (0: double d),
	void dctA_c (0: i16 dst, 1: i32 stride, 2: byte src),
	double get_psnr (0: double mse, 1: i32 max, 2: i64 nb_frames),
	binary pow_2 (0: binary base),
	void compute_images_mse (0: PSNRContext s, 1: binary main_linesizes, 2: binary ref_linesizes, 3: binary main_data, 4: binary ref_data, 5: binary mse, 6: i32 h, 7: i32 w),
	byte get_pit_avg3 (0: i32 i, 1: byte line),
	binary Subsample_Bilinear_uchar2 (),
	binary Subsample_Bilinear_uchar4 (),
	binary Subsample_Bilinear_uchar (),
	binary Subsample_Bilinear_ushort2 (),
	binary Subsample_Bilinear_ushort4 (),
	binary Subsample_Bilinear_ushort (),
	i32 comp_adjust (0: double adjust, 1: double k, 2: double value, 3: i32 correction_method, 4: i32 scale),
	void add_block (0: binary block, 1: i32 linesize, 2: i16 dst),
	byte ana_convert (0: binary coeff, 1: binary left, 2: binary right),
	void ff_threshold_init (0: ThresholdContext s),
	binary Thumbnail_uchar2 (),
	binary Thumbnail_uchar (),
	binary Thumbnail_ushort2 (),
	binary Thumbnail_ushort (),
	void copy_picture_field (0: binary format, 1: TInterlaceContext tinterlace, 2: binary src, 3: binary dst_linesize, 4: binary src_linesize, 5: i32 dst_field, 6: i32 flags, 7: i32 interleave, 8: i32 src_field, 9: i32 src_h, 10: i32 w, 11: binary dst),
	void transpose_block_16_c (0: i32 h, 1: i32 w, 2: binary dst_linesize, 3: binary src_linesize, 4: byte dst, 5: byte src),
	void transpose_block_24_c (0: i32 h, 1: i32 w, 2: binary dst_linesize, 3: binary src_linesize, 4: byte dst, 5: byte src),
	void transpose_block_32_c (0: i32 h, 1: i32 w, 2: binary dst_linesize, 3: binary src_linesize, 4: byte dst, 5: byte src),
	void transpose_block_48_c (0: i32 h, 1: i32 w, 2: binary dst_linesize, 3: binary src_linesize, 4: byte dst, 5: byte src),
	void transpose_block_64_c (0: i32 h, 1: i32 w, 2: binary dst_linesize, 3: binary src_linesize, 4: byte dst, 5: byte src),
	void transpose_block_8_c (0: i32 h, 1: i32 w, 2: binary dst_linesize, 3: binary src_linesize, 4: byte dst, 5: byte src),
	void copyh (0: binary p1, 1: binary length, 2: binary stride2, 3: double p2),
	void copyv (0: binary p1, 1: binary length, 2: binary stride1, 3: double p2),
	void copy (0: binary p1, 1: binary length, 2: double p2),
	double lerpf (0: double f, 1: double v0, 2: double v1),
	double get_dither_value (0: VignetteContext s),
	double ff_vmafmotion_process (0: AVFrame ref, 1: VMAFMotionData s),
	double ff_vmafmotion_uninit (0: VMAFMotionData s),
	i32 ff_vmafmotion_init (0: binary fmt, 1: VMAFMotionData s, 2: i32 h, 3: i32 w),
	binary max3 (),
	binary min3 (),
	binary spatial_predictor (),
	binary temporal_predictor (),
	binary yadif_double (),
	binary yadif_single (),
	binary yadif_uchar2 (),
	binary yadif_uchar (),
	binary yadif_ushort2 (),
	binary yadif_ushort (),
	AVFrame ff_default_get_video_buffer (0: AVFilterLink link, 1: i32 h, 2: i32 w),
	AVFrame ff_get_video_buffer (0: AVFilterLink link, 1: i32 h, 2: i32 w),
	AVFrame ff_null_get_video_buffer (0: AVFilterLink link, 1: i32 h, 2: i32 w),
	binary ff_av2vs_pixfmt (0: binary pf, 1: AVFilterContext ctx),
	void ff_vs_init (),
	void generate_window_func (0: double lut, 1: double overlap, 2: i32 N, 3: i32 win_func),
	binary ff_afir_init_x86 (0: AudioFIRDSPContext s),
	binary ff_anlmdn_init_x86 (0: AudioNLMDNDSPContext s),
	binary ff_volume_init_x86 (0: VolumeContext vol),
	binary ff_showcqt_init_x86 (0: ShowCQTContext s),
	void ff_colorspacedsp_x86_init (0: ColorSpaceDSPContext dsp),
	ff_scene_sad_fn ff_scene_sad_get_fn_x86 (0: i32 depth),
	binary BLEND_FUNC (),
	binary ff_bwdif_init_x86 (0: BWDIFContext bwdif),
	binary ff_eq_init_x86 (0: EQContext eq),
	void ff_framerate_init_x86 (0: FrameRateContext s),
	binary ff_fspp_init_x86 (0: FSPPContext s),
	binary ff_gradfun_init_x86 (0: GradFunContext gf),
	binary ff_hflip_init_x86 (0: FlipContext s, 1: binary step, 2: i32 nb_planes),
	binary ff_hqdn3d_init_x86 (0: HQDN3DContext hqdn3d),
	void ff_limiter_init_x86 (0: LimiterDSPContext dsp, 1: i32 bpp),
	binary ff_maskedmerge_init_x86 (0: MaskedMergeContext s),
	binary ff_noise_init_x86 (0: NoiseContext n),
	binary ff_overlay_init_x86 (0: OverlayContext s, 1: i32 alpha_format, 2: i32 format, 3: i32 main_has_alpha, 4: i32 pix_format),
	binary ff_pp7_init_x86 (0: PP7Context p),
	void ff_psnr_init_x86 (0: PSNRDSPContext dsp, 1: i32 bpp),
	binary ff_pullup_init_x86 (0: PullupContext s),
	binary ff_removegrain_init_x86 (0: RemoveGrainContext rg),
	binary ff_spp_init_x86 (0: SPPContext s),
	void ff_ssim_init_x86 (0: SSIMDSPContext dsp),
	void ff_stereo3d_init_x86 (0: Stereo3DDSPContext dsp),
	binary ff_tinterlace_init_x86 (0: TInterlaceContext s),
	binary ff_w3fdif_init_x86 (0: W3FDIFDSPContext dsp, 1: i32 depth),
	binary ff_yadif_init_x86 (0: YADIFContext yadif),
	i32 ff_yadif_filter_frame (0: AVFilterLink link, 1: AVFrame frame),
	i32 ff_yadif_request_frame (0: AVFilterLink link),
	AVInputFormat av_iformat_next (0: binary f),
	AVOutputFormat av_oformat_next (0: binary f),
	binary avpriv_register_devices (0: binary i, 1: binary o),
	binary av_demuxer_iterate (0: void opaque),
	binary av_muxer_iterate (0: void opaque),
	void av_register_all (),
	void av_register_input_format (0: AVInputFormat format),
	void av_register_output_format (0: AVOutputFormat format),
	i64 ff_ape_parse_tag (0: AVFormatContext s),
	i32 ff_ape_write_tag (0: AVFormatContext s),
	void ff_asfcrypt_dec (0: binary key, 1: i32 len, 2: byte data),
	i32 ff_audio_interleave_init (0: AVFormatContext s, 1: AVRational time_base, 2: binary samples_per_frame),
	i32 ff_audio_rechunk_interleave (0: AVFormatContext s, 1: AVPacket out, 2: AVPacket pkt, 3: binary compare_ts, 4: binary get_packet, 5: i32 flush),
	void ff_audio_interleave_close (0: AVFormatContext s),
	i32 ff_av1_filter_obus_buf (0: binary buf, 1: i32 size, 2: byte out),
	i32 ff_av1_filter_obus (0: AVIOContext pb, 1: binary buf, 2: i32 size),
	i32 ff_isom_write_av1c (0: AVIOContext pb, 1: binary buf, 2: i32 size),
	void uvlc (0: GetBitContext gb),
	binary ff_avc_find_startcode (0: binary end, 1: binary p),
	binary ff_avc_mp4_find_startcode (0: binary end, 1: binary start, 2: i32 nal_length_size),
	i32 ff_avc_parse_nal_units_buf (0: binary buf_in, 1: i32 size, 2: byte buf),
	i32 ff_avc_parse_nal_units (0: AVIOContext pb, 1: binary buf_in, 2: i32 size),
	i32 ff_avc_write_annexb_extradata (0: binary in, 1: i32 size, 2: byte buf),
	i32 ff_isom_write_avcc (0: AVIOContext pb, 1: binary data, 2: i32 len),
	i32 get_duration (0: AVIStream ast, 1: i32 len),
	AVIIentry avi_get_ientry (0: binary idx, 1: i32 ent_id),
	binary avio_find_protocol_name (0: binary url),
	i64 ffurl_seek (0: URLContext h, 1: i64 pos, 2: i32 whence),
	i64 ffurl_size (0: URLContext h),
	i32 avio_check (0: binary url, 1: i32 flags),
	i32 avio_close_dir (0: AVIODirContext s),
	i32 avio_open_dir (0: AVDictionary options, 1: AVIODirContext s, 2: binary url),
	i32 avio_read_dir (0: AVIODirContext s, 1: AVIODirEntry next),
	i32 avpriv_io_delete (0: binary url),
	i32 avpriv_io_move (0: binary url_dst, 1: binary url_src),
	i32 ff_check_interrupt (0: AVIOInterruptCB cb),
	i32 ffurl_accept (0: URLContext c, 1: URLContext s),
	i32 ffurl_alloc (0: URLContext puc, 1: binary int_cb, 2: binary filename, 3: i32 flags),
	i32 ffurl_closep (0: URLContext hh),
	i32 ffurl_close (0: URLContext h),
	i32 ffurl_connect (0: AVDictionary options, 1: URLContext uc),
	i32 ffurl_get_file_handle (0: URLContext h),
	i32 ffurl_get_multi_file_handle (0: URLContext h, 1: i32 handles, 2: i32 numhandles),
	i32 ffurl_get_short_seek (0: URLContext h),
	i32 ffurl_handshake (0: URLContext c),
	i32 ffurl_open_whitelist (0: AVDictionary options, 1: URLContext puc, 2: URLContext parent, 3: binary int_cb, 4: binary blacklist, 5: binary filename, 6: binary whitelist, 7: i32 flags),
	i32 ffurl_open (0: AVDictionary options, 1: URLContext puc, 2: binary int_cb, 3: binary filename, 4: i32 flags),
	i32 ffurl_read_complete (0: URLContext h, 1: i32 size, 2: binary buf),
	i32 ffurl_read (0: URLContext h, 1: i32 size, 2: binary buf),
	i32 ffurl_shutdown (0: URLContext h, 1: i32 flags),
	i32 ffurl_write (0: URLContext h, 1: binary buf, 2: i32 size),
	i32 retry_transfer_wrapper (0: URLContext h, 1: binary transfer_func, 2: i32 size_min, 3: i32 size, 4: byte buf),
	void avio_free_directory_entry (0: AVIODirEntry entry),
	binary avio_tell (0: AVIOContext s),
	binary ffio_wfourcc (0: AVIOContext pb, 1: binary s),
	binary GET_STR16 (),
	AVIOContext avio_alloc_context (0: binary read_packet, 1: binary write_packet, 2: binary seek, 3: i32 buffer_size, 4: i32 write_flag, 5: binary buffer, 6: void opaque),
	URLContext ffio_geturlcontext (0: AVIOContext s),
	i64 avio_seek_time (0: AVIOContext s, 1: i64 timestamp, 2: i32 flags, 3: i32 stream_index),
	i64 avio_seek (0: AVIOContext s, 1: i64 offset, 2: i32 whence),
	i64 avio_size (0: AVIOContext s),
	i64 avio_skip (0: AVIOContext s, 1: i64 offset),
	i64 ff_read_line_to_bprint_overwrite (0: binary bp, 1: AVIOContext s),
	i64 ff_read_line_to_bprint (0: binary bp, 1: AVIOContext s),
	i32 avio_accept (0: AVIOContext c, 1: AVIOContext s),
	i32 avio_close_dyn_buf (0: AVIOContext s, 1: byte pbuffer),
	i32 avio_closep (0: AVIOContext s),
	i32 avio_close (0: AVIOContext s),
	i32 avio_feof (0: AVIOContext s),
	i32 avio_get_dyn_buf (0: AVIOContext s, 1: byte pbuffer),
	i32 avio_get_str (0: AVIOContext s, 1: byte buf, 2: i32 buflen, 3: i32 maxlen),
	i32 avio_handshake (0: AVIOContext c),
	i32 avio_open2 (0: AVDictionary options, 1: AVIOContext s, 2: binary int_cb, 3: binary filename, 4: i32 flags),
	i32 avio_open_dyn_buf (0: AVIOContext s),
	i32 avio_open (0: AVIOContext s, 1: binary filename, 2: i32 flags),
	i32 avio_pause (0: AVIOContext s, 1: i32 pause),
	i32 avio_printf (0: AVIOContext s, 1: binary fmt),
	i32 avio_put_str (0: AVIOContext s, 1: binary str),
	i32 avio_r8 (0: AVIOContext s),
	i32 avio_read_partial (0: AVIOContext s, 1: i32 size, 2: binary buf),
	i32 avio_read_to_bprint (0: binary pb, 1: AVIOContext h, 2: i64 max_size),
	i32 avio_read (0: AVIOContext s, 1: i32 size, 2: binary buf),
	i32 ff_get_chomp_line (0: AVIOContext s, 1: byte buf, 2: i32 maxlen),
	i32 ff_get_line (0: AVIOContext s, 1: byte buf, 2: i32 maxlen),
	i32 ffio_close_null_buf (0: AVIOContext s),
	i32 ffio_ensure_seekback (0: AVIOContext s, 1: i64 buf_size),
	i32 ffio_fdopen (0: AVIOContext s, 1: URLContext h),
	i32 ffio_init_context (0: AVIOContext s, 1: binary read_packet, 2: binary write_packet, 3: binary seek, 4: i32 buffer_size, 5: i32 write_flag, 6: binary buffer, 7: void opaque),
	i32 ffio_open2_wrapper (0: binary s, 1: AVDictionary options, 2: AVIOContext pb, 3: binary int_cb, 4: binary url, 5: i32 flags),
	i32 ffio_open_dyn_packet_buf (0: AVIOContext s, 1: i32 max_packet_size),
	i32 ffio_open_null_buf (0: AVIOContext s),
	i32 ffio_open_whitelist (0: AVDictionary options, 1: AVIOContext s, 2: binary int_cb, 3: binary blacklist, 4: binary filename, 5: binary whitelist, 6: i32 flags),
	i32 ffio_read_indirect (0: AVIOContext s, 1: binary data, 2: i32 size, 3: binary buf),
	i32 ffio_read_size (0: AVIOContext s, 1: i32 size, 2: binary buf),
	i32 ffio_rewind_with_probe_data (0: AVIOContext s, 1: i32 buf_size, 2: binary bufp),
	i32 ffio_set_buf_size (0: AVIOContext s, 1: i32 buf_size),
	i32 put_str16 (0: AVIOContext s, 1: binary str, 2: binary be),
	i64 avio_rl64 (0: AVIOContext s),
	i64 ffio_read_varlen (0: AVIOContext bc),
	binary avio_rb16 (0: AVIOContext s),
	binary avio_rb24 (0: AVIOContext s),
	binary avio_rb32 (0: AVIOContext s),
	binary avio_rl16 (0: AVIOContext s),
	binary avio_rl24 (0: AVIOContext s),
	binary avio_rl32 (0: AVIOContext s),
	i32 ff_crc04C11DB7_update (0: binary buf, 1: binary len, 2: i32 checksum),
	i32 ff_crcA001_update (0: binary buf, 1: binary len, 2: i32 checksum),
	i32 ff_crcEDB88320_update (0: binary buf, 1: binary len, 2: i32 checksum),
	i32 ffio_get_checksum (0: AVIOContext s),
	void avio_context_free (0: AVIOContext ps),
	void avio_flush (0: AVIOContext s),
	void avio_w8 (0: AVIOContext s, 1: i32 b),
	void avio_wb16 (0: AVIOContext s, 1: binary val),
	void avio_wb24 (0: AVIOContext s, 1: binary val),
	void avio_wb32 (0: AVIOContext s, 1: binary val),
	void avio_wb64 (0: AVIOContext s, 1: i64 val),
	void avio_wl16 (0: AVIOContext s, 1: binary val),
	void avio_wl24 (0: AVIOContext s, 1: binary val),
	void avio_wl32 (0: AVIOContext s, 1: binary val),
	void avio_wl64 (0: AVIOContext s, 1: i64 val),
	void avio_write_marker (0: binary type, 1: AVIOContext s, 2: i64 time),
	void avio_write (0: AVIOContext s, 1: binary buf, 2: i32 size),
	void ff_put_v (0: AVIOContext bc, 1: i64 val),
	void ffio_fill (0: AVIOContext s, 1: i32 b, 2: i32 count),
	void ffio_free_dyn_buf (0: AVIOContext s),
	void ffio_init_checksum (0: AVIOContext s, 1: binary update_checksum, 2: i32 checksum),
	binary av_convert_lang_to (0: binary target_codespace, 1: binary lang),
	binary ff_convert_lang_to (0: binary target_codespace, 1: binary lang),
	binary ff_brktimegm (0: binary tm, 1: binary secs),
	void ff_dash_fill_tmpl_params (0: byte dst, 1: binary template, 2: i64 time, 3: i32 bit_rate, 4: i32 number, 5: i32 rep_id, 6: i64 buffer_size),
	SegmentType select_segment_type (0: binary codec_id, 1: SegmentType segment_type),
	void dashenc_delete_media_segments (0: AVFormatContext s, 1: OutputStream os, 2: i32 remove_count),
	void av_dump_format (0: AVFormatContext ic, 1: binary url, 2: i32 index, 3: i32 is_output),
	void av_hex_dump_log (0: binary buf, 1: i32 level, 2: i32 size, 3: void avcl),
	void av_hex_dump (0: binary f, 1: binary buf, 2: i32 size),
	void av_pkt_dump2 (0: binary f, 1: binary pkt, 2: binary st, 3: i32 dump_payload),
	void av_pkt_dump_log2 (0: binary pkt, 1: binary st, 2: i32 dump_payload, 3: i32 level, 4: void avcl),
	DVDemuxContext avpriv_dv_init_demux (0: AVFormatContext s),
	i32 avpriv_dv_get_packet (0: AVPacket pkt, 1: DVDemuxContext c),
	i32 avpriv_dv_produce_packet (0: AVPacket pkt, 1: DVDemuxContext c, 2: i64 pos, 3: i32 buf_size, 4: byte buf),
	i16 dv_audio_12to16 (0: i16 sample),
	void ff_dv_offset_reset (0: DVDemuxContext c, 1: i64 frame_offset),
	i32 ff_flac_parse_picture (0: AVFormatContext s, 1: i32 buf_size, 2: byte buf),
	i32 ff_flac_is_native_layout (0: i64 channel_layout),
	i32 ff_flac_write_header (0: AVIOContext pb, 1: i32 extradata_size, 2: i32 last_block, 3: byte extradata),
	binary av_guess_codec (0: binary type, 1: AVOutputFormat fmt, 2: binary filename, 3: binary mime_type, 4: binary short_name),
	AVInputFormat av_find_input_format (0: binary short_name),
	AVInputFormat av_probe_input_format2 (0: AVProbeData pd, 1: i32 score_max, 2: i32 is_opened),
	AVInputFormat av_probe_input_format3 (0: AVProbeData pd, 1: i32 score_ret, 2: i32 is_opened),
	AVInputFormat av_probe_input_format (0: AVProbeData pd, 1: i32 is_opened),
	AVOutputFormat av_guess_format (0: binary filename, 1: binary mime_type, 2: binary short_name),
	i32 av_match_ext (0: binary extensions, 1: binary filename),
	i32 av_probe_input_buffer2 (0: AVIOContext pb, 1: AVInputFormat fmt, 2: binary filename, 3: binary max_probe_size, 4: binary offset, 5: void logctx),
	i32 av_probe_input_buffer (0: AVIOContext pb, 1: AVInputFormat fmt, 2: binary filename, 3: binary max_probe_size, 4: binary offset, 5: void logctx),
	i32 ff_framehash_write_header (0: AVFormatContext s),
	i32 ff_hevc_annexb2mp4_buf (0: binary buf_in, 1: i32 ps_count, 2: i32 size, 3: i32 filter_ps, 4: byte buf_out),
	i32 ff_hevc_annexb2mp4 (0: AVIOContext pb, 1: binary buf_in, 2: i32 ps_count, 3: i32 filter_ps, 4: i32 size),
	i32 ff_isom_write_hvcc (0: AVIOContext pb, 1: binary data, 2: i32 ps_array_completeness, 3: i32 size),
	i32 ff_hls_write_file_entry (0: AVIOContext out, 1: byte baseurl, 2: byte filename, 3: double prog_date_time, 4: double duration, 5: i64 pos, 6: i64 size, 7: i32 byterange_mode, 8: i32 insert_discont, 9: i32 round_duration),
	void ff_hls_write_audio_rendition (0: AVIOContext out, 1: byte agroup, 2: byte filename, 3: byte language, 4: i32 is_default, 5: i32 name_id),
	void ff_hls_write_end_list (0: AVIOContext out),
	void ff_hls_write_init_file (0: AVIOContext out, 1: byte filename, 2: i64 pos, 3: i64 size, 4: i32 byterange_mode),
	void ff_hls_write_playlist_header (0: AVIOContext out, 1: i64 sequence, 2: i32 allowcache, 3: i32 target_duration, 4: i32 version, 5: i32 playlist_type),
	void ff_hls_write_playlist_version (0: AVIOContext out, 1: i32 version),
	void ff_hls_write_stream_info (0: AVIOContext out, 1: AVStream st, 2: byte agroup, 3: byte ccgroup, 4: byte codecs, 5: byte filename, 6: i32 bandwidth),
	i32 ff_http_averror (0: i32 default_averror, 1: i32 status_code),
	i32 ff_http_do_new_request (0: URLContext h, 1: binary uri),
	i32 has_header (0: binary header, 1: binary str),
	void ff_http_init_auth_state (0: URLContext dest, 1: binary src),
	byte ff_http_auth_create_response (0: HTTPAuthState state, 1: binary auth, 2: binary method, 3: binary path),
	void ff_http_auth_handle_header (0: HTTPAuthState state, 1: binary key, 2: binary value),
	void ff_id3v1_read (0: AVFormatContext s),
	i32 ff_id3v2_match (0: binary magic, 1: binary buf),
	i32 ff_id3v2_parse_apic (0: AVFormatContext s, 1: ID3v2ExtraMeta extra_meta),
	i32 ff_id3v2_parse_chapters (0: AVFormatContext s, 1: ID3v2ExtraMeta extra_meta),
	i32 ff_id3v2_parse_priv_dict (0: AVDictionary metadata, 1: ID3v2ExtraMeta extra_meta),
	i32 ff_id3v2_parse_priv (0: AVFormatContext s, 1: ID3v2ExtraMeta extra_meta),
	i32 ff_id3v2_tag_len (0: binary buf),
	void ff_id3v2_free_extra_meta (0: ID3v2ExtraMeta extra_meta),
	void ff_id3v2_read_dict (0: AVDictionary metadata, 1: AVIOContext pb, 2: ID3v2ExtraMeta extra_meta, 3: binary magic),
	void ff_id3v2_read (0: AVFormatContext s, 1: ID3v2ExtraMeta extra_meta, 2: binary magic, 3: binary max_search_size),
	i32 ff_id3v2_write_apic (0: AVFormatContext s, 1: AVPacket pkt, 2: ID3v2EncContext id3),
	i32 ff_id3v2_write_metadata (0: AVFormatContext s, 1: ID3v2EncContext id3),
	i32 ff_id3v2_write_simple (0: binary s, 1: binary magic, 2: i32 id3v2_version),
	void ff_id3v2_finish (0: AVIOContext pb, 1: ID3v2EncContext id3, 2: i32 padding_bytes),
	void ff_id3v2_start (0: AVIOContext pb, 1: ID3v2EncContext id3, 2: binary magic, 3: i32 id3v2_version),
	binary ff_guess_image2_codec (0: binary filename),
	i32 ff_img_read_header (0: AVFormatContext s1),
	i32 ff_img_read_packet (0: AVFormatContext s1, 1: AVPacket pkt),
	i32 pgmx_probe (0: AVProbeData p),
	i32 pnm_probe (0: binary p),
	i32 ff_rename (0: binary newpath, 1: binary oldpath, 2: void logctx),
	binary ff_ip_resolve_host (0: binary hostname, 1: i32 family, 2: i32 flags, 3: i32 port, 4: i32 type, 5: void log_ctx),
	i32 ff_ip_check_source_lists (0: binary source_addr_ptr, 1: IPSourceFilters s),
	i32 ff_ip_parse_blocks (0: IPSourceFilters filters, 1: binary buf, 2: void log_ctx),
	i32 ff_ip_parse_sources (0: IPSourceFilters filters, 1: binary buf, 2: void log_ctx),
	void ff_ip_reset_filters (0: IPSourceFilters filters),
	binary avformat_get_mov_audio_tags (),
	binary avformat_get_mov_video_tags (),
	i32 ff_mov_iso639_to_lang (0: binary lang, 1: i32 mp4),
	i32 ff_mov_lang_to_iso639 (0: binary to, 1: binary code),
	i32 ff_mp4_read_dec_config_descr (0: AVFormatContext fc, 1: AVIOContext pb, 2: AVStream st),
	i32 ff_mp4_read_descr_len (0: AVIOContext pb),
	i32 ff_mp4_read_descr (0: AVFormatContext fc, 1: AVIOContext pb, 2: i32 tag),
	void ff_mov_write_chan (0: AVIOContext pb, 1: i64 channel_layout),
	void ff_mp4_parse_es_descr (0: AVIOContext pb, 1: i32 es_id),
	binary ff_mov_get_lpcm_codec_id (0: i32 bps, 1: i32 flags),
	i32 ff_mkv_stereo3d_conv (0: AVStream st, 1: MatroskaVideoStereoModeType stereo_mode),
	void ff_metadata_conv_ctx (0: AVFormatContext ctx, 1: binary d_conv, 2: binary s_conv),
	void ff_metadata_conv (0: AVDictionary pm, 1: binary d_conv, 2: binary s_conv),
	i32 ff_mms_asf_header_parser (0: MMSContext mms),
	i32 ff_mms_read_data (0: MMSContext mms, 1: binary size, 2: byte buf),
	i32 ff_mms_read_header (0: MMSContext mms, 1: binary size, 2: byte buf),
	i64 mov_get_stsc_samples (0: MOVStreamContext sc, 1: binary index),
	i32 ff_mov_read_stsd_entries (0: AVIOContext pb, 1: MOVContext c, 2: i32 entries),
	i32 mov_stsc_index_valid (0: binary count, 1: binary index),
	i32 ff_mov_read_chan (0: AVFormatContext s, 1: AVIOContext pb, 2: AVStream st, 3: i64 size),
	i32 ff_mov_get_channel_layout_tag (0: binary codec_id, 1: i32 bitmap, 2: i64 channel_layout),
	i64 ff_mov_get_channel_layout (0: i32 bitmap, 1: i32 tag),
	i32 ff_mov_read_esds (0: AVFormatContext fc, 1: AVIOContext pb),
	i32 ff_mov_write_packet (0: AVFormatContext s, 1: AVPacket pkt),
	i32 ff_mov_cenc_avc_parse_nal_units (0: AVIOContext pb, 1: MOVMuxCencContext ctx, 2: binary buf_in, 3: i32 size),
	i32 ff_mov_cenc_avc_write_nal_units (0: AVFormatContext s, 1: AVIOContext pb, 2: MOVMuxCencContext ctx, 3: binary buf_in, 4: i32 nal_length_size, 5: i32 size),
	i32 ff_mov_cenc_init (0: MOVMuxCencContext ctx, 1: i32 bitexact, 2: i32 use_subsamples, 3: byte encryption_key),
	i32 ff_mov_cenc_write_packet (0: AVIOContext pb, 1: MOVMuxCencContext ctx, 2: binary buf_in, 3: i32 size),
	i32 ff_mov_cenc_write_sinf_tag (0: AVIOContext pb, 1: MOVTrack track, 2: byte kid),
	void ff_mov_cenc_free (0: MOVMuxCencContext ctx),
	void ff_mov_cenc_write_stbl_atoms (0: AVIOContext pb, 1: MOVMuxCencContext ctx),
	i32 ff_mov_add_hinted_packet (0: AVFormatContext s, 1: AVPacket pkt, 2: i32 sample_size, 3: i32 sample, 4: i32 track_index, 5: byte sample_data),
	i32 ff_mov_init_hinting (0: AVFormatContext s, 1: i32 index, 2: i32 src_index),
	void ff_mov_close_hinting (0: MOVTrack track),
	i64 bs_get_v (0: binary bs),
	i64 gb_get_v (0: GetBitContext gb),
	i64 ff_parse_pes_pts (0: binary buf),
	void put_timestamp (0: AVIOContext pb, 1: i64 timestamp, 2: i32 id),
	MpegTSContext avpriv_mpegts_parse_open (0: AVFormatContext s),
	i32 avpriv_mpegts_parse_packet (0: AVPacket pkt, 1: MpegTSContext ts, 2: binary buf, 3: i32 len),
	i32 ff_parse_mpeg2_descriptor (0: AVFormatContext fc, 1: AVStream st, 2: Mp4Descr mp4_descr, 3: MpegTSContext ts, 4: binary pp, 5: binary desc_list_end, 6: i32 mp4_descr_count, 7: i32 pid, 8: i32 stream_type),
	i32 get16 (0: binary pp, 1: binary p_end),
	i32 get8 (0: binary pp, 1: binary p_end),
	void avpriv_mpegts_parse_close (0: MpegTSContext ts),
	i32 ff_check_h264_startcode (0: AVFormatContext s, 1: binary pkt, 2: binary st),
	void put16 (0: i32 val, 1: byte q_ptr),
	binary ff_choose_chroma_location (0: AVFormatContext s, 1: AVStream st),
	AVRational ff_choose_timebase (0: AVFormatContext s, 1: AVStream st, 2: i32 min_precision),
	i32 av_get_output_timestamp (0: binary s, 1: i64 dts, 2: i64 wall, 3: i32 stream),
	i32 av_interleaved_write_frame (0: AVFormatContext s, 1: AVPacket pkt),
	i32 av_interleaved_write_uncoded_frame (0: AVFormatContext s, 1: AVFrame frame, 2: i32 stream_index),
	i32 av_write_frame (0: AVFormatContext s, 1: AVPacket pkt),
	i32 av_write_trailer (0: AVFormatContext s),
	i32 av_write_uncoded_frame_query (0: AVFormatContext s, 1: i32 stream_index),
	i32 av_write_uncoded_frame (0: AVFormatContext s, 1: AVFrame frame, 2: i32 stream_index),
	i32 avformat_alloc_output_context2 (0: AVFormatContext avctx, 1: AVOutputFormat oformat, 2: binary filename, 3: binary format),
	i32 avformat_init_output (0: AVDictionary options, 1: AVFormatContext s),
	i32 avformat_write_header (0: AVDictionary options, 1: AVFormatContext s),
	i32 ff_interleave_add_packet (0: AVFormatContext s, 1: AVPacket pkt, 2: binary compare),
	i32 ff_interleave_packet_per_dts (0: AVFormatContext s, 1: AVPacket out, 2: AVPacket pkt, 3: i32 flush),
	i32 ff_interleaved_peek (0: AVFormatContext s, 1: AVPacket pkt, 2: i32 add_offset, 3: i32 stream),
	i32 ff_write_chained (0: AVFormatContext dst, 1: AVFormatContext src, 2: AVPacket pkt, 3: i32 dst_stream, 4: i32 interleave),
	binary ff_mxf_get_samples_per_frame (0: AVFormatContext s, 1: AVRational time_base),
	i32 ff_mxf_decode_pixel_layout (0: binary pix_fmt, 1: binary pixel_layout),
	i32 ff_mxf_get_content_package_rate (0: AVRational time_base),
	i32 mxf_read_utf16_string (0: AVIOContext pb, 1: byte str, 2: i32 be, 3: i32 size),
	i32 ff_accept (0: URLContext h, 1: i32 fd, 2: i32 timeout),
	i32 ff_connect_parallel (0: binary addrs, 1: URLContext h, 2: i32 fd, 3: i32 parallel, 4: i32 timeout_ms_per_address, 5: binary customize_fd, 6: void customize_ctx),
	i32 ff_http_match_no_proxy (0: binary hostname, 1: binary no_proxy),
	i32 ff_is_multicast_address (0: binary addr),
	i32 ff_listen_bind (0: URLContext h, 1: binary addr, 2: i32 fd, 3: i32 timeout, 4: socklen_t addrlen),
	i32 ff_listen_connect (0: URLContext h, 1: binary addr, 2: i32 fd, 3: i32 timeout, 4: i32 will_try_next, 5: socklen_t addrlen),
	i32 ff_listen (0: binary addr, 1: i32 fd, 2: socklen_t addrlen),
	i32 ff_neterrno (),
	i32 ff_network_init (),
	i32 ff_network_sleep_interruptible (0: AVIOInterruptCB int_cb, 1: i64 timeout),
	i32 ff_network_wait_fd_timeout (0: AVIOInterruptCB int_cb, 1: i64 timeout, 2: i32 fd, 3: i32 write),
	i32 ff_network_wait_fd (0: i32 fd, 1: i32 write),
	i32 ff_socket (0: i32 af, 1: i32 proto, 2: i32 type),
	i32 ff_tls_init (),
	void ff_log_net_error (0: binary prefix, 1: i32 level, 2: void ctx),
	void ff_network_close (),
	void ff_tls_deinit (),
	i64 ff_lsb2full (0: StreamContext stream, 1: i64 lsb),
	i32 ff_nut_add_sp (0: NUTContext nut, 1: i64 back_ptr, 2: i64 pos, 3: i64 ts),
	i32 ff_nut_sp_pos_cmp (0: binary a, 1: binary b),
	i32 ff_nut_sp_pts_cmp (0: binary a, 1: binary b),
	void ff_nut_free_sp (0: NUTContext nut),
	void ff_nut_reset_ts (0: AVRational time_base, 1: NUTContext nut, 2: i64 val),
	i32 ogg_find_stream (0: binary ogg, 1: i32 serial),
	i64 ogg_gptopts (0: AVFormatContext s, 1: i64 dts, 2: i32 i, 3: i64 gp),
	i32 daala_match_pix_fmt (0: binary fmt),
	i32 ff_vorbis_comment (0: AVDictionary m, 1: AVFormatContext as, 2: binary buf, 3: i32 parse_picture, 4: i32 size),
	i32 ff_vorbis_stream_comment (0: AVFormatContext as, 1: AVStream st, 2: binary buf, 3: i32 size),
	binary av_fmt_ctx_get_duration_estimation_method (0: binary ctx),
	AVFormatContext avformat_alloc_context (),
	binary avformat_get_class (),
	binary ff_gai_strerror (0: i32 ecode),
	i32 ff_getaddrinfo (0: binary res, 1: binary node, 2: binary service, 3: binary hints),
	i32 ff_getnameinfo (0: byte host, 1: byte serv, 2: binary sa, 3: i32 flags, 4: i32 hostlen, 5: i32 salen, 6: i32 servlen),
	i32 ff_poll (0: binary fds, 1: i32 timeout, 2: nfds_t numfds),
	i32 ff_socket_nonblock (0: i32 enable, 1: i32 socket),
	void ff_freeaddrinfo (0: binary res),
	binary DEF_FS_FUNCTION (),
	i32 is_dos_path (0: binary path),
	i32 ff_pcm_read_packet (0: AVFormatContext s, 1: AVPacket pkt),
	i32 ff_pcm_read_seek (0: AVFormatContext s, 1: i64 timestamp, 2: i32 flags, 3: i32 stream_index),
	binary ff_urlcontext_child_class_next (0: binary prev),
	binary ffurl_get_protocols (0: binary blacklist, 1: binary whitelist),
	binary avio_enum_protocols (0: i32 output, 1: void opaque),
	i32 ff_get_qtpalette (0: AVIOContext pb, 1: i32 codec_id, 2: i32 palette),
	i32 ff_raw_audio_read_header (0: AVFormatContext s),
	i32 ff_raw_data_read_header (0: AVFormatContext s),
	i32 ff_raw_read_partial_packet (0: AVFormatContext s, 1: AVPacket pkt),
	i32 ff_raw_subtitle_read_header (0: AVFormatContext s),
	i32 ff_raw_video_read_header (0: AVFormatContext s),
	i32 ff_raw_write_packet (0: AVFormatContext s, 1: AVPacket pkt),
	i32 ff_reshuffle_raw_rgb (0: AVCodecParameters par, 1: AVFormatContext s, 2: AVPacket ppkt, 3: i32 expected_stride),
	RDTDemuxContext ff_rdt_parse_open (0: AVFormatContext ic, 1: binary handler, 2: i32 first_stream_of_set_idx, 3: void priv_data),
	i32 ff_rdt_parse_header (0: binary buf, 1: i32 pis_keyframe, 2: i32 pseq_no, 3: i32 pset_id, 4: i32 pstream_id, 5: i32 len, 6: i32 ptimestamp),
	i32 ff_rdt_parse_packet (0: AVPacket pkt, 1: RDTDemuxContext s, 2: i32 len, 3: byte bufptr),
	void ff_rdt_calc_response_and_checksum (0: binary response, 1: binary chksum, 2: binary challenge),
	void ff_rdt_parse_close (0: RDTDemuxContext s),
	void ff_rdt_subscribe_rule (0: byte cmd, 1: i32 rule_nr, 2: i32 size, 3: i32 stream_nr),
	void ff_real_parse_sdp_a_line (0: AVFormatContext s, 1: binary line, 2: i32 stream_index),
	i32 ff_replaygain_export_raw (0: AVStream st, 1: i32 ag, 2: i32 tg, 3: i32 ap, 4: i32 tp),
	i32 ff_replaygain_export (0: AVDictionary metadata, 1: AVStream st),
	binary avformat_get_riff_audio_tags (),
	binary avformat_get_riff_video_tags (),
	binary ff_guidcmp (0: binary g1, 1: binary g2),
	binary ff_codec_guid_get_id (0: binary guids, 1: ff_asf_guid guid),
	binary ff_wav_codec_get_id (0: i32 bps, 1: binary tag),
	i32 ff_get_bmp_header (0: AVIOContext pb, 1: AVStream st, 2: i32 size),
	i32 ff_get_guid (0: AVIOContext s, 1: ff_asf_guid g),
	i32 ff_get_wav_header (0: AVCodecParameters par, 1: AVFormatContext s, 2: AVIOContext pb, 3: i32 big_endian, 4: i32 size),
	i32 ff_read_riff_info (0: AVFormatContext s, 1: i64 size),
	binary ff_get_codec_guid (0: binary id, 1: binary av_guid),
	i64 ff_start_tag (0: AVIOContext pb, 1: binary tag),
	i32 ff_put_wav_header (0: AVCodecParameters par, 1: AVFormatContext s, 2: AVIOContext pb, 3: i32 flags),
	void ff_end_tag (0: AVIOContext pb, 1: i64 start),
	void ff_parse_specific_params (0: AVStream st, 1: i32 au_rate, 2: i32 au_scale, 3: i32 au_ssize),
	void ff_put_bmp_header (0: AVCodecParameters par, 1: AVIOContext pb, 2: i32 for_asf, 3: i32 ignore_extradata),
	void ff_put_guid (0: AVIOContext s, 1: binary g),
	void ff_riff_write_info_tag (0: AVIOContext pb, 1: binary str, 2: binary tag),
	void ff_riff_write_info (0: AVFormatContext s),
	RMStream ff_rm_alloc_rmstream (),
	i32 ff_rm_parse_packet (0: AVFormatContext s, 1: AVIOContext pb, 2: AVPacket pkt, 3: AVStream st, 4: RMStream ast, 5: i32 seq, 6: i64 timestamp, 7: i32 flags, 8: i32 len),
	i32 ff_rm_read_mdpr_codecdata (0: AVFormatContext s, 1: AVIOContext pb, 2: AVStream st, 3: RMStream rst, 4: binary mime, 5: binary codec_data_size),
	i32 ff_rm_retrieve_cache (0: AVFormatContext s, 1: AVIOContext pb, 2: AVPacket pkt, 3: AVStream st, 4: RMStream ast),
	void ff_rm_free_rmstream (0: RMStream rms),
	void get_strl (0: AVIOContext pb, 1: byte buf, 2: i32 buf_size, 3: i32 len),
	void rm_ac3_swap_bytes (0: AVPacket pkt, 1: AVStream st),
	void ff_rm_reorder_sipr_data (0: i32 framesize, 1: i32 sub_packet_h, 2: byte buf),
	i32 ff_rtmpe_compute_secret_key (0: URLContext h, 1: binary clientdata, 2: binary serverdata, 3: i32 type),
	i32 ff_rtmpe_gen_pub_key (0: URLContext h, 1: byte buf),
	i32 ff_rtmpe_update_keystream (0: URLContext h),
	void ff_rtmpe_encrypt_sig (0: URLContext h, 1: binary digest, 2: i32 type, 3: byte sig),
	binary ff_dh_init (0: i32 key_len),
	i32 ff_dh_compute_shared_secret_key (0: FF_DH dh, 1: binary pub_key, 2: i32 pub_key_len, 3: i32 secret_key_len, 4: byte secret_key),
	i32 ff_dh_generate_public_key (0: FF_DH dh),
	i32 ff_dh_write_public_key (0: FF_DH dh, 1: i32 pub_key_len, 2: byte pub_key),
	void ff_dh_free (0: FF_DH dh),
	i32 ff_rtmp_calc_digest_pos (0: binary buf, 1: i32 add_val, 2: i32 mod_val, 3: i32 off),
	i32 ff_rtmp_calc_digest (0: binary key, 1: binary src, 2: i32 gap, 3: i32 keylen, 4: i32 len, 5: byte dst),
	i32 ff_amf_get_field_value (0: binary data_end, 1: binary data, 2: binary name, 3: i32 dst_size, 4: byte dst),
	i32 ff_amf_get_string (0: GetByteContext bc, 1: i32 length, 2: i32 strsize, 3: byte str),
	i32 ff_amf_match_string (0: binary str, 1: binary data, 2: i32 size),
	i32 ff_amf_read_bool (0: GetByteContext bc, 1: i32 val),
	i32 ff_amf_read_null (0: GetByteContext bc),
	i32 ff_amf_read_number (0: GetByteContext bc, 1: double val),
	i32 ff_amf_read_string (0: GetByteContext bc, 1: i32 length, 2: i32 strsize, 3: byte str),
	i32 ff_amf_tag_size (0: binary data_end, 1: binary data),
	i32 ff_rtmp_check_alloc_array (0: RTMPPacket prev_pkt, 1: i32 nb_prev_pkt, 2: i32 channel),
	i32 ff_rtmp_packet_create (0: RTMPPacket pkt, 1: RTMPPacketType type, 2: i32 channel_id, 3: i32 size, 4: i32 timestamp),
	i32 ff_rtmp_packet_read_internal (0: RTMPPacket prev_pkt, 1: RTMPPacket p, 2: URLContext h, 3: i32 nb_prev_pkt, 4: i32 chunk_size, 5: byte hdr),
	i32 ff_rtmp_packet_read (0: RTMPPacket prev_pkt, 1: RTMPPacket p, 2: URLContext h, 3: i32 nb_prev_pkt, 4: i32 chunk_size),
	i32 ff_rtmp_packet_write (0: RTMPPacket prev_pkt_ptr, 1: RTMPPacket pkt, 2: URLContext h, 3: i32 nb_prev_pkt, 4: i32 chunk_size),
	void ff_amf_write_bool (0: i32 val, 1: byte dst),
	void ff_amf_write_field_name (0: binary str, 1: byte dst),
	void ff_amf_write_null (0: byte dst),
	void ff_amf_write_number (0: double val, 1: byte dst),
	void ff_amf_write_object_end (0: byte dst),
	void ff_amf_write_object_start (0: byte dst),
	void ff_amf_write_string2 (0: binary str1, 1: binary str2, 2: byte dst),
	void ff_amf_write_string (0: binary str, 1: byte dst),
	void ff_rtmp_packet_destroy (0: RTMPPacket pkt),
	void ff_rtmp_packet_dump (0: RTMPPacket p, 1: void ctx),
	binary ff_rtp_codec_id (0: binary codec_type, 1: binary buf),
	binary ff_rtp_enc_name (0: i32 payload_type),
	i32 ff_rtp_get_codec_info (0: AVCodecParameters par, 1: i32 payload_type),
	i32 ff_rtp_get_payload_type (0: AVCodecParameters par, 1: AVFormatContext fmt, 2: i32 idx),
	RTPDemuxContext ff_rtp_parse_open (0: AVFormatContext s1, 1: AVStream st, 2: i32 payload_type, 3: i32 queue_size),
	binary ff_rtp_handler_find_by_id (0: binary codec_type, 1: i32 id),
	binary ff_rtp_handler_find_by_name (0: binary codec_type, 1: binary name),
	binary ff_rtp_handler_iterate (0: void opaque),
	i64 ff_rtp_queued_packet_time (0: RTPDemuxContext s),
	i32 ff_parse_fmtp (0: AVFormatContext s, 1: AVStream stream, 2: PayloadContext data, 3: binary p, 4: binary parse_fmtp),
	i32 ff_rtp_check_and_send_back_rr (0: AVIOContext avio, 1: RTPDemuxContext s, 2: URLContext fd, 3: i32 count),
	i32 ff_rtp_finalize_packet (0: AVIOContext dyn_buf, 1: AVPacket pkt, 2: i32 stream_idx),
	i32 ff_rtp_parse_packet (0: AVPacket pkt, 1: RTPDemuxContext s, 2: i32 len, 3: byte bufptr),
	i32 ff_rtp_send_rtcp_feedback (0: AVIOContext avio, 1: RTPDemuxContext s, 2: URLContext fd),
	void ff_rtp_parse_close (0: RTPDemuxContext s),
	void ff_rtp_parse_set_crypto (0: RTPDemuxContext s, 1: binary params, 2: binary suite),
	void ff_rtp_parse_set_dynamic_protocol (0: PayloadContext ctx, 1: RTPDemuxContext s, 2: binary handler),
	void ff_rtp_reset_packet_queue (0: RTPDemuxContext s),
	void ff_rtp_send_punch_packets (0: URLContext rtp_handle),
	i32 ff_wms_parse_sdp_a_line (0: AVFormatContext s, 1: binary p),
	i32 ff_h263_handle_packet (0: AVFormatContext ctx, 1: AVPacket pkt, 2: AVStream st, 3: PayloadContext data, 4: binary buf, 5: i32 flags, 6: i32 len, 7: i16 seq, 8: i32 timestamp),
	i32 ff_h264_handle_aggregated_packet (0: AVFormatContext ctx, 1: AVPacket pkt, 2: PayloadContext data, 3: binary buf, 4: i32 nal_counters, 5: i32 len, 6: i32 nal_mask, 7: i32 skip_between),
	i32 ff_h264_handle_frag_packet (0: AVPacket pkt, 1: binary buf, 2: binary nal_header, 3: i32 len, 4: i32 nal_header_len, 5: i32 start_bit),
	i32 ff_h264_parse_sprop_parameter_sets (0: AVFormatContext s, 1: binary value, 2: i32 size_ptr, 3: byte data_ptr),
	void ff_h264_parse_framesize (0: AVCodecParameters par, 1: binary p),
	void ff_rtp_send_data (0: AVFormatContext s1, 1: binary buf1, 2: i32 len, 3: i32 m),
	void ff_rtp_send_aac (0: AVFormatContext s1, 1: binary buff, 2: i32 size),
	void ff_rtp_send_amr (0: AVFormatContext s1, 1: binary buff, 2: i32 size),
	i32 ff_rtp_chain_mux_open (0: AVFormatContext out, 1: AVFormatContext s, 2: AVStream st, 3: URLContext handle, 4: i32 idx, 5: i32 packet_size),
	void ff_rtp_send_h261 (0: AVFormatContext ctx, 1: binary frame_buf, 2: i32 frame_size),
	binary ff_h263_find_resync_marker_reverse (0: binary end, 1: binary start),
	void ff_rtp_send_h263 (0: AVFormatContext s1, 1: binary buf1, 2: i32 size),
	void ff_rtp_send_h263_rfc2190 (0: AVFormatContext s1, 1: binary buf, 2: binary mb_info, 3: i32 mb_info_size, 4: i32 size),
	void ff_rtp_send_h264_hevc (0: AVFormatContext s1, 1: binary buf1, 2: i32 size),
	void ff_rtp_send_jpeg (0: AVFormatContext s1, 1: binary buf, 2: i32 size),
	void ff_rtp_send_latm (0: AVFormatContext s1, 1: binary buff, 2: i32 size),
	void ff_rtp_send_mpegvideo (0: AVFormatContext s1, 1: binary buf1, 2: i32 size),
	void ff_rtp_send_vc2hq (0: AVFormatContext ctx, 1: binary frame_buf, 2: i32 frame_size, 3: i32 interlaced),
	void ff_rtp_send_vp8 (0: AVFormatContext s1, 1: binary buf, 2: i32 size),
	void ff_rtp_send_vp9 (0: AVFormatContext ctx, 1: binary buf, 2: i32 size),
	void ff_rtp_send_xiph (0: AVFormatContext s1, 1: binary buff, 2: i32 size),
	i32 ff_rtp_get_local_rtp_port (0: URLContext h),
	i32 ff_rtp_set_remote_url (0: URLContext h, 1: binary uri),
	i32 ff_rtsp_connect (0: AVFormatContext s),
	i32 ff_rtsp_fetch_packet (0: AVFormatContext s, 1: AVPacket pkt),
	i32 ff_rtsp_make_setup_request (0: AVFormatContext s, 1: binary host, 2: binary real_challenge, 3: i32 lower_transport, 4: i32 port),
	i32 ff_rtsp_next_attr_and_value (0: byte attr, 1: byte value, 2: binary p, 3: i32 attr_size, 4: i32 value_size),
	i32 ff_rtsp_open_transport_ctx (0: AVFormatContext s, 1: RTSPStream rtsp_st),
	i32 ff_rtsp_read_reply (0: AVFormatContext s, 1: RTSPMessageHeader reply, 2: binary method, 3: i32 return_on_interleaved_data, 4: binary content_ptr),
	i32 ff_rtsp_send_cmd_async (0: AVFormatContext s, 1: binary headers, 2: binary method, 3: binary url),
	i32 ff_rtsp_send_cmd_with_content (0: AVFormatContext s, 1: RTSPMessageHeader reply, 2: binary header, 3: binary method, 4: binary url, 5: binary send_content, 6: i32 send_content_length, 7: binary content_ptr),
	i32 ff_rtsp_send_cmd (0: AVFormatContext s, 1: RTSPMessageHeader reply, 2: binary headers, 3: binary method, 4: binary url, 5: binary content_ptr),
	i32 ff_sdp_parse (0: AVFormatContext s, 1: binary content),
	void ff_rtsp_close_connections (0: AVFormatContext s),
	void ff_rtsp_close_streams (0: AVFormatContext s),
	void ff_rtsp_parse_line (0: AVFormatContext s, 1: RTSPMessageHeader reply, 2: RTSPState rt, 3: binary buf, 4: binary method),
	void ff_rtsp_skip_packet (0: AVFormatContext s),
	void ff_rtsp_undo_setup (0: AVFormatContext s, 1: i32 send_packets),
	i32 ff_rtsp_averror (0: binary status_code, 1: i32 default_averror),
	i32 check_sessionid (0: AVFormatContext s, 1: RTSPMessageHeader request),
	i32 ff_rtsp_parse_streaming_commands (0: AVFormatContext s),
	i32 ff_rtsp_setup_input_streams (0: AVFormatContext s, 1: RTSPMessageHeader reply),
	i32 ff_rtsp_tcp_read_packet (0: AVFormatContext s, 1: RTSPStream prtsp_st, 2: i32 buf_size, 3: byte buf),
	i32 parse_command_line (0: binary methodcode, 1: AVFormatContext s, 2: byte method, 3: byte uri, 4: binary line, 5: i32 linelen, 6: i32 methodsize, 7: i32 urisize),
	i32 read_line (0: AVFormatContext s, 1: byte rbuf, 2: binary rbufsize, 3: i32 rbuflen),
	i32 rtsp_read_request (0: AVFormatContext s, 1: RTSPMessageHeader request, 2: binary method),
	i32 ff_rtsp_setup_output_streams (0: AVFormatContext s, 1: binary addr),
	i32 ff_rtsp_tcp_write_packet (0: AVFormatContext s, 1: RTSPStream rtsp_st),
	i32 ff_sauce_read (0: AVFormatContext avctx, 1: i32 got_width, 2: i32 get_height, 3: i64 fsize),
	i32 is_space (0: byte c),
	i32 scale_double (0: double d, 1: double m, 2: i32 r, 3: void log),
	i32 av_sdp_create (0: binary ac, 1: byte buf, 2: i32 n_files, 3: i32 size),
	void ff_sdp_write_media (0: AVFormatContext fmt, 1: AVStream st, 2: byte buff, 3: binary dest_addr, 4: binary dest_type, 5: i32 idx, 6: i32 port, 7: i32 size, 8: i32 ttl),
	void ff_spdif_bswap_buf16 (0: binary src, 1: i32 w, 2: i16 dst),
	i32 ff_spdif_probe (0: binary codec, 1: binary p_buf, 2: i32 buf_size),
	i32 ff_spdif_read_packet (0: AVFormatContext s, 1: AVPacket pkt),
	i32 ff_srtp_decrypt (0: binary s, 1: i32 lenptr, 2: byte buf),
	i32 ff_srtp_encrypt (0: binary s, 1: binary in, 2: i32 len, 3: i32 outlen, 4: byte out),
	i32 ff_srtp_set_crypto (0: binary s, 1: binary params, 2: binary suite),
	void ff_srtp_free (0: binary s),
	AVPacket ff_subtitles_queue_insert (0: FFDemuxSubtitlesQueue q, 1: binary event, 2: i32 merge, 3: i64 len),
	binary ff_smil_get_attr_ptr (0: binary attr, 1: binary s),
	i64 ff_text_pos (0: FFTextReader r),
	i32 ff_smil_extract_next_text_chunk (0: binary buf, 1: FFTextReader tr, 2: byte c),
	i32 ff_subtitles_queue_read_packet (0: AVPacket pkt, 1: FFDemuxSubtitlesQueue q),
	i32 ff_subtitles_queue_seek (0: AVFormatContext s, 1: FFDemuxSubtitlesQueue q, 2: i64 max_ts, 3: i64 min_ts, 4: i64 ts, 5: i32 flags, 6: i32 stream_index),
	i32 ff_text_eof (0: FFTextReader r),
	i32 ff_text_peek_r8 (0: FFTextReader r),
	i32 ff_text_r8 (0: FFTextReader r),
	i32 is_eol (0: byte c),
	binary ff_subtitles_read_line (0: FFTextReader tr, 1: byte buf, 2: i64 size),
	void ff_subtitles_queue_clean (0: FFDemuxSubtitlesQueue q),
	void ff_subtitles_queue_finalize (0: FFDemuxSubtitlesQueue q, 1: void log_ctx),
	void ff_subtitles_read_chunk (0: binary buf, 1: AVIOContext pb),
	void ff_subtitles_read_text_chunk (0: binary buf, 1: FFTextReader tr),
	void ff_text_init_avio (0: AVIOContext pb, 1: FFTextReader r, 2: void s),
	void ff_text_init_buf (0: FFTextReader r, 1: i64 size, 2: void buf),
	void ff_text_read (0: FFTextReader r, 1: byte buf, 2: i64 size),
	binary ff_subtitles_next_line (0: binary ptr),
	void max_nbits (0: i32 nbits_ptr, 1: i32 val),
	i32 parse_slave_failure_policy_option (0: TeeSlave tee_slave, 1: binary opt),
	i32 ff_tee_parse_slave_options (0: AVDictionary options, 1: byte filename, 2: byte slave, 3: void log),
	i32 main (0: binary argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (),
	i32 main (),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (),
	i32 main (),
	i32 ff_tls_open_underlying (0: AVDictionary options, 1: TLSShared c, 2: URLContext parent, 3: binary uri),
	void ff_gnutls_deinit (),
	void ff_gnutls_init (),
	i32 ff_openssl_init (),
	void ff_openssl_deinit (),
	i32 ff_udp_get_local_port (0: URLContext h),
	i32 ff_udp_set_remote_url (0: URLContext h, 1: binary uri),
	AVIODirEntry ff_alloc_dir_entry (),
	i32 ff_url_join (0: byte str, 1: binary authorization, 2: binary fmt, 3: binary hostname, 4: binary proto, 5: i32 port, 6: i32 size),
	void ff_make_absolute_url (0: byte buf, 1: binary base, 2: binary rel, 3: i32 size),
	byte ff_urldecode (0: binary url),
	binary MAKE_ACCESSORS (),
	binary av_codec_get_id (0: binary tags, 1: binary tag),
	binary ff_codec_get_id (0: binary tags, 1: binary tag),
	binary ff_get_pcm_codec_id (0: i32 be, 1: i32 bps, 2: i32 flt, 3: i32 sflags),
	binary av_stream_get_parser (0: binary st),
	AVChapter avpriv_new_chapter (0: AVFormatContext s, 1: AVRational time_base, 2: binary title, 3: i64 end, 4: i64 start, 5: i32 id),
	AVProgram av_find_program_from_stream (0: AVFormatContext ic, 1: AVProgram last, 2: i32 s),
	AVProgram av_new_program (0: AVFormatContext ac, 1: i32 id),
	AVRational av_guess_frame_rate (0: AVFormatContext format, 1: AVFrame frame, 2: AVStream st),
	AVRational av_guess_sample_aspect_ratio (0: AVFormatContext format, 1: AVFrame frame, 2: AVStream stream),
	AVRational av_stream_get_codec_timebase (0: binary st),
	AVStream avformat_new_stream (0: AVFormatContext s, 1: binary c),
	binary av_apply_bitstream_filters (0: AVBitStreamFilterContext bsfc, 1: AVCodecContext codec, 2: AVPacket pkt),
	binary ff_format_output_open (0: AVDictionary options, 1: AVFormatContext s, 2: binary url),
	byte ff_data_to_hex (0: byte buff, 1: binary src, 2: i32 lowercase, 3: i32 s),
	binary avformat_configuration (),
	binary avformat_license (),
	i64 ff_gen_search (0: AVFormatContext s, 1: binary read_timestamp, 2: i64 ts_ret, 3: i64 pos_limit, 4: i64 pos_max, 5: i64 pos_min, 6: i64 target_ts, 7: i64 ts_max, 8: i64 ts_min, 9: i32 flags, 10: i32 stream_index),
	i32 av_add_index_entry (0: AVStream st, 1: i64 pos, 2: i64 timestamp, 3: i32 distance, 4: i32 flags, 5: i32 size),
	i32 av_append_packet (0: AVIOContext s, 1: AVPacket pkt, 2: i32 size),
	i32 av_codec_get_tag2 (0: binary id, 1: binary tags, 2: binary tag),
	i32 av_demuxer_open (0: AVFormatContext ic),
	i32 av_filename_number_test (0: binary filename),
	i32 av_find_best_stream (0: binary type, 1: AVCodec decoder_ret, 2: AVFormatContext ic, 3: i32 flags, 4: i32 related_stream, 5: i32 wanted_stream_nb),
	i32 av_find_default_stream_index (0: AVFormatContext s),
	i32 av_format_get_probe_score (0: binary s),
	i32 av_get_frame_filename2 (0: byte buf, 1: binary path, 2: i32 buf_size, 3: i32 flags, 4: i32 number),
	i32 av_get_frame_filename (0: byte buf, 1: binary path, 2: i32 buf_size, 3: i32 number),
	i32 av_get_packet (0: AVIOContext s, 1: AVPacket pkt, 2: i32 size),
	i32 av_index_search_timestamp (0: AVStream st, 1: i64 wanted_timestamp, 2: i32 flags),
	i32 av_read_frame (0: AVFormatContext s, 1: AVPacket pkt),
	i32 av_read_pause (0: AVFormatContext s),
	i32 av_read_play (0: AVFormatContext s),
	i32 av_seek_frame (0: AVFormatContext s, 1: i64 timestamp, 2: i32 flags, 3: i32 stream_index),
	i32 av_stream_add_side_data (0: binary type, 1: AVStream st, 2: i64 size, 3: byte data),
	i32 avformat_find_stream_info (0: AVDictionary options, 1: AVFormatContext ic),
	i32 avformat_flush (0: AVFormatContext s),
	i32 avformat_match_stream_specifier (0: AVFormatContext s, 1: AVStream st, 2: binary spec),
	i32 avformat_network_deinit (),
	i32 avformat_network_init (),
	i32 avformat_open_input (0: AVDictionary options, 1: AVFormatContext ps, 2: AVInputFormat fmt, 3: binary filename),
	i32 avformat_query_codec (0: binary codec_id, 1: binary ofmt, 2: i32 std_compliance),
	i32 avformat_queue_attached_pictures (0: AVFormatContext s),
	i32 avformat_seek_file (0: AVFormatContext s, 1: i64 max_ts, 2: i64 min_ts, 3: i64 ts, 4: i32 flags, 5: i32 stream_index),
	i32 avformat_transfer_internal_stream_timing_info (0: binary copy_tb, 1: AVStream ost, 2: binary ofmt, 3: binary ist),
	i32 ff_add_index_entry (0: AVIndexEntry index_entries, 1: i32 nb_index_entries, 2: i64 pos, 3: i64 timestamp, 4: i32 distance, 5: i32 flags, 6: i32 size, 7: binary index_entries_allocated_size),
	i32 ff_add_param_change (0: AVPacket pkt, 1: i32 channels, 2: i32 height, 3: i32 sample_rate, 4: i32 width, 5: i64 channel_layout),
	i32 ff_alloc_extradata (0: AVCodecParameters par, 1: i32 size),
	i32 ff_bprint_to_codecpar_extradata (0: binary buf, 1: AVCodecParameters par),
	i32 ff_copy_whiteblacklists (0: AVFormatContext dst, 1: binary src),
	i32 ff_find_last_ts (0: AVFormatContext s, 1: binary read_timestamp, 2: i64 pos, 3: i64 ts, 4: i32 stream_index),
	i32 ff_find_stream_index (0: AVFormatContext s, 1: i32 id),
	i32 ff_generate_avci_extradata (0: AVStream st),
	i32 ff_get_extradata (0: AVCodecParameters par, 1: AVFormatContext s, 2: AVIOContext pb, 3: i32 size),
	i32 ff_get_packet_palette (0: AVFormatContext s, 1: AVPacket pkt, 2: i32 ret, 3: i32 palette),
	i32 ff_hex_to_data (0: binary p, 1: byte data),
	i32 ff_index_search_timestamp (0: binary entries, 1: i64 wanted_timestamp, 2: i32 flags, 3: i32 nb_entries),
	i32 ff_is_http_proto (0: byte filename),
	i32 ff_lock_avformat (),
	i32 ff_mkdir_p (0: binary path),
	i32 ff_packet_list_get (0: AVPacket pkt, 1: AVPacketList pkt_buffer_end, 2: AVPacketList pkt_buffer),
	i32 ff_packet_list_put (0: AVPacket pkt, 1: AVPacketList packet_buffer, 2: AVPacketList plast_pktl, 3: i32 flags),
	i32 ff_parse_creation_time_metadata (0: AVFormatContext s, 1: i64 timestamp, 2: i32 return_seconds),
	i32 ff_read_packet (0: AVFormatContext s, 1: AVPacket pkt),
	i32 ff_rfps_add_frame (0: AVFormatContext ic, 1: AVStream st, 2: i64 ts),
	i32 ff_seek_frame_binary (0: AVFormatContext s, 1: i64 target_ts, 2: i32 flags, 3: i32 stream_index),
	i32 ff_standardize_creation_time (0: AVFormatContext s),
	i32 ff_stream_add_bitstream_filter (0: AVStream st, 1: binary args, 2: binary name),
	i32 ff_stream_encode_params_copy (0: AVStream dst, 1: binary src),
	i32 ff_unlock_avformat (),
	i32 ffio_limit (0: AVIOContext s, 1: i32 size),
	i64 ff_get_formatted_ntp_time (0: i64 ntp_time_us),
	i64 ff_ntp_time (),
	byte av_stream_get_side_data (0: binary type, 1: binary st, 2: i32 size),
	byte av_stream_new_side_data (0: binary type, 1: AVStream st, 2: i32 size),
	binary av_codec_get_tag (0: binary id, 1: binary tags),
	binary ff_codec_get_tag (0: binary id, 1: binary tags),
	binary avformat_version (),
	void av_format_inject_global_side_data (0: AVFormatContext s),
	void av_program_add_stream_index (0: AVFormatContext ac, 1: i32 progid, 2: binary idx),
	void av_url_split (0: byte authorization, 1: byte hostname, 2: byte path, 3: byte proto, 4: binary url, 5: i32 port_ptr, 6: i32 authorization_size, 7: i32 hostname_size, 8: i32 path_size, 9: i32 proto_size),
	void avformat_close_input (0: AVFormatContext ps),
	void avformat_free_context (0: AVFormatContext s),
	void avpriv_set_pts_info (0: AVStream s, 1: i32 pts_wrap_bits, 2: binary pts_den, 3: binary pts_num),
	void ff_compute_frame_duration (0: AVCodecParserContext pc, 1: AVFormatContext s, 2: AVPacket pkt, 3: AVStream st, 4: i32 pden, 5: i32 pnum),
	void ff_configure_buffers_for_index (0: AVFormatContext s, 1: i64 time_tolerance),
	void ff_format_io_close (0: AVFormatContext s, 1: AVIOContext pb),
	void ff_format_set_url (0: AVFormatContext s, 1: byte url),
	void ff_free_stream (0: AVFormatContext s, 1: AVStream st),
	void ff_packet_list_free (0: AVPacketList pkt_buf_end, 1: AVPacketList pkt_buf),
	void ff_parse_key_value (0: binary str, 1: ff_parse_key_val_cb callback_get_buf, 2: void context),
	void ff_read_frame_flush (0: AVFormatContext s),
	void ff_reduce_index (0: AVFormatContext s, 1: i32 stream_index),
	void ff_rfps_calculate (0: AVFormatContext ic),
	void ff_update_cur_dts (0: AVFormatContext s, 1: AVStream ref_st, 2: i64 timestamp),
	i32 ff_voc_get_packet (0: AVFormatContext s, 1: AVPacket pkt, 2: AVStream st, 3: i32 max_size),
	i64 ff_vorbiscomment_length (0: AVChapter chapters, 1: AVDictionary m, 2: binary vendor_string, 3: binary nb_chapters),
	i32 ff_vorbiscomment_write (0: AVChapter chapters, 1: AVDictionary m, 2: binary vendor_string, 3: byte p, 4: binary nb_chapters),
	i32 ff_isom_get_vpcc_features (0: AVCodecParameters par, 1: AVFormatContext s, 2: AVRational frame_rate, 3: VPCC vpcc),
	i32 ff_isom_write_vpcc (0: AVCodecParameters par, 1: AVFormatContext s, 2: AVIOContext pb),
	i32 wav_parse_bext_string (0: AVFormatContext s, 1: binary key, 2: i32 length),
	void bwf_write_bext_string (0: AVFormatContext s, 1: binary key, 2: i32 maxlen),
	i32 ff_wv_parse_header (0: WvHeader wv, 1: binary data),
	binary ff_audio_convert_init_aarch64 (0: AudioConvert ac),
	binary wrap (0: binary in_samples),
	binary ff_audio_resample_init_aarch64 (0: binary sample_fmt, 1: ResampleContext c),
	binary ff_audio_convert_init_arm (0: AudioConvert ac),
	binary wrap (0: binary in_samples),
	binary ff_audio_resample_init_arm (0: binary sample_fmt, 1: ResampleContext c),
	AudioConvert ff_audio_convert_alloc (0: binary in_fmt, 1: binary out_fmt, 2: AVAudioResampleContext avr, 3: i32 apply_map, 4: i32 channels, 5: i32 sample_rate),
	i32 ff_audio_convert (0: AudioConvert ac, 1: AudioData in, 2: AudioData out),
	void ff_audio_convert_free (0: AudioConvert ac),
	void ff_audio_convert_set_func (0: binary in_fmt, 1: binary out_fmt, 2: AudioConvert ac, 3: binary descr, 4: i32 channels, 5: i32 ptr_align, 6: i32 samples_align, 7: void conv),
	AudioData ff_audio_data_alloc (0: binary sample_fmt, 1: binary name, 2: i32 channels, 3: i32 nb_samples),
	i32 ff_audio_data_add_to_fifo (0: AVAudioFifo af, 1: AudioData a, 2: i32 nb_samples, 3: i32 offset),
	i32 ff_audio_data_combine (0: AudioData dst, 1: AudioData src, 2: i32 dst_offset, 3: i32 nb_samples, 4: i32 src_offset),
	i32 ff_audio_data_copy (0: AudioData dst, 1: AudioData src, 2: ChannelMapInfo map),
	i32 ff_audio_data_init (0: binary sample_fmt, 1: AudioData a, 2: binary name, 3: i32 channels, 4: i32 nb_samples, 5: i32 plane_size, 6: i32 read_only, 7: byte src),
	i32 ff_audio_data_read_from_fifo (0: AVAudioFifo af, 1: AudioData a, 2: i32 nb_samples),
	i32 ff_audio_data_realloc (0: AudioData a, 1: i32 nb_samples),
	i32 ff_audio_data_set_channels (0: AudioData a, 1: i32 channels),
	i32 ff_sample_fmt_is_planar (0: binary sample_fmt, 1: i32 channels),
	void ff_audio_data_drain (0: AudioData a, 1: i32 nb_samples),
	void ff_audio_data_free (0: AudioData a),
	AudioMix ff_audio_mix_alloc (0: AVAudioResampleContext avr),
	i32 ff_audio_mix_get_matrix (0: AudioMix am, 1: double matrix, 2: i32 stride),
	i32 ff_audio_mix_set_matrix (0: AudioMix am, 1: binary matrix, 2: i32 stride),
	i32 ff_audio_mix (0: AudioData src, 1: AudioMix am),
	void ff_audio_mix_free (0: AudioMix am_p),
	void ff_audio_mix_set_func (0: binary coeff_type, 1: binary fmt, 2: AudioMix am, 3: binary descr, 4: i32 in_channels, 5: i32 out_channels, 6: i32 ptr_align, 7: i32 samples_align, 8: void mix_func),
	i32 avresample_build_matrix (0: binary matrix_encoding, 1: double matrix_out, 2: double center_mix_level, 3: double lfe_mix_level, 4: double surround_mix_level, 5: i32 normalize, 6: i32 stride, 7: i64 in_layout, 8: i64 out_layout),
	DitherContext ff_dither_alloc (0: binary in_fmt, 1: binary out_fmt, 2: AVAudioResampleContext avr, 3: i32 apply_map, 4: i32 channels, 5: i32 sample_rate),
	i32 ff_convert_dither (0: AudioData dst, 1: AudioData src, 2: DitherContext c),
	void ff_dither_free (0: DitherContext cp),
	AVAudioResampleContext avresample_alloc_context (),
	binary avresample_get_class (),
	ResampleContext ff_audio_resample_init (0: AVAudioResampleContext avr),
	i32 avresample_get_delay (0: AVAudioResampleContext avr),
	i32 avresample_set_compensation (0: AVAudioResampleContext avr, 1: i32 compensation_distance, 2: i32 sample_delta),
	i32 ff_audio_resample (0: AudioData dst, 1: AudioData src, 2: ResampleContext c),
	void ff_audio_resample_free (0: ResampleContext c),
	i32 main (0: byte argv, 1: i32 argc),
	binary avresample_configuration (),
	binary avresample_license (),
	binary avresample_convert (0: AVAudioResampleContext avr, 1: i32 in_plane_size, 2: i32 in_samples, 3: i32 out_plane_size, 4: i32 out_samples, 5: byte input, 6: byte output),
	i32 available_samples (0: AVFrame out),
	i32 avresample_available (0: AVAudioResampleContext avr),
	i32 avresample_config (0: AVAudioResampleContext avr, 1: AVFrame in, 2: AVFrame out),
	i32 avresample_convert_frame (0: AVAudioResampleContext avr, 1: AVFrame in, 2: AVFrame out),
	i32 avresample_get_matrix (0: AVAudioResampleContext avr, 1: double matrix, 2: i32 stride),
	i32 avresample_get_out_samples (0: AVAudioResampleContext avr, 1: i32 in_nb_samples),
	i32 avresample_is_open (0: AVAudioResampleContext avr),
	i32 avresample_open (0: AVAudioResampleContext avr),
	i32 avresample_read (0: AVAudioResampleContext avr, 1: i32 nb_samples, 2: byte output),
	i32 avresample_set_channel_mapping (0: AVAudioResampleContext avr, 1: binary channel_map),
	i32 avresample_set_matrix (0: AVAudioResampleContext avr, 1: binary matrix, 2: i32 stride),
	i32 convert_frame (0: AVAudioResampleContext avr, 1: AVFrame in, 2: AVFrame out),
	binary avresample_version (),
	void avresample_close (0: AVAudioResampleContext avr),
	void avresample_free (0: AVAudioResampleContext avr),
	binary ff_audio_convert_init_x86 (0: AudioConvert ac),
	binary ff_audio_mix_init_x86 (0: AudioMix am),
	binary ff_dither_init_x86 (0: binary method, 1: DitherDSPContext ddsp),
	binary wrap (0: binary in_samples),
	binary av_bswap32 (0: i32 x),
	binary av_bswap64 (0: i64 x),
	binary av_bswap16 (0: binary x),
	i32 ff_get_cpu_flags_aarch64 (),
	i64 ff_get_cpu_max_align_aarch64 (),
	binary ff_float_dsp_init_aarch64 (0: AVFloatDSPContext fdsp),
	i64 read_time (),
	i32 av_adler32_update (0: binary buf, 1: binary len, 2: i32 adler),
	binary av_aes_alloc (),
	i32 av_aes_init (0: AVAES a, 1: binary key, 2: i32 decrypt, 3: i32 key_bits),
	i32 mix_core (0: i32 a, 1: i32 b, 2: i32 c, 3: i32 d),
	void addkey_d (0: binary round_key, 1: binary src, 2: byte dst),
	void addkey_s (0: av_aes_block dst, 1: binary round_key, 2: binary src),
	void addkey (0: av_aes_block dst, 1: binary round_key, 2: binary src),
	void aes_crypt (0: AVAES a, 1: binary sbox, 2: i32 s),
	void av_aes_crypt (0: AVAES a, 1: binary src, 2: i32 count, 3: i32 decrypt, 4: byte dst, 5: byte iv),
	void mix (0: binary state, 1: i32 s1, 2: i32 s3),
	binary av_aes_ctr_alloc (),
	binary av_aes_ctr_get_iv (0: binary a),
	i32 av_aes_ctr_init (0: binary a, 1: binary key),
	void av_aes_ctr_crypt (0: binary a, 1: binary src, 2: i32 count, 3: byte dst),
	void av_aes_ctr_free (0: binary a),
	void av_aes_ctr_increment_iv (0: binary a),
	void av_aes_ctr_set_full_iv (0: binary a, 1: binary iv),
	void av_aes_ctr_set_iv (0: binary a, 1: binary iv),
	void av_aes_ctr_set_random_iv (0: binary a),
	binary av_bswap32 (0: i32 x),
	binary av_bswap16 (0: binary x),
	i32 ff_get_cpu_flags_arm (),
	i64 ff_get_cpu_max_align_arm (),
	binary ff_float_dsp_init_arm (0: AVFloatDSPContext fdsp),
	binary ff_float_dsp_init_neon (0: AVFloatDSPContext fdsp),
	binary ff_float_dsp_init_vfp (0: AVFloatDSPContext fdsp, 1: i32 cpu_flags),
	binary av_clipl_int32_arm (0: i64 a),
	binary av_clip_int16_arm (0: i32 a),
	binary av_clip_int8_arm (0: i32 a),
	binary av_clip_intp2_arm (0: i32 a, 1: i32 p),
	binary av_clip_uint16_arm (0: i32 a),
	binary av_clip_uint8_arm (0: i32 a),
	binary av_clip_uintp2_arm (0: i32 a, 1: i32 p),
	binary av_sat_add32_arm (0: i32 a, 1: i32 b),
	binary av_sat_dadd32_arm (0: i32 a, 1: i32 b),
	binary av_sat_dsub32_arm (0: i32 a, 1: i32 b),
	binary av_sat_sub32_arm (0: i32 a, 1: i32 b),
	binary AV_RN32 (0: binary p),
	binary AV_RN64 (0: binary p),
	binary AV_RN16 (0: binary p),
	binary AV_WN16 (0: i16 v, 1: void p),
	binary AV_WN32 (0: i32 v, 1: void p),
	binary AV_WN64 (0: i64 v, 1: void p),
	i64 read_time (),
	AVAudioFifo av_audio_fifo_alloc (0: binary sample_fmt, 1: i32 channels, 2: i32 nb_samples),
	i32 av_audio_fifo_drain (0: AVAudioFifo af, 1: i32 nb_samples),
	i32 av_audio_fifo_peek_at (0: AVAudioFifo af, 1: i32 nb_samples, 2: i32 offset, 3: void data),
	i32 av_audio_fifo_peek (0: AVAudioFifo af, 1: i32 nb_samples, 2: void data),
	i32 av_audio_fifo_read (0: AVAudioFifo af, 1: i32 nb_samples, 2: void data),
	i32 av_audio_fifo_realloc (0: AVAudioFifo af, 1: i32 nb_samples),
	i32 av_audio_fifo_size (0: AVAudioFifo af),
	i32 av_audio_fifo_space (0: AVAudioFifo af),
	i32 av_audio_fifo_write (0: AVAudioFifo af, 1: i32 nb_samples, 2: void data),
	void av_audio_fifo_free (0: AVAudioFifo af),
	void av_audio_fifo_reset (0: AVAudioFifo af),
	binary av_bswap16 (0: i16 x),
	binary av_bswap32 (0: i32 x),
	binary AV_RB16 (0: binary p),
	binary AV_RL16 (0: binary p),
	binary AV_RB24 (0: binary p),
	binary AV_RB32 (0: binary p),
	binary AV_RL24 (0: binary p),
	binary AV_RL32 (0: binary p),
	binary AV_RB64 (0: binary p),
	binary AV_RL64 (0: binary p),
	binary AV_WB32 (0: i32 v, 1: void p),
	binary AV_WB64 (0: i64 v, 1: void p),
	binary AV_WL64 (0: i64 v, 1: void p),
	i32 av_sscanf (0: binary format, 1: binary string),
	byte av_append_path_component (0: binary component, 1: binary path),
	byte av_asprintf (0: binary fmt),
	byte av_d2str (0: double d),
	byte av_get_token (0: binary buf, 1: binary term),
	byte av_strireplace (0: binary from, 1: binary str, 2: binary to),
	byte av_stristr (0: binary s1, 1: binary s2),
	byte av_strnstr (0: binary haystack, 1: binary needle, 2: i64 hay_length),
	byte av_strtok (0: byte saveptr, 1: byte s, 2: binary delim),
	binary av_basename (0: binary path),
	binary av_dirname (0: byte path),
	i32 av_escape (0: binary mode, 1: byte dst, 2: binary special_chars, 3: binary src, 4: i32 flags),
	i32 av_match_list (0: byte separator, 1: binary list, 2: binary name),
	i32 av_match_name (0: binary names, 1: binary name),
	i32 av_strcasecmp (0: binary a, 1: binary b),
	i32 av_stristart (0: binary ptr, 1: binary pfx, 2: binary str),
	i32 av_strncasecmp (0: binary a, 1: binary b, 2: i64 n),
	i32 av_strstart (0: binary ptr, 1: binary pfx, 2: binary str),
	i32 av_utf8_decode (0: binary bufp, 1: binary buf_end, 2: i32 codep, 3: binary flags),
	i64 av_strlcatf (0: byte dst, 1: binary fmt, 2: i64 size),
	i64 av_strlcat (0: byte dst, 1: binary src, 2: i64 size),
	i64 av_strlcpy (0: byte dst, 1: binary src, 2: i64 size),
	binary av_isdigit (0: i32 c),
	binary av_isgraph (0: i32 c),
	binary av_isspace (0: i32 c),
	binary av_isxdigit (0: i32 c),
	binary av_tolower (0: i32 c),
	binary av_toupper (0: i32 c),
	binary av_strnlen (0: binary s, 1: binary len),
	void av_x_if_null (0: binary p, 1: binary x),
	byte av_base64_encode (0: byte out, 1: binary in, 2: i32 in_size, 3: i32 out_size),
	i32 av_base64_decode (0: binary in_str, 1: i32 out_size, 2: byte out),
	binary av_bswap32 (0: i32 x),
	i64 read_time (),
	AVBlowfish av_blowfish_alloc (),
	binary av_blowfish_init (0: AVBlowfish ctx, 1: binary key, 2: i32 key_len),
	void av_blowfish_crypt_ecb (0: AVBlowfish ctx, 1: i32 decrypt, 2: i32 xl, 3: i32 xr),
	void av_blowfish_crypt (0: AVBlowfish ctx, 1: binary src, 2: i32 count, 3: i32 decrypt, 4: byte dst, 5: byte iv),
	i32 av_bprint_finalize (0: binary buf, 1: byte ret_str),
	void av_bprint_append_data (0: binary buf, 1: binary data, 2: binary size),
	void av_bprint_chars (0: binary buf, 1: byte c, 2: binary n),
	void av_bprint_clear (0: binary buf),
	void av_bprint_escape (0: binary mode, 1: binary dstbuf, 2: binary special_chars, 3: binary src, 4: i32 flags),
	void av_bprint_get_buffer (0: binary buf, 1: binary actual_size, 2: binary mem, 3: binary size),
	void av_bprint_init_for_buffer (0: binary buf, 1: byte buffer, 2: binary size),
	void av_bprint_init (0: binary buf, 1: binary size_init, 2: binary size_max),
	void av_bprint_strftime (0: binary buf, 1: binary fmt, 2: binary tm),
	void av_bprintf (0: binary buf, 1: binary fmt),
	void av_vbprintf (0: binary buf, 1: binary fmt, 2: binary vl_arg),
	i32 av_bprint_is_complete (0: binary buf),
	binary av_bswap16 (0: i16 x),
	binary av_bswap32 (0: i32 x),
	binary av_bswap64 (0: i64 x),
	AVBufferPool av_buffer_pool_init2 (0: binary alloc, 1: i32 size, 2: binary pool_free, 3: void opaque),
	AVBufferPool av_buffer_pool_init (0: binary alloc, 1: i32 size),
	AVBufferRef av_buffer_allocz (0: i32 size),
	AVBufferRef av_buffer_alloc (0: i32 size),
	AVBufferRef av_buffer_create (0: i32 flags, 1: i32 size, 2: byte data, 3: binary free, 4: void opaque),
	AVBufferRef av_buffer_pool_get (0: AVBufferPool pool),
	AVBufferRef av_buffer_ref (0: AVBufferRef buf),
	i32 av_buffer_get_ref_count (0: binary buf),
	i32 av_buffer_is_writable (0: binary buf),
	i32 av_buffer_make_writable (0: AVBufferRef pbuf),
	i32 av_buffer_realloc (0: AVBufferRef pbuf, 1: i32 size),
	void av_buffer_get_opaque (0: binary buf),
	void av_buffer_default_free (0: byte data, 1: void opaque),
	void av_buffer_pool_uninit (0: AVBufferPool ppool),
	void av_buffer_unref (0: AVBufferRef buf),
	binary av_camellia_alloc (),
	binary av_camellia_init (0: AVCAMELLIA cs, 1: binary key, 2: i32 key_bits),
	void av_camellia_crypt (0: AVCAMELLIA cs, 1: binary src, 2: i32 count, 3: i32 decrypt, 4: byte dst, 5: byte iv),
	binary av_cast5_alloc (),
	binary av_cast5_init (0: AVCAST5 cs, 1: binary key, 2: i32 key_bits),
	void av_cast5_crypt2 (0: AVCAST5 cs, 1: binary src, 2: i32 count, 3: i32 decrypt, 4: byte dst, 5: byte iv),
	void av_cast5_crypt (0: AVCAST5 cs, 1: binary src, 2: i32 count, 3: i32 decrypt, 4: byte dst),
	binary av_get_channel_description (0: i64 channel),
	binary av_get_channel_name (0: i64 channel),
	i64 av_get_default_channel_layout (0: i32 nb_channels),
	i32 av_get_channel_layout_channel_index (0: i64 channel_layout, 1: i64 channel),
	i32 av_get_channel_layout_nb_channels (0: i64 channel_layout),
	i32 av_get_extended_channel_layout (0: binary name, 1: i32 nb_channels, 2: i64 channel_layout),
	i32 av_get_standard_channel_layout (0: binary name, 1: i64 layout, 2: binary index),
	i64 av_channel_layout_extract_channel (0: i32 index, 1: i64 channel_layout),
	i64 av_get_channel_layout (0: binary name),
	void av_bprint_channel_layout (0: binary bp, 1: i32 nb_channels, 2: i64 channel_layout),
	void av_get_channel_layout_string (0: byte buf, 1: i32 buf_size, 2: i32 nb_channels, 3: i64 channel_layout),
	avpriv_trc_function avpriv_get_trc_function_from_trc (0: binary trc),
	double avpriv_get_gamma_from_trc (0: binary trc),
	i32 C_JPEG_TO_CCIR (0: i32 y),
	binary av_clipd_c (0: double amax, 1: double amin, 2: double a),
	binary av_clipf_c (0: double amax, 1: double amin, 2: double a),
	binary av_clip_int16_c (0: i32 a),
	binary av_clipl_int32_c (0: i64 a),
	binary av_clip64_c (0: i64 amax, 1: i64 amin, 2: i64 a),
	binary av_clip_int8_c (0: i32 a),
	binary av_ceil_log2_c (0: i32 x),
	binary av_clip_c (0: i32 amax, 1: i32 amin, 2: i32 a),
	binary av_clip_intp2_c (0: i32 a, 1: i32 p),
	binary av_parity_c (0: i32 v),
	binary av_popcount64_c (0: i64 x),
	binary av_popcount_c (0: i32 x),
	binary av_clip_uint16_c (0: i32 a),
	binary av_clip_uint8_c (0: i32 a),
	binary av_clip_uintp2_c (0: i32 a, 1: i32 p),
	binary av_mod_uintp2_c (0: binary a, 1: binary p),
	binary av_sat_add32_c (0: i32 a, 1: i32 b),
	binary av_sat_dadd32_c (0: i32 a, 1: i32 b),
	binary av_sat_dsub32_c (0: i32 a, 1: i32 b),
	binary av_sat_sub32_c (0: i32 a, 1: i32 b),
	i32 av_cpu_count (),
	i32 av_get_cpu_flags (),
	i32 av_parse_cpu_caps (0: binary s, 1: binary flags),
	i32 av_parse_cpu_flags (0: binary s),
	i64 av_cpu_max_align (),
	void av_force_cpu_flags (0: i32 arg),
	void av_set_cpu_flags_mask (0: i32 mask),
	binary av_crc_get_table (0: AVCRCId crc_id),
	i32 av_crc (0: binary ctx, 1: binary buffer, 2: i64 length, 3: i32 crc),
	i32 ff_cuda_check (0: binary err, 1: binary func, 2: void avctx, 3: void cuGetErrorName_fn, 4: void cuGetErrorString_fn),
	AVDES av_des_alloc (),
	i32 av_des_init (0: AVDES d, 1: binary decrypt, 2: binary key, 3: i32 key_bits),
	void av_des_crypt (0: AVDES d, 1: binary src, 2: i32 count, 3: i32 decrypt, 4: byte dst, 5: byte iv),
	void av_des_mac (0: AVDES d, 1: binary src, 2: i32 count, 3: byte dst),
	AVDictionaryEntry av_dict_get (0: binary m, 1: binary prev, 2: binary key, 3: i32 flags),
	i32 av_dict_copy (0: AVDictionary dst, 1: binary src, 2: i32 flags),
	i32 av_dict_count (0: binary m),
	i32 av_dict_get_string (0: byte buffer, 1: binary m, 2: binary key_val_sep, 3: binary pairs_sep),
	i32 av_dict_parse_string (0: AVDictionary pm, 1: binary key_val_sep, 2: binary pairs_sep, 3: binary str, 4: i32 flags),
	i32 av_dict_set_int (0: AVDictionary pm, 1: binary key, 2: i64 value, 3: i32 flags),
	i32 av_dict_set (0: AVDictionary pm, 1: binary key, 2: binary value, 3: i32 flags),
	i32 avpriv_dict_set_timestamp (0: AVDictionary dict, 1: binary key, 2: i64 timestamp),
	void av_dict_free (0: AVDictionary pm),
	double av_display_rotation_get (0: binary matrix),
	void av_display_matrix_flip (0: binary matrix, 1: i32 hflip, 2: i32 vflip),
	void av_display_rotation_set (0: double angle, 1: binary matrix),
	AVDownmixInfo av_downmix_info_update_side_data (0: AVFrame frame),
	AVEncryptionInfo av_encryption_info_alloc (0: i32 iv_size, 1: i32 key_id_size, 2: i32 subsample_count),
	AVEncryptionInfo av_encryption_info_clone (0: binary info),
	AVEncryptionInfo av_encryption_info_get_side_data (0: binary buffer, 1: i64 size),
	AVEncryptionInitInfo av_encryption_init_info_alloc (0: i32 data_size, 1: i32 key_id_size, 2: i32 num_key_ids, 3: i32 system_id_size),
	AVEncryptionInitInfo av_encryption_init_info_get_side_data (0: binary side_data, 1: i64 side_data_size),
	byte av_encryption_info_add_side_data (0: binary info, 1: i64 size),
	byte av_encryption_init_info_add_side_data (0: binary info, 1: i64 side_data_size),
	void av_encryption_info_free (0: AVEncryptionInfo info),
	void av_encryption_init_info_free (0: AVEncryptionInitInfo info),
	i32 av_strerror (0: byte errbuf, 1: i32 errnum, 2: i64 errbuf_size),
	byte av_make_error_string (0: byte errbuf, 1: i32 errnum, 2: binary errbuf_size),
	double av_expr_eval (0: AVExpr e, 1: binary const_values, 2: void opaque),
	double av_strtod (0: byte tail, 1: binary numstr),
	i32 av_expr_parse_and_eval (0: binary const_names, 1: binary func1_names, 2: binary func2_names, 3: binary s, 4: binary const_values, 5: binary funcs1, 6: binary funcs2, 7: double d, 8: i32 log_offset, 9: void log_ctx, 10: void opaque),
	i32 av_expr_parse (0: AVExpr expr, 1: binary const_names, 2: binary func1_names, 3: binary func2_names, 4: binary s, 5: binary funcs1, 6: binary funcs2, 7: i32 log_offset, 8: void log_ctx),
	void av_expr_free (0: AVExpr e),
	binary ff_exp10 (0: double x),
	binary ff_exp10f (0: double x),
	binary ff_fast_powf (0: double x, 1: double y),
	AVFifoBuffer av_fifo_alloc_array (0: i64 nmemb, 1: i64 size),
	AVFifoBuffer av_fifo_alloc (0: binary size),
	i32 av_fifo_generic_peek_at (0: AVFifoBuffer f, 1: i32 buf_size, 2: i32 offset, 3: binary func, 4: void dest),
	i32 av_fifo_generic_peek (0: AVFifoBuffer f, 1: i32 buf_size, 2: binary func, 3: void dest),
	i32 av_fifo_generic_read (0: AVFifoBuffer f, 1: i32 buf_size, 2: binary func, 3: void dest),
	i32 av_fifo_generic_write (0: AVFifoBuffer f, 1: binary func, 2: i32 size, 3: void src),
	i32 av_fifo_grow (0: AVFifoBuffer f, 1: binary size),
	i32 av_fifo_realloc2 (0: AVFifoBuffer f, 1: binary new_size),
	i32 av_fifo_size (0: binary f),
	i32 av_fifo_space (0: binary f),
	void av_fifo_drain (0: AVFifoBuffer f, 1: i32 size),
	void av_fifo_freep (0: AVFifoBuffer f),
	void av_fifo_free (0: AVFifoBuffer f),
	void av_fifo_reset (0: AVFifoBuffer f),
	byte av_fifo_peek2 (0: binary f, 1: i32 offs),
	i32 av_file_map (0: binary filename, 1: i32 log_offset, 2: i64 size, 3: byte bufptr, 4: void log_ctx),
	i32 av_tempfile (0: byte filename, 1: binary prefix, 2: i32 log_offset, 3: void log_ctx),
	void av_file_unmap (0: i64 size, 1: byte bufptr),
	binary av_fopen_utf8 (0: binary mode, 1: binary path),
	i32 avpriv_open (0: binary filename, 1: i32 flags),
	i32 avpriv_tempfile (0: byte filename, 1: binary prefix, 2: i32 log_offset, 3: void log_ctx),
	AVFixedDSPContext avpriv_alloc_fixed_dsp (0: i32 bit_exact),
	binary fixed_sqrt (0: i32 bits, 1: i32 x),
	binary avpriv_float_dsp_alloc (0: i32 bit_exact),
	double avpriv_scalarproduct_float_c (0: binary v1, 1: binary v2, 2: i32 len),
	AVBufferRef av_frame_get_plane_buffer (0: AVFrame frame, 1: i32 plane),
	AVFrame av_frame_alloc (),
	AVFrame av_frame_clone (0: binary src),
	AVFrameSideData av_frame_get_side_data (0: binary type, 1: binary frame),
	AVFrameSideData av_frame_new_side_data_from_buf (0: binary type, 1: AVBufferRef buf, 2: AVFrame frame),
	AVFrameSideData av_frame_new_side_data (0: binary type, 1: AVFrame frame, 2: i32 size),
	binary av_frame_side_data_name (0: binary type),
	binary av_get_colorspace_name (0: binary val),
	byte av_frame_get_qp_table (0: AVFrame f, 1: i32 stride, 2: i32 type),
	i32 av_frame_apply_cropping (0: AVFrame frame, 1: i32 flags),
	i32 av_frame_copy_props (0: AVFrame dst, 1: binary src),
	i32 av_frame_copy (0: AVFrame dst, 1: binary src),
	i32 av_frame_get_buffer (0: AVFrame frame, 1: i32 align),
	i32 av_frame_is_writable (0: AVFrame frame),
	i32 av_frame_make_writable (0: AVFrame frame),
	i32 av_frame_ref (0: AVFrame dst, 1: binary src),
	i32 av_frame_set_qp_table (0: AVBufferRef buf, 1: AVFrame f, 2: i32 qp_type, 3: i32 stride),
	void av_frame_free (0: AVFrame frame),
	void av_frame_move_ref (0: AVFrame dst, 1: AVFrame src),
	void av_frame_remove_side_data (0: binary type, 1: AVFrame frame),
	void av_frame_unref (0: AVFrame frame),
	binary av_hash_get_name (0: binary ctx),
	binary av_hash_names (0: i32 i),
	i32 av_hash_alloc (0: AVHashContext ctx, 1: binary name),
	i32 av_hash_get_size (0: binary ctx),
	void av_hash_final_b64 (0: binary ctx, 1: i32 size, 2: byte dst),
	void av_hash_final_bin (0: binary ctx, 1: i32 size, 2: byte dst),
	void av_hash_final_hex (0: binary ctx, 1: i32 size, 2: byte dst),
	void av_hash_final (0: AVHashContext ctx, 1: byte dst),
	void av_hash_freep (0: AVHashContext ctx),
	void av_hash_init (0: AVHashContext ctx),
	void av_hash_update (0: AVHashContext ctx, 1: binary src, 2: i32 len),
	AVDynamicHDRPlus av_dynamic_hdr_plus_alloc (0: i64 size),
	AVDynamicHDRPlus av_dynamic_hdr_plus_create_side_data (0: AVFrame frame),
	binary av_hmac_alloc (0: binary type),
	i32 av_hmac_calc (0: AVHMAC c, 1: binary data, 2: binary key, 3: byte out, 4: binary keylen, 5: binary len, 6: binary outlen),
	i32 av_hmac_final (0: AVHMAC c, 1: byte out, 2: binary outlen),
	void av_hmac_free (0: AVHMAC c),
	void av_hmac_init (0: AVHMAC c, 1: binary key, 2: binary keylen),
	void av_hmac_update (0: AVHMAC c, 1: binary data, 2: binary len),
	binary av_hwdevice_find_type_by_name (0: binary name),
	binary av_hwdevice_iterate_types (0: binary prev),
	AVBufferRef av_hwdevice_ctx_alloc (0: binary type),
	AVBufferRef av_hwframe_ctx_alloc (0: AVBufferRef device_ref_in),
	AVHWFramesConstraints av_hwdevice_get_hwframe_constraints (0: AVBufferRef ref, 1: binary hwconfig),
	binary av_hwdevice_get_type_name (0: binary type),
	i32 av_hwdevice_ctx_create_derived (0: binary type, 1: AVBufferRef dst_ref_ptr, 2: AVBufferRef src_ref, 3: i32 flags),
	i32 av_hwdevice_ctx_create (0: binary type, 1: AVBufferRef pdevice_ref, 2: AVDictionary opts, 3: binary device, 4: i32 flags),
	i32 av_hwdevice_ctx_init (0: AVBufferRef ref),
	i32 av_hwframe_ctx_create_derived (0: binary format, 1: AVBufferRef derived_frame_ctx, 2: AVBufferRef derived_device_ctx, 3: AVBufferRef source_frame_ctx, 4: i32 flags),
	i32 av_hwframe_ctx_init (0: AVBufferRef ref),
	i32 av_hwframe_get_buffer (0: AVBufferRef hwframe_ref, 1: AVFrame frame, 2: i32 flags),
	i32 av_hwframe_map (0: AVFrame dst, 1: binary src, 2: i32 flags),
	i32 av_hwframe_transfer_data (0: AVFrame dst, 1: binary src, 2: i32 flags),
	i32 av_hwframe_transfer_get_formats (0: binary dir, 1: binary formats, 2: AVBufferRef hwframe_ref, 3: i32 flags),
	i32 ff_hwframe_map_create (0: AVBufferRef hwframe_ref, 1: AVFrame dst, 2: binary src, 3: binary unmap, 4: void priv),
	i32 ff_hwframe_map_replace (0: AVFrame dst, 1: binary src),
	void av_hwdevice_hwconfig_alloc (0: AVBufferRef ref),
	void av_hwframe_constraints_free (0: AVHWFramesConstraints constraints),
	binary opencl_mem_flags_for_mapping (0: i32 map_flags),
	binary av_map_videotoolbox_format_to_pixfmt (0: i32 cv_fmt),
	i32 av_map_videotoolbox_format_from_pixfmt (0: binary pix_fmt),
	i32 av_image_alloc (0: binary pix_fmt, 1: binary linesizes, 2: i32 align, 3: i32 h, 4: i32 w, 5: binary pointers),
	i32 av_image_check_sar (0: AVRational sar, 1: binary h, 2: binary w),
	i32 av_image_check_size2 (0: binary pix_fmt, 1: i64 max_pixels, 2: i32 log_offset, 3: binary h, 4: binary w, 5: void log_ctx),
	i32 av_image_check_size (0: i32 log_offset, 1: binary h, 2: binary w, 3: void log_ctx),
	i32 av_image_copy_to_buffer (0: binary pix_fmt, 1: binary src_linesize, 2: binary src_data, 3: i32 align, 4: i32 dst_size, 5: i32 height, 6: i32 width, 7: byte dst),
	i32 av_image_fill_arrays (0: binary pix_fmt, 1: binary src, 2: binary dst_linesize, 3: i32 align, 4: i32 height, 5: i32 width, 6: binary dst_data),
	i32 av_image_fill_black (0: binary range, 1: binary pix_fmt, 2: binary dst_linesize, 3: i32 height, 4: i32 width, 5: binary dst_data),
	i32 av_image_fill_linesizes (0: binary pix_fmt, 1: binary linesizes, 2: i32 width),
	i32 av_image_fill_pointers (0: binary pix_fmt, 1: binary linesizes, 2: i32 height, 3: binary data, 4: byte ptr),
	i32 av_image_get_buffer_size (0: binary pix_fmt, 1: i32 align, 2: i32 height, 3: i32 width),
	i32 av_image_get_linesize (0: binary pix_fmt, 1: i32 plane, 2: i32 width),
	i32 avpriv_set_systematic_pal2 (0: binary pix_fmt, 1: binary pal),
	i32 image_get_linesize (0: binary desc, 1: i32 max_step_comp, 2: i32 max_step, 3: i32 plane, 4: i32 width),
	void av_image_copy_plane (0: binary src, 1: i32 bytewidth, 2: i32 dst_linesize, 3: i32 height, 4: i32 src_linesize, 5: byte dst),
	void av_image_copy_uc_from (0: binary pix_fmt, 1: binary dst_linesizes, 2: binary src_linesizes, 3: binary src_data, 4: i32 height, 5: i32 width, 6: binary dst_data),
	void av_image_copy (0: binary pix_fmt, 1: binary src_linesizes, 2: binary src_data, 3: binary dst_linesizes, 4: i32 height, 5: i32 width, 6: binary dst_data),
	void av_image_fill_max_pixsteps (0: binary pixdesc, 1: binary max_pixstep_comps, 2: binary max_pixsteps),
	AVInteger av_add_i (0: AVInteger a, 1: AVInteger b),
	AVInteger av_div_i (0: AVInteger a, 1: AVInteger b),
	AVInteger av_int2i (0: i64 a),
	AVInteger av_mod_i (0: AVInteger quot, 1: AVInteger a, 2: AVInteger b),
	AVInteger av_mul_i (0: AVInteger a, 1: AVInteger b),
	AVInteger av_shr_i (0: AVInteger a, 1: i32 s),
	AVInteger av_sub_i (0: AVInteger a, 1: AVInteger b),
	i64 av_i2int (0: AVInteger a),
	i32 av_cmp_i (0: AVInteger a, 1: AVInteger b),
	i32 av_log2_i (0: AVInteger a),
	binary ff_rint64_clip (0: double a, 1: i64 amax, 2: i64 amin),
	binary avpriv_mirror (0: i32 w, 1: i32 x),
	binary av_int2double (0: i64 i),
	binary av_int2float (0: i32 i),
	binary av_float2int (0: double f),
	binary av_double2int (0: double f),
	i32 av_log2_16bit (0: binary v),
	i32 av_log2 (0: binary v),
	binary ff_ctz_c (0: i32 v),
	binary ff_ctzll_c (0: binary v),
	binary ff_log2_16bit_c (0: binary v),
	binary ff_log2_c (0: binary v),
	binary ff_clz_c (0: binary x),
	binary av_lfg_init (0: AVLFG c, 1: binary seed),
	i32 av_lfg_init_from_data (0: AVLFG c, 1: binary data, 2: binary length),
	void av_bmg_get (0: AVLFG lfg, 1: binary out),
	binary av_lfg_get (0: AVLFG c),
	binary av_mlfg_get (0: AVLFG c),
	binary round (0: double x),
	binary trunc (0: double x),
	binary roundf (0: double x),
	binary truncf (0: double x),
	binary avpriv_isfinitef (0: double x),
	binary avpriv_isfinite (0: double x),
	binary avpriv_isinff (0: double x),
	binary avpriv_isinf (0: double x),
	binary avpriv_isnanf (0: double x),
	binary avpriv_isnan (0: double x),
	binary lrintf (0: double x),
	binary lrint (0: double x),
	binary cbrt (0: double x),
	binary copysign (0: double x, 1: double y),
	binary cbrtf (0: double x),
	binary hypot (0: double x, 1: double y),
	double erf (0: double z),
	double ff_eval_poly (0: binary coeff, 1: double x, 2: i32 size),
	double rint (0: double x),
	binary avpriv_init_lls (0: LLSModel m, 1: i32 indep_count),
	void avpriv_solve_lls (0: LLSModel m, 1: double threshold, 2: binary min_order),
	AVClassCategory av_default_get_category (0: void ptr),
	binary av_default_item_name (0: void ptr),
	i32 av_log_format_line2 (0: byte line, 1: binary fmt, 2: i32 print_prefix, 3: i32 level, 4: i32 line_size, 5: binary vl, 6: void ptr),
	i32 av_log_get_flags (),
	i32 av_log_get_level (),
	void av_log_default_callback (0: binary fmt, 1: i32 level, 2: binary vl, 3: void ptr),
	void av_log_format_line (0: byte line, 1: binary fmt, 2: i32 print_prefix, 3: i32 level, 4: i32 line_size, 5: binary vl, 6: void ptr),
	void av_log_set_callback (0: binary callback),
	void av_log_set_flags (0: i32 arg),
	void av_log_set_level (0: i32 level),
	void av_log (0: binary fmt, 1: i32 level, 2: void avcl),
	void av_vlog (0: binary fmt, 1: i32 level, 2: binary vl, 3: void avcl),
	void avpriv_report_missing_feature (0: binary msg, 1: void avc),
	void avpriv_request_sample (0: binary msg, 1: void avc),
	i32 av_lzo1x_decode (0: binary in, 1: i32 inlen, 2: i32 outlen, 3: void out),
	i32 get_byte (0: LZOContext c),
	i32 get_len (0: LZOContext c, 1: i32 mask, 2: i32 x),
	void copy_backptr (0: LZOContext c, 1: i32 back, 2: i32 cnt),
	void copy (0: LZOContext c, 1: i32 cnt),
	AVContentLightMetadata av_content_light_metadata_alloc (0: i64 size),
	AVContentLightMetadata av_content_light_metadata_create_side_data (0: AVFrame frame),
	AVMasteringDisplayMetadata av_mastering_display_metadata_alloc (),
	AVMasteringDisplayMetadata av_mastering_display_metadata_create_side_data (0: AVFrame frame),
	i64 av_add_stable (0: AVRational inc_tb, 1: AVRational ts_tb, 2: i64 inc, 3: i64 ts),
	i64 av_compare_mod (0: i64 a, 1: i64 b, 2: i64 mod),
	i64 av_gcd (0: i64 a, 1: i64 b),
	i64 av_rescale_delta (0: AVRational fs_tb, 1: AVRational in_tb, 2: AVRational out_tb, 3: i64 last, 4: i64 in_ts, 5: i32 duration),
	i64 av_rescale_q_rnd (0: binary rnd, 1: AVRational bq, 2: AVRational cq, 3: i64 a),
	i64 av_rescale_q (0: AVRational bq, 1: AVRational cq, 2: i64 a),
	i64 av_rescale_rnd (0: binary rnd, 1: i64 a, 2: i64 b, 3: i64 c),
	i64 av_rescale (0: i64 a, 1: i64 b, 2: i64 c),
	i32 av_compare_ts (0: AVRational tb_a, 1: AVRational tb_b, 2: i64 ts_a, 3: i64 ts_b),
	binary av_md5_alloc (),
	void av_md5_final (0: AVMD5 ctx, 1: byte dst),
	void av_md5_init (0: AVMD5 ctx),
	void av_md5_sum (0: binary len, 1: binary src, 2: byte dst),
	void av_md5_update (0: AVMD5 ctx, 1: binary src, 2: i32 len),
	byte av_strdup (0: binary s),
	byte av_strndup (0: binary s, 1: i64 len),
	i32 av_dynarray_add_nofree (0: i32 nb_ptr, 1: void elem, 2: void tab_ptr),
	i32 av_reallocp_array (0: i64 nmemb, 1: i64 size, 2: void ptr),
	i32 av_reallocp (0: i64 size, 1: void ptr),
	void av_calloc (0: i64 nmemb, 1: i64 size),
	void av_dynarray2_add (0: binary elem_data, 1: i32 nb_ptr, 2: i64 elem_size, 3: void tab_ptr),
	void av_fast_realloc (0: i64 min_size, 1: binary size, 2: void ptr),
	void av_malloc_array (0: i64 nmemb, 1: i64 size),
	void av_mallocz_array (0: i64 nmemb, 1: i64 size),
	void av_mallocz (0: i64 size),
	void av_malloc (0: i64 size),
	void av_memdup (0: binary p, 1: i64 size),
	void av_realloc_array (0: i64 nmemb, 1: i64 size, 2: void ptr),
	void av_realloc_f (0: i64 elsize, 1: i64 nelem, 2: void ptr),
	void av_realloc (0: i64 size, 1: void ptr),
	void av_dynarray_add (0: i32 nb_ptr, 1: void elem, 2: void tab_ptr),
	void av_fast_mallocz (0: i64 min_size, 1: binary size, 2: void ptr),
	void av_fast_malloc (0: i64 min_size, 1: binary size, 2: void ptr),
	void av_freep (0: void arg),
	void av_free (0: void ptr),
	void av_max_alloc (0: i64 max),
	void av_memcpy_backptr (0: i32 back, 1: i32 cnt, 2: byte dst),
	i32 av_size_mult (0: binary r, 1: binary a, 2: binary b),
	i32 ff_fast_malloc (0: i32 zero_realloc, 1: binary min_size, 2: binary size, 3: void ptr),
	void ff_float_dsp_init_mips (0: AVFloatDSPContext fdsp),
	binary AV_RN32 (0: binary p),
	binary lrintf_mips (0: double x),
	AVMurMur3 av_murmur3_alloc (),
	i64 fmix (0: i64 k),
	i64 get_k1 (0: binary src),
	i64 get_k2 (0: binary src),
	i64 update_h1 (0: i64 h1, 1: i64 h2, 2: i64 k),
	i64 update_h2 (0: i64 h1, 1: i64 h2, 2: i64 k),
	void av_murmur3_final (0: AVMurMur3 c, 1: binary dst),
	void av_murmur3_init_seeded (0: AVMurMur3 c, 1: i64 seed),
	void av_murmur3_init (0: AVMurMur3 c),
	void av_murmur3_update (0: AVMurMur3 c, 1: binary src, 2: i32 len),
	binary av_opt_child_class_next (0: binary parent, 1: binary prev),
	binary av_opt_find2 (0: binary name, 1: binary unit, 2: i32 opt_flags, 3: i32 search_flags, 4: void target_obj, 5: void obj),
	binary av_opt_find (0: binary name, 1: binary unit, 2: i32 opt_flags, 3: i32 search_flags, 4: void obj),
	binary av_opt_next (0: binary last, 1: binary obj),
	i32 av_opt_copy (0: binary src, 1: void dst),
	i32 av_opt_flag_is_set (0: binary field_name, 1: binary flag_name, 2: void obj),
	i32 av_opt_get_channel_layout (0: binary name, 1: i64 cl, 2: i32 search_flags, 3: void obj),
	i32 av_opt_get_dict_val (0: AVDictionary out_val, 1: binary name, 2: i32 search_flags, 3: void obj),
	i32 av_opt_get_double (0: binary name, 1: double out_val, 2: i32 search_flags, 3: void obj),
	i32 av_opt_get_image_size (0: binary name, 1: i32 h_out, 2: i32 w_out, 3: i32 search_flags, 4: void obj),
	i32 av_opt_get_int (0: binary name, 1: i64 out_val, 2: i32 search_flags, 3: void obj),
	i32 av_opt_get_key_value (0: byte rkey, 1: byte rval, 2: binary ropts, 3: binary key_val_sep, 4: binary pairs_sep, 5: binary flags),
	i32 av_opt_get_pixel_fmt (0: binary out_fmt, 1: binary name, 2: i32 search_flags, 3: void obj),
	i32 av_opt_get_q (0: AVRational out_val, 1: binary name, 2: i32 search_flags, 3: void obj),
	i32 av_opt_get_sample_fmt (0: binary out_fmt, 1: binary name, 2: i32 search_flags, 3: void obj),
	i32 av_opt_get_video_rate (0: AVRational out_val, 1: binary name, 2: i32 search_flags, 3: void obj),
	i32 av_opt_get (0: binary name, 1: i32 search_flags, 2: byte out_val, 3: void obj),
	i32 av_opt_is_set_to_default_by_name (0: binary name, 1: i32 search_flags, 2: void obj),
	i32 av_opt_is_set_to_default (0: binary o, 1: void obj),
	i32 av_opt_query_ranges_default (0: AVOptionRanges ranges_arg, 1: binary key, 2: i32 flags, 3: void obj),
	i32 av_opt_query_ranges (0: AVOptionRanges ranges_arg, 1: binary key, 2: i32 flags, 3: void obj),
	i32 av_opt_serialize (0: byte buffer, 1: binary key_val_sep, 2: binary pairs_sep, 3: i32 flags, 4: i32 opt_flags, 5: void obj),
	i32 av_opt_set_bin (0: binary name, 1: binary val, 2: i32 len, 3: i32 search_flags, 4: void obj),
	i32 av_opt_set_channel_layout (0: binary name, 1: i64 cl, 2: i32 search_flags, 3: void obj),
	i32 av_opt_set_dict2 (0: AVDictionary options, 1: i32 search_flags, 2: void obj),
	i32 av_opt_set_dict_val (0: binary val, 1: binary name, 2: i32 search_flags, 3: void obj),
	i32 av_opt_set_dict (0: AVDictionary options, 1: void obj),
	i32 av_opt_set_double (0: binary name, 1: double val, 2: i32 search_flags, 3: void obj),
	i32 av_opt_set_from_string (0: binary shorthand, 1: binary key_val_sep, 2: binary opts, 3: binary pairs_sep, 4: void ctx),
	i32 av_opt_set_image_size (0: binary name, 1: i32 h, 2: i32 search_flags, 3: i32 w, 4: void obj),
	i32 av_opt_set_int (0: binary name, 1: i64 val, 2: i32 search_flags, 3: void obj),
	i32 av_opt_set_pixel_fmt (0: binary fmt, 1: binary name, 2: i32 search_flags, 3: void obj),
	i32 av_opt_set_q (0: AVRational val, 1: binary name, 2: i32 search_flags, 3: void obj),
	i32 av_opt_set_sample_fmt (0: binary fmt, 1: binary name, 2: i32 search_flags, 3: void obj),
	i32 av_opt_set_video_rate (0: AVRational val, 1: binary name, 2: i32 search_flags, 3: void obj),
	i32 av_opt_set (0: binary name, 1: binary val, 2: i32 search_flags, 3: void obj),
	i32 av_opt_show2 (0: i32 rej_flags, 1: i32 req_flags, 2: void av_log_obj, 3: void obj),
	i32 av_set_options_string (0: binary key_val_sep, 1: binary opts, 2: binary pairs_sep, 3: void ctx),
	void av_opt_child_next (0: void obj, 1: void prev),
	void av_opt_ptr (0: binary class, 1: binary name, 2: void obj),
	void av_opt_freep_ranges (0: AVOptionRanges rangesp),
	void av_opt_free (0: void obj),
	void av_opt_set_defaults2 (0: i32 flags, 1: i32 mask, 2: void s),
	void av_opt_set_defaults (0: void s),
	byte av_small_strptime (0: binary dt, 1: binary fmt, 2: binary p),
	binary av_get_known_color_name (0: binary rgbp, 1: i32 color_idx),
	i32 av_find_info_tag (0: byte arg, 1: binary info, 2: binary tag1, 3: i32 arg_size),
	i32 av_parse_color (0: binary color_string, 1: i32 slen, 2: byte rgba_color, 3: void log_ctx),
	i32 av_parse_ratio (0: AVRational q, 1: binary str, 2: i32 log_offset, 3: i32 max, 4: void log_ctx),
	i32 av_parse_time (0: binary timestr, 1: i64 timeval, 2: i32 duration),
	i32 av_parse_video_rate (0: AVRational rate, 1: binary arg),
	i32 av_parse_video_size (0: binary str, 1: i32 height_ptr, 2: i32 width_ptr),
	binary av_timegm (0: binary tm),
	PCA ff_pca_init (0: i32 n),
	i32 ff_pca (0: PCA pca, 1: double eigenvalue, 2: double eigenvector),
	void ff_pca_add (0: PCA pca, 1: binary v),
	void ff_pca_free (0: PCA pca),
	binary av_find_best_pix_fmt_of_2 (0: binary dst_pix_fmt1, 1: binary dst_pix_fmt2, 2: binary src_pix_fmt, 3: i32 loss_ptr, 4: i32 has_alpha),
	binary av_get_pix_fmt (0: binary name),
	binary av_pix_fmt_desc_get_id (0: binary desc),
	binary av_pix_fmt_swap_endianness (0: binary pix_fmt),
	byte av_get_pix_fmt_string (0: binary pix_fmt, 1: byte buf, 2: i32 buf_size),
	binary av_pix_fmt_desc_get (0: binary pix_fmt),
	binary av_pix_fmt_desc_next (0: binary prev),
	binary av_chroma_location_name (0: binary location),
	binary av_color_primaries_name (0: binary primaries),
	binary av_color_range_name (0: binary range),
	binary av_color_space_name (0: binary space),
	binary av_color_transfer_name (0: binary transfer),
	binary av_get_pix_fmt_name (0: binary pix_fmt),
	i32 av_chroma_location_from_name (0: binary name),
	i32 av_color_primaries_from_name (0: binary name),
	i32 av_color_range_from_name (0: binary name),
	i32 av_color_space_from_name (0: binary name),
	i32 av_color_transfer_from_name (0: binary name),
	i32 av_get_bits_per_pixel (0: binary pixdesc),
	i32 av_get_padded_bits_per_pixel (0: binary pixdesc),
	i32 av_get_pix_fmt_loss (0: binary dst_pix_fmt, 1: binary src_pix_fmt, 2: i32 has_alpha),
	i32 av_pix_fmt_count_planes (0: binary pix_fmt),
	i32 av_pix_fmt_get_chroma_sub_sample (0: binary pix_fmt, 1: i32 h_shift, 2: i32 v_shift),
	void av_read_image_line2 (0: binary desc, 1: binary linesize, 2: binary data, 3: i32 c, 4: i32 dst_element_size, 5: i32 read_pal_component, 6: i32 w, 7: i32 x, 8: i32 y, 9: void dst),
	void av_read_image_line (0: binary desc, 1: binary linesize, 2: binary data, 3: i32 c, 4: i32 read_pal_component, 5: i32 w, 6: i32 x, 7: i32 y, 8: i16 dst),
	void av_write_image_line2 (0: binary desc, 1: binary linesize, 2: binary src, 3: i32 c, 4: i32 src_element_size, 5: i32 w, 6: i32 x, 7: i32 y, 8: binary data),
	void av_write_image_line (0: binary desc, 1: binary linesize, 2: binary src, 3: i32 c, 4: i32 w, 5: i32 x, 6: i32 y, 7: binary data),
	void ff_check_pixfmt_descriptors (),
	av_pixelutils_sad_fn av_pixelutils_get_sad_fn (0: i32 aligned, 1: i32 h_bits, 2: i32 w_bits, 3: void log_ctx),
	i32 ff_get_cpu_flags_ppc (),
	i64 ff_get_cpu_max_align_ppc (),
	void ff_vector_fmul_add_altivec (0: binary src0, 1: binary src1, 2: binary src2, 3: double dst, 4: i32 len),
	void ff_vector_fmul_altivec (0: binary src0, 1: binary src1, 2: double dst, 3: i32 len),
	void ff_vector_fmul_reverse_altivec (0: binary src0, 1: binary src1, 2: double dst, 3: i32 len),
	void ff_vector_fmul_window_altivec (0: binary src0, 1: binary src1, 2: binary win, 3: double dst, 4: i32 len),
	binary ff_float_dsp_init_ppc (0: AVFloatDSPContext fdsp, 1: i32 bit_exact),
	void ff_vector_fmul_add_vsx (0: binary src0, 1: binary src1, 2: binary src2, 3: double dst, 4: i32 len),
	void ff_vector_fmul_reverse_vsx (0: binary src0, 1: binary src1, 2: double dst, 3: i32 len),
	void ff_vector_fmul_vsx (0: binary src0, 1: binary src1, 2: double dst, 3: i32 len),
	void ff_vector_fmul_window_vsx (0: binary src0, 1: binary src1, 2: binary win, 3: double dst, 4: i32 len),
	binary av_read_bswap16 (0: binary p),
	binary av_read_bswap32 (0: binary p),
	binary av_read_bswap64 (0: binary p),
	binary av_write_bswap16 (0: i16 v, 1: void p),
	binary av_write_bswap32 (0: i32 v, 1: void p),
	binary av_write_bswap64 (0: i64 v, 1: void p),
	i64 read_time (),
	vec_u8 load_with_perm_vec (0: binary src, 1: i32 offset, 2: vec_u8 perm_vec),
	vec_u8 unaligned_load (0: binary src, 1: i32 offset),
	i32 av_get_random_seed (),
	AVRational av_add_q (0: AVRational b, 1: AVRational c),
	AVRational av_d2q (0: double d, 1: i32 max),
	AVRational av_div_q (0: AVRational b, 1: AVRational c),
	AVRational av_mul_q (0: AVRational b, 1: AVRational c),
	AVRational av_sub_q (0: AVRational b, 1: AVRational c),
	i32 av_find_nearest_q_idx (0: AVRational q, 1: binary q_list),
	i32 av_nearer_q (0: AVRational q1, 1: AVRational q2, 2: AVRational q),
	i32 av_reduce (0: i32 dst_den, 1: i32 dst_num, 2: i64 den, 3: i64 max, 4: i64 num),
	i32 av_q2intfloat (0: AVRational q),
	AVRational av_make_q (0: i32 den, 1: i32 num),
	binary av_inv_q (0: AVRational q),
	double av_q2d (0: AVRational a),
	i32 av_cmp_q (0: AVRational a, 1: AVRational b),
	AVRC4 av_rc4_alloc (),
	i32 av_rc4_init (0: AVRC4 r, 1: binary key, 2: i32 decrypt, 3: i32 key_bits),
	void av_rc4_crypt (0: AVRC4 r, 1: binary src, 2: i32 count, 3: i32 decrypt, 4: byte dst, 5: byte iv),
	binary av_ripemd_alloc (),
	binary av_ripemd_init (0: AVRIPEMD ctx, 1: i32 bits),
	void av_ripemd_final (0: AVRIPEMD ctx, 1: byte digest),
	void av_ripemd_update (0: AVRIPEMD ctx, 1: binary data, 2: binary len),
	binary av_get_alt_sample_fmt (0: binary sample_fmt, 1: i32 planar),
	binary av_get_packed_sample_fmt (0: binary sample_fmt),
	binary av_get_planar_sample_fmt (0: binary sample_fmt),
	binary av_get_sample_fmt (0: binary name),
	byte av_get_sample_fmt_string (0: binary sample_fmt, 1: byte buf, 2: i32 buf_size),
	binary av_get_sample_fmt_name (0: binary sample_fmt),
	i32 av_get_bytes_per_sample (0: binary sample_fmt),
	i32 av_sample_fmt_is_planar (0: binary sample_fmt),
	i32 av_samples_alloc_array_and_samples (0: binary sample_fmt, 1: i32 linesize, 2: i32 align, 3: i32 nb_channels, 4: i32 nb_samples, 5: byte audio_data),
	i32 av_samples_alloc (0: binary sample_fmt, 1: i32 linesize, 2: i32 align, 3: i32 nb_channels, 4: i32 nb_samples, 5: byte audio_data),
	i32 av_samples_copy (0: binary sample_fmt, 1: i32 dst_offset, 2: i32 nb_channels, 3: i32 nb_samples, 4: i32 src_offset, 5: byte src, 6: byte dst),
	i32 av_samples_fill_arrays (0: binary sample_fmt, 1: binary buf, 2: i32 linesize, 3: i32 align, 4: i32 nb_channels, 5: i32 nb_samples, 6: byte audio_data),
	i32 av_samples_get_buffer_size (0: binary sample_fmt, 1: i32 linesize, 2: i32 align, 3: i32 nb_channels, 4: i32 nb_samples),
	i32 av_samples_set_silence (0: binary sample_fmt, 1: i32 nb_channels, 2: i32 nb_samples, 3: i32 offset, 4: byte audio_data),
	binary av_bswap16 (0: i16 x),
	binary av_bswap32 (0: i32 x),
	binary av_sha_alloc (),
	binary av_sha_init (0: AVSHA ctx, 1: i32 bits),
	void av_sha_final (0: AVSHA ctx, 1: byte digest),
	void av_sha_update (0: binary ctx, 1: binary data, 2: binary len),
	binary av_sha512_alloc (),
	binary av_sha512_init (0: AVSHA512 ctx, 1: i32 bits),
	void av_sha512_final (0: AVSHA512 ctx, 1: byte digest),
	void av_sha512_update (0: AVSHA512 ctx, 1: binary data, 2: binary len),
	i32 avpriv_slicethread_create (0: AVSliceThread pctx, 1: i32 nb_threads, 2: binary main_func, 3: binary worker_func, 4: void priv),
	void avpriv_slicethread_execute (0: AVSliceThread ctx, 1: i32 execute_main, 2: i32 nb_jobs),
	void avpriv_slicethread_free (0: AVSliceThread pctx),
	binary av_sqrt_sf (0: SoftFloat val),
	binary av_add_sf (0: SoftFloat a, 1: SoftFloat b),
	binary av_div_sf (0: SoftFloat a, 1: SoftFloat b),
	binary av_int2sf (0: i32 frac_bits, 1: i32 v),
	binary av_mul_sf (0: SoftFloat a, 1: SoftFloat b),
	binary av_normalize1_sf (0: SoftFloat a),
	binary av_normalize_sf (0: SoftFloat a),
	binary av_sub_sf (0: SoftFloat a, 1: SoftFloat b),
	binary av_sf2double (0: SoftFloat v),
	binary av_cmp_sf (0: SoftFloat a, 1: SoftFloat b),
	binary av_gt_sf (0: SoftFloat a, 1: SoftFloat b),
	binary av_sf2int (0: SoftFloat v, 1: i32 frac_bits),
	binary av_sincos_sf (0: i32 c, 1: i32 s, 2: i32 a),
	SoftFloat_IEEE754 av_bits2sf_ieee754 (0: i32 n),
	SoftFloat_IEEE754 av_div_sf_ieee754 (0: SoftFloat_IEEE754 a, 1: SoftFloat_IEEE754 b),
	SoftFloat_IEEE754 av_int2sf_ieee754 (0: i64 n, 1: i32 e),
	SoftFloat_IEEE754 av_mul_sf_ieee754 (0: SoftFloat_IEEE754 a, 1: SoftFloat_IEEE754 b),
	SoftFloat_IEEE754 av_normalize_sf_ieee754 (0: SoftFloat_IEEE754 sf),
	i32 av_cmp_sf_ieee754 (0: SoftFloat_IEEE754 a, 1: SoftFloat_IEEE754 b),
	i32 av_sf2int_ieee754 (0: SoftFloat_IEEE754 a),
	AVSphericalMapping av_spherical_alloc (0: i64 size),
	binary av_spherical_projection_name (0: binary projection),
	i32 av_spherical_from_name (0: binary name),
	void av_spherical_tile_bounds (0: binary map, 1: i64 bottom, 2: i64 left, 3: i64 right, 4: i64 top, 5: i64 height, 6: i64 width),
	AVStereo3D av_stereo3d_alloc (),
	AVStereo3D av_stereo3d_create_side_data (0: AVFrame frame),
	binary av_stereo3d_type_name (0: binary type),
	i32 av_stereo3d_from_name (0: binary name),
	double ff_cbrt (0: double x),
	double ff_rint (0: double x),
	binary ff_llrint (0: double x),
	i32 ff_lrint (0: double x),
	binary av_tea_alloc (),
	void av_tea_crypt (0: AVTEA ctx, 1: binary src, 2: i32 count, 3: i32 decrypt, 4: byte dst, 5: byte iv),
	void av_tea_init (0: AVTEA ctx, 1: binary key, 2: i32 rounds),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (),
	i32 main (),
	i32 main (),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (),
	i32 main (),
	i32 main (0: binary argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: binary argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (),
	i32 main (),
	i32 main (),
	i32 main (),
	i32 main (),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (),
	i32 main (),
	i32 main (),
	i32 main (),
	i32 main (),
	i32 main (),
	i32 main (),
	i32 main (),
	i32 main (),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: binary argv, 1: i32 argc),
	i32 main (),
	i32 main (),
	i32 main (),
	i32 main (),
	i32 main (),
	i32 main (),
	i32 main (),
	i32 main (),
	i32 main (),
	i32 main (),
	i32 main (),
	i32 main (),
	i32 main (),
	i32 main (),
	i32 main (),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: binary argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (),
	i32 ff_mutex_destroy (0: AVMutex mutex),
	i32 ff_mutex_init (0: AVMutex mutex, 1: binary attr),
	i32 ff_mutex_lock (0: AVMutex mutex),
	i32 ff_mutex_unlock (0: AVMutex mutex),
	i32 ff_thread_once (0: byte control, 1: binary routine),
	i32 strict_pthread_cond_broadcast (0: pthread_cond_t cond),
	i32 strict_pthread_cond_destroy (0: pthread_cond_t cond),
	i32 strict_pthread_cond_init (0: binary attr, 1: pthread_cond_t cond),
	i32 strict_pthread_cond_signal (0: pthread_cond_t cond),
	i32 strict_pthread_cond_wait (0: pthread_cond_t cond, 1: pthread_mutex_t mutex),
	i32 strict_pthread_join (0: pthread_t thread, 1: void value_ptr),
	i32 strict_pthread_mutex_destroy (0: pthread_mutex_t mutex),
	i32 strict_pthread_mutex_init (0: binary attr, 1: pthread_mutex_t mutex),
	i32 strict_pthread_mutex_lock (0: pthread_mutex_t mutex),
	i32 strict_pthread_mutex_unlock (0: pthread_mutex_t mutex),
	i32 strict_pthread_once (0: pthread_once_t once_control, 1: binary init_routine),
	i32 av_thread_message_queue_alloc (0: AVThreadMessageQueue mq, 1: binary elsize, 2: binary nelem),
	i32 av_thread_message_queue_nb_elems (0: AVThreadMessageQueue mq),
	i32 av_thread_message_queue_recv (0: AVThreadMessageQueue mq, 1: binary flags, 2: void msg),
	i32 av_thread_message_queue_send (0: AVThreadMessageQueue mq, 1: binary flags, 2: void msg),
	void av_thread_message_flush (0: AVThreadMessageQueue mq),
	void av_thread_message_queue_free (0: AVThreadMessageQueue mq),
	void av_thread_message_queue_set_err_recv (0: AVThreadMessageQueue mq, 1: i32 err),
	void av_thread_message_queue_set_err_send (0: AVThreadMessageQueue mq, 1: i32 err),
	void av_thread_message_queue_set_free_func (0: AVThreadMessageQueue mq, 1: binary free_func),
	i64 av_gettime_relative (),
	i64 av_gettime (),
	i32 av_gettime_relative_is_monotonic (),
	i32 av_usleep (0: binary usec),
	binary gmtime_r (0: binary result, 1: binary clock),
	binary localtime_r (0: binary result, 1: binary clock),
	byte av_timecode_make_mpeg_tc_string (0: byte buf, 1: i32 tc25bit),
	byte av_timecode_make_smpte_tc_string (0: byte buf, 1: i32 prevent_df, 2: i32 tcsmpte),
	byte av_timecode_make_string (0: byte buf, 1: binary tc, 2: i32 framenum),
	i32 av_timecode_adjust_ntsc_framenum2 (0: i32 fps, 1: i32 framenum),
	i32 av_timecode_check_frame_rate (0: AVRational rate),
	i32 av_timecode_init_from_string (0: AVRational rate, 1: AVTimecode tc, 2: binary str, 3: void log_ctx),
	i32 av_timecode_init (0: AVRational rate, 1: AVTimecode tc, 2: i32 flags, 3: i32 frame_start, 4: void log_ctx),
	i32 av_timecode_get_smpte_from_framenum (0: binary tc, 1: i32 framenum),
	byte av_ts_make_string (0: byte buf, 1: i64 ts),
	byte av_ts_make_time_string (0: AVRational tb, 1: byte buf, 2: i64 ts),
	binary AV_RB16 (0: binary p),
	binary AV_RL16 (0: binary p),
	binary AV_RB32 (0: binary p),
	binary AV_RL32 (0: binary p),
	binary AV_WB16 (0: i16 v, 1: void p),
	binary AV_WB32 (0: i32 v, 1: void p),
	binary AV_WL16 (0: i16 v, 1: void p),
	binary AV_WL32 (0: i32 v, 1: void p),
	binary av_tree_node_alloc (),
	void av_tree_find (0: binary t, 1: binary cmp, 2: binary next, 3: void key),
	void av_tree_insert (0: AVTreeNode next, 1: AVTreeNode tp, 2: binary cmp, 3: void key),
	void av_tree_destroy (0: AVTreeNode t),
	void av_tree_enumerate (0: AVTreeNode t, 1: binary cmp, 2: binary enu, 3: void opaque),
	binary av_twofish_alloc (),
	binary av_twofish_init (0: AVTWOFISH cs, 1: binary key, 2: i32 key_bits),
	void av_twofish_crypt (0: AVTWOFISH cs, 1: binary src, 2: i32 count, 3: i32 decrypt, 4: byte dst, 5: byte iv),
	AVRational av_get_time_base_q (),
	byte av_fourcc_make_string (0: byte buf, 1: i32 fourcc),
	byte av_get_picture_type_char (0: binary pict_type),
	binary av_get_media_type_string (0: binary media_type),
	binary av_version_info (),
	binary avutil_configuration (),
	binary avutil_license (),
	binary av_int_list_length_for_size (0: binary list, 1: i64 term, 2: binary elsize),
	binary avutil_version (),
	void av_assert0_fpu (),
	binary utf8towchar (0: binary filename_utf8, 1: binary filename_w),
	binary av_bswap16 (0: i16 x, 1: binary x),
	binary av_bswap32 (0: i32 x),
	binary av_bswap16 (0: i16 x, 1: binary x),
	binary av_bswap64 (0: i64 x),
	i32 ff_get_cpu_flags_x86 (),
	i64 ff_get_cpu_max_align_x86 (),
	binary emms_c (),
	binary ff_fixed_dsp_init_x86 (0: AVFixedDSPContext fdsp),
	binary ff_float_dsp_init_x86 (0: AVFloatDSPContext fdsp),
	i32 ff_image_copy_plane_uc_from_x86 (0: binary src, 1: i32 height, 2: binary bytewidth, 3: binary dst_linesize, 4: binary src_linesize, 5: byte dst),
	binary av_clipd_sse2 (0: double amax, 1: double amin, 2: double a),
	binary av_clipf_sse (0: double amax, 1: double amin, 2: double a),
	binary ff_ctzll_x86 (0: binary v),
	binary ff_log2_x86 (0: binary v),
	binary av_mod_uintp2_bmi2 (0: binary a, 1: binary p),
	binary AV_COPY128 (0: binary s, 1: void d),
	binary AV_COPY64 (0: binary s, 1: void d),
	binary AV_SWAP64 (0: void a, 1: void b),
	binary AV_ZERO128 (0: void d),
	binary AV_ZERO64 (0: void d),
	binary ff_init_lls_x86 (0: LLSModel m),
	void ff_pixelutils_sad_init_x86 (0: av_pixelutils_sad_fn sad, 1: i32 aligned),
	i64 read_time (),
	AVXTEA av_xtea_alloc (),
	void av_xtea_crypt (0: AVXTEA ctx, 1: binary src, 2: i32 count, 3: i32 decrypt, 4: byte dst, 5: byte iv),
	void av_xtea_init (0: AVXTEA ctx, 1: binary key),
	void av_xtea_le_crypt (0: AVXTEA ctx, 1: binary src, 2: i32 count, 3: i32 decrypt, 4: byte dst, 5: byte iv),
	void av_xtea_le_init (0: AVXTEA ctx, 1: binary key),
	binary pp_get_context (0: i32 cpuCaps, 1: i32 height, 2: i32 width),
	binary pp_free_context (0: void vc),
	binary postproc_configuration (),
	binary postproc_license (),
	i32 horizClassify_C (0: binary c, 1: binary src, 2: i32 stride),
	i32 isHorizDC_C (0: binary c, 1: binary src, 2: i32 stride),
	i32 isHorizMinMaxOk_C (0: binary src, 1: i32 QP, 2: i32 stride),
	i32 isVertDC_C (0: binary c, 1: binary src, 2: i32 stride),
	i32 isVertMinMaxOk_C (0: binary src, 1: i32 QP, 2: i32 stride),
	i32 vertClassify_C (0: binary c, 1: binary src, 2: i32 stride),
	pp_mode pp_get_mode_by_name_and_quality (0: binary name, 1: i32 quality),
	binary postproc_version (),
	void doHorizDefFilter_C (0: binary c, 1: i32 stride, 2: binary dst),
	void doHorizLowPass_C (0: binary c, 1: i32 stride, 2: binary dst),
	void horizX1Filter (0: i32 QP, 1: i32 stride, 2: byte src),
	void postProcess (0: binary QPs, 1: binary src, 2: i32 QPStride, 3: i32 dstStride, 4: i32 height, 5: i32 isColor, 6: i32 srcStride, 7: i32 width, 8: pp_context vc, 9: pp_mode vm, 10: binary dst),
	void pp_free_mode (0: pp_mode mode),
	void pp_postprocess (0: binary QP_store, 1: binary dstStride, 2: binary srcStride, 3: binary src, 4: i32 QPStride, 5: i32 height, 6: i32 pict_type, 7: i32 width, 8: pp_mode vm, 9: binary dst, 10: void vc),
	i32 vertClassify_altivec (0: PPContext c, 1: i32 stride, 2: binary src),
	void dering_altivec (0: PPContext c, 1: i32 stride, 2: binary src),
	void doVertDefFilter_altivec (0: PPContext c, 1: i32 stride, 2: binary src),
	void doVertLowPass_altivec (0: PPContext c, 1: i32 stride, 2: byte src),
	void tempNoiseReducer_altivec (0: i32 maxNoise, 1: i32 stride, 2: i32 tempBlurredPast, 3: byte src, 4: byte tempBlurred),
	void transpose_16x8_char_toPackedAlign_altivec (0: i32 stride, 1: binary dst, 2: binary src),
	void transpose_8x16_char_fromPackedAlign_altivec (0: i32 stride, 1: binary dst, 2: binary src),
	void linecpy (0: binary src, 1: i32 lines, 2: i32 stride, 3: void dest),
	i32 RENAME (),
	void RENAME (),
	binary swri_audio_convert_init_aarch64 (0: binary in_fmt, 1: binary out_fmt, 2: binary ac, 3: i32 channels),
	binary wrap (0: binary in_count),
	binary DECLARE_RESAMPLE_COMMON_TEMPLATE (),
	binary swri_audio_convert_init_arm (0: binary in_fmt, 1: binary out_fmt, 2: binary ac, 3: i32 channels),
	binary wrap (0: binary in_count),
	binary DECLARE_RESAMPLE_COMMON_TEMPLATE (),
	AudioConvert swri_audio_convert_alloc (0: binary in_fmt, 1: binary out_fmt, 2: binary ch_map, 3: i32 channels, 4: i32 flags),
	i32 swri_audio_convert (0: AudioConvert ctx, 1: AudioData in, 2: AudioData out, 3: i32 len),
	void swri_audio_convert_free (0: AudioConvert ctx),
	binary swri_dither_init (0: binary in_fmt, 1: binary out_fmt, 2: SwrContext s),
	i32 swri_get_dither (0: binary noise_fmt, 1: SwrContext s, 2: i32 len, 3: binary seed, 4: void dst),
	binary RENAME (),
	binary swr_alloc (),
	binary swr_get_class (),
	binary swr_build_matrix (0: binary matrix_encoding, 1: double matrix_param, 2: double center_mix_level, 3: double lfe_mix_level, 4: double maxval, 5: double rematrix_volume, 6: double surround_mix_level, 7: i32 stride, 8: i64 in_ch_layout_param, 9: i64 out_ch_layout_param, 10: void log_context),
	binary swri_rematrix_init (0: SwrContext s),
	binary swri_rematrix_free (0: SwrContext s),
	i32 swr_set_matrix (0: binary s, 1: binary matrix, 2: i32 stride),
	i32 swri_rematrix (0: AudioData in, 1: AudioData out, 2: SwrContext s, 3: i32 len, 4: i32 mustcopy),
	double eval_poly (0: binary coeff, 1: double x, 2: i32 size),
	void swri_resample_dsp_init (0: ResampleContext c),
	binary swr_alloc_set_opts (0: binary in_sample_fmt, 1: binary out_sample_fmt, 2: binary s, 3: i64 in_ch_layout, 4: i64 out_ch_layout, 5: i32 in_sample_rate, 6: i32 log_offset, 7: i32 out_sample_rate, 8: void log_ctx),
	binary swr_init (0: binary s),
	binary swr_close (0: SwrContext s),
	binary swr_free (0: SwrContext ss),
	binary swresample_configuration (),
	binary swresample_license (),
	binary swr_convert (0: binary s, 1: binary in_arg, 2: i32 in_count, 3: i32 out_count, 4: binary out_arg),
	i64 swr_get_delay (0: binary s, 1: i64 base),
	i64 swr_next_pts (0: binary s, 1: i64 pts),
	i32 swr_drop_output (0: binary s, 1: i32 count),
	i32 swr_get_out_samples (0: binary s, 1: i32 in_samples),
	i32 swr_inject_silence (0: binary s, 1: i32 count),
	i32 swr_is_initialized (0: binary s),
	i32 swr_set_channel_mapping (0: binary s, 1: binary channel_map),
	i32 swr_set_compensation (0: binary s, 1: i32 compensation_distance, 2: i32 sample_delta),
	i32 swri_realloc_audio (0: AudioData a, 1: i32 count),
	binary swresample_version (),
	i32 available_samples (0: AVFrame out),
	i32 convert_frame (0: AVFrame out, 1: SwrContext s, 2: binary in),
	i32 swr_config_frame (0: SwrContext s, 1: binary in, 2: binary out),
	i32 swr_convert_frame (0: AVFrame out, 1: SwrContext s, 2: binary in),
	i32 main (0: byte argv, 1: i32 argc),
	_ PROTO4 (),
	binary D (),
	binary swri_resample_dsp_x86_init (0: ResampleContext c),
	binary wrap (0: binary in_count),
	binary ff_sws_init_swscale_aarch64 (0: SwsContext c),
	void ff_get_unscaled_swscale_aarch64 (0: SwsContext c),
	i32 ff_sws_alphablendaway (0: SwsContext c, 1: binary src, 2: binary dstStride, 3: binary srcStride, 4: i32 srcSliceH, 5: i32 srcSliceY, 6: binary dst),
	binary ff_sws_init_swscale_arm (0: SwsContext c),
	void ff_get_unscaled_swscale_arm (0: SwsContext c),
	i32 ff_init_gamma_convert (0: SwsFilterDescriptor desc, 1: SwsSlice src, 2: i16 table),
	i32 ff_init_desc_cfmt_convert (0: SwsFilterDescriptor desc, 1: SwsSlice dst, 2: SwsSlice src, 3: i32 pal),
	i32 ff_init_desc_chscale (0: SwsFilterDescriptor desc, 1: SwsSlice dst, 2: SwsSlice src, 3: i32 filter_pos, 4: i32 filter_size, 5: i32 xInc, 6: i16 filter),
	i32 ff_init_desc_fmt_convert (0: SwsFilterDescriptor desc, 1: SwsSlice dst, 2: SwsSlice src, 3: i32 pal),
	i32 ff_init_desc_hscale (0: SwsFilterDescriptor desc, 1: SwsSlice dst, 2: SwsSlice src, 3: i32 filter_pos, 4: i32 filter_size, 5: i32 xInc, 6: i16 filter),
	i32 ff_init_desc_no_chr (0: SwsFilterDescriptor desc, 1: SwsSlice dst, 2: SwsSlice src),
	void ff_hcscale_fast_c (0: SwsContext c, 1: binary src1, 2: binary src2, 3: i16 dst1, 4: i16 dst2, 5: i32 dstWidth, 6: i32 srcW, 7: i32 xInc),
	void ff_hyscale_fast_c (0: SwsContext c, 1: binary src, 2: i16 dst, 3: i32 dstWidth, 4: i32 srcW, 5: i32 xInc),
	binary ff_sws_init_input_funcs (0: SwsContext c),
	binary sws_get_class (),
	binary ff_sws_init_output_funcs (0: SwsContext c, 1: yuv2anyX_fn yuv2anyX, 2: yuv2interleavedX_fn yuv2nv12cX, 3: yuv2packed1_fn yuv2packed1, 4: yuv2packed2_fn yuv2packed2, 5: yuv2packedX_fn yuv2packedX, 6: yuv2planar1_fn yuv2plane1, 7: yuv2planarX_fn yuv2planeX),
	binary yuv2plane1_float (),
	void yuv2planeX_u (0: binary src, 1: binary filter, 2: binary dither, 3: i32 dstW, 4: i32 filterSize, 5: i32 offset, 6: i32 x, 7: byte dest),
	binary ff_yuv2rgb_init_ppc (0: SwsContext c),
	binary ff_yuv2rgb_init_tables_ppc (0: SwsContext c, 1: binary inv_table, 2: i32 brightness, 3: i32 contrast, 4: i32 saturation),
	void cvtyuvtoRGB (0: SwsContext c, 1: binary B, 2: binary G, 3: binary R, 4: binary U, 5: binary V, 6: binary Y),
	binary ff_get_unscaled_swscale_ppc (0: SwsContext c),
	binary ff_sws_rgb2rgb_init (),
	void rgb12to15 (0: binary src, 1: i32 src_size, 2: byte dst),
	void rgb12tobgr12 (0: binary src, 1: i32 src_size, 2: byte dst),
	void rgb15to24 (0: binary src, 1: i32 src_size, 2: byte dst),
	void rgb15tobgr15 (0: binary src, 1: i32 src_size, 2: byte dst),
	void rgb15tobgr16 (0: binary src, 1: i32 src_size, 2: byte dst),
	void rgb15tobgr32 (0: binary src, 1: i32 src_size, 2: byte dst),
	void rgb16to24 (0: binary src, 1: i32 src_size, 2: byte dst),
	void rgb16tobgr15 (0: binary src, 1: i32 src_size, 2: byte dst),
	void rgb16tobgr16 (0: binary src, 1: i32 src_size, 2: byte dst),
	void rgb16tobgr32 (0: binary src, 1: i32 src_size, 2: byte dst),
	void rgb24to32 (0: binary src, 1: i32 src_size, 2: byte dst),
	void rgb32to24 (0: binary src, 1: i32 src_size, 2: byte dst),
	void ff_rgb24toyv12_c (0: binary src, 1: i32 rgb2yuv, 2: i32 chromStride, 3: i32 height, 4: i32 lumStride, 5: i32 srcStride, 6: i32 width, 7: byte udst, 8: byte vdst, 9: byte ydst),
	void planar2x_c (0: binary src, 1: i32 dstStride, 2: i32 srcHeight, 3: i32 srcStride, 4: i32 srcWidth, 5: byte dst),
	void rgb15to16_c (0: binary src, 1: i32 src_size, 2: byte dst),
	void rgb15to32_c (0: binary src, 1: i32 src_size, 2: byte dst),
	void rgb15tobgr24_c (0: binary src, 1: i32 src_size, 2: byte dst),
	void rgb16to15_c (0: binary src, 1: i32 src_size, 2: byte dst),
	void rgb16to32_c (0: binary src, 1: i32 src_size, 2: byte dst),
	void rgb16tobgr24_c (0: binary src, 1: i32 src_size, 2: byte dst),
	void rgb24to15_c (0: binary src, 1: i32 src_size, 2: byte dst),
	void rgb24to16_c (0: binary src, 1: i32 src_size, 2: byte dst),
	void rgb24tobgr15_c (0: binary src, 1: i32 src_size, 2: byte dst),
	void rgb24tobgr16_c (0: binary src, 1: i32 src_size, 2: byte dst),
	void rgb24tobgr32_c (0: binary src, 1: i32 src_size, 2: byte dst),
	void rgb32to15_c (0: binary src, 1: i32 src_size, 2: byte dst),
	void rgb32to16_c (0: binary src, 1: i32 src_size, 2: byte dst),
	void rgb32tobgr15_c (0: binary src, 1: i32 src_size, 2: byte dst),
	void rgb32tobgr16_c (0: binary src, 1: i32 src_size, 2: byte dst),
	void rgb32tobgr24_c (0: binary src, 1: i32 src_size, 2: byte dst),
	void shuffle_bytes_0321_c (0: binary src, 1: i32 src_size, 2: byte dst),
	void shuffle_bytes_2103_c (0: binary src, 1: i32 src_size, 2: byte dst),
	void uyvytoyv12_c (0: binary src, 1: i32 chromStride, 2: i32 height, 3: i32 lumStride, 4: i32 srcStride, 5: i32 width, 6: byte udst, 7: byte vdst, 8: byte ydst),
	void vu9_to_vu12_c (0: binary src1, 1: binary src2, 2: i32 dstStride1, 3: i32 dstStride2, 4: i32 height, 5: i32 srcStride1, 6: i32 srcStride2, 7: i32 width, 8: byte dst1, 9: byte dst2),
	void yuv422ptouyvy_c (0: binary usrc, 1: binary vsrc, 2: binary ysrc, 3: i32 chromStride, 4: i32 dstStride, 5: i32 height, 6: i32 lumStride, 7: i32 width, 8: byte dst),
	void yuv422ptoyuy2_c (0: binary usrc, 1: binary vsrc, 2: binary ysrc, 3: i32 chromStride, 4: i32 dstStride, 5: i32 height, 6: i32 lumStride, 7: i32 width, 8: byte dst),
	void yuvPlanartouyvy_c (0: binary usrc, 1: binary vsrc, 2: binary ysrc, 3: i32 chromStride, 4: i32 dstStride, 5: i32 height, 6: i32 lumStride, 7: i32 vertLumPerChroma, 8: i32 width, 9: byte dst),
	void yuvPlanartoyuy2_c (0: binary usrc, 1: binary vsrc, 2: binary ysrc, 3: i32 chromStride, 4: i32 dstStride, 5: i32 height, 6: i32 lumStride, 7: i32 vertLumPerChroma, 8: i32 width, 9: byte dst),
	void yuy2toyv12_c (0: binary src, 1: i32 chromStride, 2: i32 height, 3: i32 lumStride, 4: i32 srcStride, 5: i32 width, 6: byte udst, 7: byte vdst, 8: byte ydst),
	void yv12touyvy_c (0: binary usrc, 1: binary vsrc, 2: binary ysrc, 3: i32 chromStride, 4: i32 dstStride, 5: i32 height, 6: i32 lumStride, 7: i32 width, 8: byte dst),
	void yv12toyuy2_c (0: binary usrc, 1: binary vsrc, 2: binary ysrc, 3: i32 chromStride, 4: i32 dstStride, 5: i32 height, 6: i32 lumStride, 7: i32 width, 8: byte dst),
	void yvu9_to_yuy2_c (0: binary src1, 1: binary src2, 2: binary src3, 3: i32 dstStride, 4: i32 height, 5: i32 srcStride1, 6: i32 srcStride2, 7: i32 srcStride3, 8: i32 width, 9: byte dst),
	i32 ff_free_filters (0: SwsContext c),
	i32 ff_init_filters (0: SwsContext c),
	i32 ff_init_slice_from_src (0: SwsSlice s, 1: binary stride, 2: i32 chrH, 3: i32 chrY, 4: i32 lumH, 5: i32 lumY, 6: i32 relative, 7: i32 srcW, 8: binary src),
	i32 ff_rotate_slice (0: SwsSlice s, 1: i32 chr, 2: i32 lum),
	SwsFunc ff_getSwsFunc (0: SwsContext c),
	binary ff_sws_init_range_convert (0: SwsContext c),
	binary sws_scale (0: binary c, 1: binary dstStride, 2: binary srcStride, 3: binary srcSlice, 4: i32 srcSliceH, 5: i32 srcSliceY, 6: binary dst),
	binary is16BPS (0: binary pix_fmt),
	binary isALPHA (0: binary pix_fmt),
	binary isAnyRGB (0: binary pix_fmt),
	binary isBE (0: binary pix_fmt),
	binary isBGRinInt (0: binary pix_fmt),
	binary isBayer (0: binary pix_fmt),
	binary isFloat (0: binary pix_fmt),
	binary isGray (0: binary pix_fmt),
	binary isNBPS (0: binary pix_fmt),
	binary isPackedRGB (0: binary pix_fmt),
	binary isPacked (0: binary pix_fmt),
	binary isPlanarRGB (0: binary pix_fmt),
	binary isPlanarYUV (0: binary pix_fmt),
	binary isPlanar (0: binary pix_fmt),
	binary isRGBinInt (0: binary pix_fmt),
	binary isRGB (0: binary pix_fmt),
	binary isSemiPlanarYUV (0: binary pix_fmt),
	binary isYUV (0: binary pix_fmt),
	binary usePal (0: binary pix_fmt),
	void fillPlane16 (0: binary big_endian, 1: i32 alpha, 2: i32 bits, 3: i32 height, 4: i32 stride, 5: i32 width, 6: i32 y, 7: byte plane),
	void ff_get_unscaled_swscale (0: SwsContext c),
	void sws_convertPalette8ToPacked24 (0: binary palette, 1: binary src, 2: i32 num_pixels, 3: byte dst),
	void sws_convertPalette8ToPacked32 (0: binary palette, 1: binary src, 2: i32 num_pixels, 3: byte dst),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (),
	i32 main (0: byte argv, 1: i32 argc),
	binary sws_getCachedContext (0: binary dstFormat, 1: binary srcFormat, 2: binary context, 3: SwsFilter dstFilter, 4: SwsFilter srcFilter, 5: binary param, 6: i32 dstH, 7: i32 dstW, 8: i32 flags, 9: i32 srcH, 10: i32 srcW),
	SwsContext sws_alloc_context (),
	SwsContext sws_alloc_set_opts (0: binary dstFormat, 1: binary srcFormat, 2: binary param, 3: i32 dstH, 4: i32 dstW, 5: i32 flags, 6: i32 srcH, 7: i32 srcW),
	SwsContext sws_getContext (0: binary dstFormat, 1: binary srcFormat, 2: SwsFilter dstFilter, 3: SwsFilter srcFilter, 4: binary param, 5: i32 dstH, 6: i32 dstW, 7: i32 flags, 8: i32 srcH, 9: i32 srcW),
	SwsFilter sws_getDefaultFilter (0: double chromaGBlur, 1: double chromaHShift, 2: double chromaSharpen, 3: double chromaVShift, 4: double lumaGBlur, 5: double lumaSharpen, 6: i32 verbose),
	SwsVector sws_allocVec (0: i32 length),
	SwsVector sws_cloneVec (0: SwsVector a),
	SwsVector sws_getGaussianVec (0: double quality, 1: double variance),
	binary sws_init_context (0: SwsContext c, 1: SwsFilter dstFilter, 2: SwsFilter srcFilter),
	binary swscale_configuration (),
	binary swscale_license (),
	i32 sws_getColorspaceDetails (0: binary c, 1: i32 inv_table, 2: i32 table, 3: i32 brightness, 4: i32 contrast, 5: i32 dstRange, 6: i32 saturation, 7: i32 srcRange),
	i32 sws_isSupportedEndiannessConversion (0: binary pix_fmt),
	i32 sws_isSupportedInput (0: binary pix_fmt),
	i32 sws_isSupportedOutput (0: binary pix_fmt),
	i32 sws_setColorspaceDetails (0: binary c, 1: binary inv_table, 2: binary table, 3: i32 brightness, 4: i32 contrast, 5: i32 dstRange, 6: i32 saturation, 7: i32 srcRange),
	binary swscale_version (),
	void sws_convVec (0: SwsVector a, 1: SwsVector b),
	void sws_freeContext (0: SwsContext c),
	void sws_freeFilter (0: SwsFilter filter),
	void sws_freeVec (0: SwsVector a),
	void sws_normalizeVec (0: SwsVector a, 1: double height),
	void sws_scaleVec (0: SwsVector a, 1: double scalar),
	void sws_subVec (0: SwsVector a, 1: SwsVector b),
	i32 ff_init_vscale (0: SwsContext c, 1: SwsFilterDescriptor desc, 2: SwsSlice dst, 3: SwsSlice src),
	void ff_init_vscale_pfn (0: SwsContext c, 1: i32 use_mmx, 2: yuv2anyX_fn yuv2anyX, 3: yuv2interleavedX_fn yuv2nv12cX, 4: yuv2packed1_fn yuv2packed1, 5: yuv2packed2_fn yuv2packed2, 6: yuv2packedX_fn yuv2packedX, 7: yuv2planar1_fn yuv2plane1, 8: yuv2planarX_fn yuv2planeX),
	binary ff_init_hscaler_mmxext (0: i16 filter, 1: i32 filterPos, 2: i32 dstW, 3: i32 numSplits, 4: i32 xInc, 5: byte filterCode),
	void ff_hcscale_fast_mmxext (0: SwsContext c, 1: binary src1, 2: binary src2, 3: i16 dst1, 4: i16 dst2, 5: i32 dstWidth, 6: i32 srcW, 7: i32 xInc),
	void ff_hyscale_fast_mmxext (0: SwsContext c, 1: binary src, 2: i16 dst, 3: i32 dstWidth, 4: i32 srcW, 5: i32 xInc),
	binary rgb2rgb_init_x86 (),
	void RENAME (),
	binary ff_sws_init_swscale_x86 (0: SwsContext c),
	void ff_updateMMXDitherTables (0: SwsContext c, 1: i32 chrBufIndex, 2: i32 dstY, 3: i32 lastInChrBuf, 4: i32 lastInLumBuf, 5: i32 lumBufIndex),
	binary wrap (0: binary dstStride),
	binary ff_yuv2rgb_init_x86 (0: SwsContext c),
	i32 RENAME (),
	binary ff_yuv2rgb_get_func_ptr (0: SwsContext c),
	binary ff_yuv2rgb_c_init_tables (0: SwsContext c, 1: binary inv_table, 2: i32 brightness, 3: i32 contrast, 4: i32 fullRange, 5: i32 saturation),
	binary sws_getCoefficients (0: i32 colorspace),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: binary argv, 1: i32 argc),
	i32 main (),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte av, 1: i32 ac),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (),
	void checkasm_check_aacpsdsp (),
	void checkasm_check_afir (),
	void checkasm_check_alacdsp (),
	void checkasm_check_audiodsp (),
	void checkasm_check_blockdsp (),
	void checkasm_check_bswapdsp (),
	CheckasmPerf checkasm_get_perf_context (),
	i32 checkasm_bench_func (),
	i32 double_near_abs_eps_array (0: binary a, 1: binary b, 2: double eps, 3: binary len),
	i32 double_near_abs_eps (0: double a, 1: double b, 2: double eps),
	i32 float_near_abs_eps_array_ulp (0: binary a, 1: binary b, 2: double eps, 3: binary len, 4: binary max_ulp),
	i32 float_near_abs_eps_array (0: binary a, 1: binary b, 2: double eps, 3: binary len),
	i32 float_near_abs_eps_ulp (0: double a, 1: double b, 2: double eps, 3: binary max_ulp),
	i32 float_near_abs_eps (0: double a, 1: double b, 2: double eps),
	i32 float_near_ulp_array (0: binary a, 1: binary b, 2: binary len, 3: binary max_ulp),
	i32 float_near_ulp (0: double a, 1: double b, 2: binary max_ulp),
	i32 main (0: binary argv, 1: i32 argc),
	void checkasm_check_func (0: binary name, 1: void func),
	void checkasm_fail_func (0: binary msg),
	void checkasm_report (0: binary name),
	void checkasm_check_exrdsp (),
	void checkasm_check_fixed_dsp (),
	void checkasm_check_flacdsp (),
	void checkasm_check_float_dsp (),
	void checkasm_check_fmtconvert (),
	void checkasm_check_g722dsp (),
	void checkasm_check_h264dsp (),
	void checkasm_check_h264pred (),
	void checkasm_check_h264qpel (),
	void checkasm_check_hevc_add_res (),
	void checkasm_check_hevc_idct (),
	void checkasm_check_hevc_sao (),
	void checkasm_check_huffyuvdsp (),
	void checkasm_check_jpeg2000dsp (),
	void checkasm_check_llviddsp (),
	void checkasm_check_llviddspenc (),
	void checkasm_check_pixblockdsp (),
	void checkasm_check_sbrdsp (),
	void checkasm_check_sw_rgb (),
	void checkasm_check_synth_filter (),
	void checkasm_check_utvideodsp (),
	void checkasm_check_v210enc (),
	void checkasm_check_blend (),
	void checkasm_check_colorspace (),
	void checkasm_check_vf_hflip (),
	void checkasm_check_nlmeans (),
	void checkasm_check_vf_threshold (),
	void checkasm_check_videodsp (),
	void checkasm_check_vp8dsp (),
	void checkasm_check_vp9dsp (),
	binary audio_match (),
	binary compare (),
	binary concat (),
	binary crc (),
	binary do_tiny_psnr (),
	binary enc_dec_pcm (),
	binary enc_dec (),
	binary ffmetadata (),
	binary ffmpeg (),
	binary fmtstdout (),
	binary framecrc (),
	binary framemd5 (),
	binary gaplessenc (),
	binary gapless (),
	binary lavffatetest (),
	binary lavftest (),
	binary md5pipe (),
	binary md5 (),
	binary null (),
	binary oneline (),
	binary oneoff (),
	binary pcm (),
	binary pixfmts (),
	binary probechapters (),
	binary probefmt (),
	binary probeframes (),
	binary probegaplessinfo (),
	binary probetags (),
	binary refcmp_metadata (),
	binary runecho (),
	binary runlocal (),
	binary run (),
	binary stddev (),
	binary stream_remux (),
	binary target_path (),
	binary transcode (),
	binary video_filter (),
	binary checkout (),
	binary clean (),
	binary compile (),
	binary configure (),
	binary die (),
	binary fail (),
	binary fate (),
	binary lock (),
	binary report (),
	binary update (),
	binary do_audio_only (),
	binary do_image_formats (),
	binary do_lavf_fate (),
	binary do_lavf_timecode_drop (),
	binary do_lavf_timecode_nodrop (),
	binary do_lavf_timecode (),
	binary do_lavf (),
	binary do_streamed_images (),
	binary do_md5sum (),
	binary abs (),
	binary is_numeric_str (),
	binary max (),
	binary do_avconv_crc (),
	binary do_avconv_nomd5 (),
	binary do_avconv (),
	binary echov (),
	binary run_avconv (),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: binary argv, 1: i32 argc),
	double ssim_plane (0: i32 cnt, 1: binary stride1, 2: binary stride2, 3: i32 height, 4: i32 width, 5: pixel pix1, 6: pixel pix2, 7: void buf),
	i32 main (0: binary argv, 1: i32 argc),
	i64 ssd_plane (0: binary pix1, 1: binary pix2, 2: i32 size),
	i32 main (0: byte argv, 1: i32 argc),
	void print_help (0: binary name),
	i32 main (0: byte argv, 1: i32 argc),
	void av_free (0: void ptr),
	void av_mallocz (0: i64 size),
	void av_malloc (0: i64 size),
	void av_realloc (0: i64 size, 1: void ptr),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: binary argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	binary die (),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	binary hiegrep2 (),
	binary hiegrep (),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: binary argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	binary show_help (),
	i32 LLVMFuzzerTestOneInput (0: binary data, 1: i64 size),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
	i32 main (0: byte argv, 1: i32 argc),
}
